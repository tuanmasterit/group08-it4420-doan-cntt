#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Linq
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="do_an_g08")]
	public partial class MyLinqDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAffiliate(Affiliate instance);
    partial void UpdateAffiliate(Affiliate instance);
    partial void DeleteAffiliate(Affiliate instance);
    partial void InsertzWorkProcess(zWorkProcess instance);
    partial void UpdatezWorkProcess(zWorkProcess instance);
    partial void DeletezWorkProcess(zWorkProcess instance);
    partial void InsertAnonymousUser(AnonymousUser instance);
    partial void UpdateAnonymousUser(AnonymousUser instance);
    partial void DeleteAnonymousUser(AnonymousUser instance);
    partial void Insertaspnet_Application(aspnet_Application instance);
    partial void Updateaspnet_Application(aspnet_Application instance);
    partial void Deleteaspnet_Application(aspnet_Application instance);
    partial void Insertaspnet_Membership(aspnet_Membership instance);
    partial void Updateaspnet_Membership(aspnet_Membership instance);
    partial void Deleteaspnet_Membership(aspnet_Membership instance);
    partial void Insertaspnet_Profile(aspnet_Profile instance);
    partial void Updateaspnet_Profile(aspnet_Profile instance);
    partial void Deleteaspnet_Profile(aspnet_Profile instance);
    partial void Insertaspnet_Role(aspnet_Role instance);
    partial void Updateaspnet_Role(aspnet_Role instance);
    partial void Deleteaspnet_Role(aspnet_Role instance);
    partial void Insertaspnet_SchemaVersion(aspnet_SchemaVersion instance);
    partial void Updateaspnet_SchemaVersion(aspnet_SchemaVersion instance);
    partial void Deleteaspnet_SchemaVersion(aspnet_SchemaVersion instance);
    partial void Insertaspnet_User(aspnet_User instance);
    partial void Updateaspnet_User(aspnet_User instance);
    partial void Deleteaspnet_User(aspnet_User instance);
    partial void Insertaspnet_UsersInRole(aspnet_UsersInRole instance);
    partial void Updateaspnet_UsersInRole(aspnet_UsersInRole instance);
    partial void Deleteaspnet_UsersInRole(aspnet_UsersInRole instance);
    partial void InsertAssembly(Assembly instance);
    partial void UpdateAssembly(Assembly instance);
    partial void DeleteAssembly(Assembly instance);
    partial void InsertAuthentication(Authentication instance);
    partial void UpdateAuthentication(Authentication instance);
    partial void DeleteAuthentication(Authentication instance);
    partial void InsertBanner(Banner instance);
    partial void UpdateBanner(Banner instance);
    partial void DeleteBanner(Banner instance);
    partial void InsertClassification(Classification instance);
    partial void UpdateClassification(Classification instance);
    partial void DeleteClassification(Classification instance);
    partial void InsertContentItem(ContentItem instance);
    partial void UpdateContentItem(ContentItem instance);
    partial void DeleteContentItem(ContentItem instance);
    partial void InsertContentItems_MetaData(ContentItems_MetaData instance);
    partial void UpdateContentItems_MetaData(ContentItems_MetaData instance);
    partial void DeleteContentItems_MetaData(ContentItems_MetaData instance);
    partial void InsertContentItems_Tag(ContentItems_Tag instance);
    partial void UpdateContentItems_Tag(ContentItems_Tag instance);
    partial void DeleteContentItems_Tag(ContentItems_Tag instance);
    partial void InsertContentType(ContentType instance);
    partial void UpdateContentType(ContentType instance);
    partial void DeleteContentType(ContentType instance);
    partial void InsertCoreMessaging_MessageAttachment(CoreMessaging_MessageAttachment instance);
    partial void UpdateCoreMessaging_MessageAttachment(CoreMessaging_MessageAttachment instance);
    partial void DeleteCoreMessaging_MessageAttachment(CoreMessaging_MessageAttachment instance);
    partial void InsertCoreMessaging_MessageRecipient(CoreMessaging_MessageRecipient instance);
    partial void UpdateCoreMessaging_MessageRecipient(CoreMessaging_MessageRecipient instance);
    partial void DeleteCoreMessaging_MessageRecipient(CoreMessaging_MessageRecipient instance);
    partial void InsertCoreMessaging_Message(CoreMessaging_Message instance);
    partial void UpdateCoreMessaging_Message(CoreMessaging_Message instance);
    partial void DeleteCoreMessaging_Message(CoreMessaging_Message instance);
    partial void InsertCoreMessaging_NotificationTypeAction(CoreMessaging_NotificationTypeAction instance);
    partial void UpdateCoreMessaging_NotificationTypeAction(CoreMessaging_NotificationTypeAction instance);
    partial void DeleteCoreMessaging_NotificationTypeAction(CoreMessaging_NotificationTypeAction instance);
    partial void InsertCoreMessaging_NotificationType(CoreMessaging_NotificationType instance);
    partial void UpdateCoreMessaging_NotificationType(CoreMessaging_NotificationType instance);
    partial void DeleteCoreMessaging_NotificationType(CoreMessaging_NotificationType instance);
    partial void InsertDashboard_Control(Dashboard_Control instance);
    partial void UpdateDashboard_Control(Dashboard_Control instance);
    partial void DeleteDashboard_Control(Dashboard_Control instance);
    partial void InsertDesktopModulePermission(DesktopModulePermission instance);
    partial void UpdateDesktopModulePermission(DesktopModulePermission instance);
    partial void DeleteDesktopModulePermission(DesktopModulePermission instance);
    partial void InsertDesktopModule(DesktopModule instance);
    partial void UpdateDesktopModule(DesktopModule instance);
    partial void DeleteDesktopModule(DesktopModule instance);
    partial void InsertEventLog(EventLog instance);
    partial void UpdateEventLog(EventLog instance);
    partial void DeleteEventLog(EventLog instance);
    partial void InsertEventLogConfig(EventLogConfig instance);
    partial void UpdateEventLogConfig(EventLogConfig instance);
    partial void DeleteEventLogConfig(EventLogConfig instance);
    partial void InsertEventLogType(EventLogType instance);
    partial void UpdateEventLogType(EventLogType instance);
    partial void DeleteEventLogType(EventLogType instance);
    partial void InsertEventQueue(EventQueue instance);
    partial void UpdateEventQueue(EventQueue instance);
    partial void DeleteEventQueue(EventQueue instance);
    partial void InsertFile(File instance);
    partial void UpdateFile(File instance);
    partial void DeleteFile(File instance);
    partial void InsertFolderMapping(FolderMapping instance);
    partial void UpdateFolderMapping(FolderMapping instance);
    partial void DeleteFolderMapping(FolderMapping instance);
    partial void InsertFolderMappingsSetting(FolderMappingsSetting instance);
    partial void UpdateFolderMappingsSetting(FolderMappingsSetting instance);
    partial void DeleteFolderMappingsSetting(FolderMappingsSetting instance);
    partial void InsertFolderPermission(FolderPermission instance);
    partial void UpdateFolderPermission(FolderPermission instance);
    partial void DeleteFolderPermission(FolderPermission instance);
    partial void InsertFolder(Folder instance);
    partial void UpdateFolder(Folder instance);
    partial void DeleteFolder(Folder instance);
    partial void InsertHostSetting(HostSetting instance);
    partial void UpdateHostSetting(HostSetting instance);
    partial void DeleteHostSetting(HostSetting instance);
    partial void InsertHtmlText(HtmlText instance);
    partial void UpdateHtmlText(HtmlText instance);
    partial void DeleteHtmlText(HtmlText instance);
    partial void InsertHtmlTextLog(HtmlTextLog instance);
    partial void UpdateHtmlTextLog(HtmlTextLog instance);
    partial void DeleteHtmlTextLog(HtmlTextLog instance);
    partial void InsertHtmlTextUser(HtmlTextUser instance);
    partial void UpdateHtmlTextUser(HtmlTextUser instance);
    partial void DeleteHtmlTextUser(HtmlTextUser instance);
    partial void InsertJournal(Journal instance);
    partial void UpdateJournal(Journal instance);
    partial void DeleteJournal(Journal instance);
    partial void InsertJournal_Access(Journal_Access instance);
    partial void UpdateJournal_Access(Journal_Access instance);
    partial void DeleteJournal_Access(Journal_Access instance);
    partial void InsertJournal_Comment(Journal_Comment instance);
    partial void UpdateJournal_Comment(Journal_Comment instance);
    partial void DeleteJournal_Comment(Journal_Comment instance);
    partial void InsertJournal_Data(Journal_Data instance);
    partial void UpdateJournal_Data(Journal_Data instance);
    partial void DeleteJournal_Data(Journal_Data instance);
    partial void InsertJournal_Security(Journal_Security instance);
    partial void UpdateJournal_Security(Journal_Security instance);
    partial void DeleteJournal_Security(Journal_Security instance);
    partial void InsertJournal_TypeFilter(Journal_TypeFilter instance);
    partial void UpdateJournal_TypeFilter(Journal_TypeFilter instance);
    partial void DeleteJournal_TypeFilter(Journal_TypeFilter instance);
    partial void InsertJournal_Type(Journal_Type instance);
    partial void UpdateJournal_Type(Journal_Type instance);
    partial void DeleteJournal_Type(Journal_Type instance);
    partial void InsertLanguagePack(LanguagePack instance);
    partial void UpdateLanguagePack(LanguagePack instance);
    partial void DeleteLanguagePack(LanguagePack instance);
    partial void InsertLanguage(Language instance);
    partial void UpdateLanguage(Language instance);
    partial void DeleteLanguage(Language instance);
    partial void InsertLink(Link instance);
    partial void UpdateLink(Link instance);
    partial void DeleteLink(Link instance);
    partial void InsertList(List instance);
    partial void UpdateList(List instance);
    partial void DeleteList(List instance);
    partial void InsertMessaging_Message(Messaging_Message instance);
    partial void UpdateMessaging_Message(Messaging_Message instance);
    partial void DeleteMessaging_Message(Messaging_Message instance);
    partial void InsertMetaData(MetaData instance);
    partial void UpdateMetaData(MetaData instance);
    partial void DeleteMetaData(MetaData instance);
    partial void InsertMobile_PreviewProfile(Mobile_PreviewProfile instance);
    partial void UpdateMobile_PreviewProfile(Mobile_PreviewProfile instance);
    partial void DeleteMobile_PreviewProfile(Mobile_PreviewProfile instance);
    partial void InsertMobile_RedirectionRule(Mobile_RedirectionRule instance);
    partial void UpdateMobile_RedirectionRule(Mobile_RedirectionRule instance);
    partial void DeleteMobile_RedirectionRule(Mobile_RedirectionRule instance);
    partial void InsertMobile_Redirection(Mobile_Redirection instance);
    partial void UpdateMobile_Redirection(Mobile_Redirection instance);
    partial void DeleteMobile_Redirection(Mobile_Redirection instance);
    partial void InsertModuleControl(ModuleControl instance);
    partial void UpdateModuleControl(ModuleControl instance);
    partial void DeleteModuleControl(ModuleControl instance);
    partial void InsertModuleDefinition(ModuleDefinition instance);
    partial void UpdateModuleDefinition(ModuleDefinition instance);
    partial void DeleteModuleDefinition(ModuleDefinition instance);
    partial void InsertModulePermission(ModulePermission instance);
    partial void UpdateModulePermission(ModulePermission instance);
    partial void DeleteModulePermission(ModulePermission instance);
    partial void InsertModule(Module instance);
    partial void UpdateModule(Module instance);
    partial void DeleteModule(Module instance);
    partial void InsertModuleSetting(ModuleSetting instance);
    partial void UpdateModuleSetting(ModuleSetting instance);
    partial void DeleteModuleSetting(ModuleSetting instance);
    partial void InsertPackage(Package instance);
    partial void UpdatePackage(Package instance);
    partial void DeletePackage(Package instance);
    partial void InsertPackageType(PackageType instance);
    partial void UpdatePackageType(PackageType instance);
    partial void DeletePackageType(PackageType instance);
    partial void InsertPermission(Permission instance);
    partial void UpdatePermission(Permission instance);
    partial void DeletePermission(Permission instance);
    partial void InsertPortalAlia(PortalAlia instance);
    partial void UpdatePortalAlia(PortalAlia instance);
    partial void DeletePortalAlia(PortalAlia instance);
    partial void InsertPortalDesktopModule(PortalDesktopModule instance);
    partial void UpdatePortalDesktopModule(PortalDesktopModule instance);
    partial void DeletePortalDesktopModule(PortalDesktopModule instance);
    partial void InsertPortalGroup(PortalGroup instance);
    partial void UpdatePortalGroup(PortalGroup instance);
    partial void DeletePortalGroup(PortalGroup instance);
    partial void InsertPortalLanguage(PortalLanguage instance);
    partial void UpdatePortalLanguage(PortalLanguage instance);
    partial void DeletePortalLanguage(PortalLanguage instance);
    partial void InsertPortalLocalization(PortalLocalization instance);
    partial void UpdatePortalLocalization(PortalLocalization instance);
    partial void DeletePortalLocalization(PortalLocalization instance);
    partial void InsertPortal(Portal instance);
    partial void UpdatePortal(Portal instance);
    partial void DeletePortal(Portal instance);
    partial void InsertPortalSetting(PortalSetting instance);
    partial void UpdatePortalSetting(PortalSetting instance);
    partial void DeletePortalSetting(PortalSetting instance);
    partial void InsertProfile(Profile instance);
    partial void UpdateProfile(Profile instance);
    partial void DeleteProfile(Profile instance);
    partial void InsertProfilePropertyDefinition(ProfilePropertyDefinition instance);
    partial void UpdateProfilePropertyDefinition(ProfilePropertyDefinition instance);
    partial void DeleteProfilePropertyDefinition(ProfilePropertyDefinition instance);
    partial void InsertRelationship(Relationship instance);
    partial void UpdateRelationship(Relationship instance);
    partial void DeleteRelationship(Relationship instance);
    partial void InsertRelationshipType(RelationshipType instance);
    partial void UpdateRelationshipType(RelationshipType instance);
    partial void DeleteRelationshipType(RelationshipType instance);
    partial void InsertRoleGroup(RoleGroup instance);
    partial void UpdateRoleGroup(RoleGroup instance);
    partial void DeleteRoleGroup(RoleGroup instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertRoleSetting(RoleSetting instance);
    partial void UpdateRoleSetting(RoleSetting instance);
    partial void DeleteRoleSetting(RoleSetting instance);
    partial void InsertSchedule(Schedule instance);
    partial void UpdateSchedule(Schedule instance);
    partial void DeleteSchedule(Schedule instance);
    partial void InsertScheduleHistory(ScheduleHistory instance);
    partial void UpdateScheduleHistory(ScheduleHistory instance);
    partial void DeleteScheduleHistory(ScheduleHistory instance);
    partial void InsertScheduleItemSetting(ScheduleItemSetting instance);
    partial void UpdateScheduleItemSetting(ScheduleItemSetting instance);
    partial void DeleteScheduleItemSetting(ScheduleItemSetting instance);
    partial void InsertSearchCommonWord(SearchCommonWord instance);
    partial void UpdateSearchCommonWord(SearchCommonWord instance);
    partial void DeleteSearchCommonWord(SearchCommonWord instance);
    partial void InsertSearchIndexer(SearchIndexer instance);
    partial void UpdateSearchIndexer(SearchIndexer instance);
    partial void DeleteSearchIndexer(SearchIndexer instance);
    partial void InsertSearchItem(SearchItem instance);
    partial void UpdateSearchItem(SearchItem instance);
    partial void DeleteSearchItem(SearchItem instance);
    partial void InsertSearchItemWord(SearchItemWord instance);
    partial void UpdateSearchItemWord(SearchItemWord instance);
    partial void DeleteSearchItemWord(SearchItemWord instance);
    partial void InsertSearchItemWordPosition(SearchItemWordPosition instance);
    partial void UpdateSearchItemWordPosition(SearchItemWordPosition instance);
    partial void DeleteSearchItemWordPosition(SearchItemWordPosition instance);
    partial void InsertSearchWord(SearchWord instance);
    partial void UpdateSearchWord(SearchWord instance);
    partial void DeleteSearchWord(SearchWord instance);
    partial void InsertSiteLog(SiteLog instance);
    partial void UpdateSiteLog(SiteLog instance);
    partial void DeleteSiteLog(SiteLog instance);
    partial void InsertSkinControl(SkinControl instance);
    partial void UpdateSkinControl(SkinControl instance);
    partial void DeleteSkinControl(SkinControl instance);
    partial void InsertSkinPackage(SkinPackage instance);
    partial void UpdateSkinPackage(SkinPackage instance);
    partial void DeleteSkinPackage(SkinPackage instance);
    partial void InsertSkin(Skin instance);
    partial void UpdateSkin(Skin instance);
    partial void DeleteSkin(Skin instance);
    partial void InsertSystemMessage(SystemMessage instance);
    partial void UpdateSystemMessage(SystemMessage instance);
    partial void DeleteSystemMessage(SystemMessage instance);
    partial void InsertTabModule(TabModule instance);
    partial void UpdateTabModule(TabModule instance);
    partial void DeleteTabModule(TabModule instance);
    partial void InsertTabModuleSetting(TabModuleSetting instance);
    partial void UpdateTabModuleSetting(TabModuleSetting instance);
    partial void DeleteTabModuleSetting(TabModuleSetting instance);
    partial void InsertTabPermission(TabPermission instance);
    partial void UpdateTabPermission(TabPermission instance);
    partial void DeleteTabPermission(TabPermission instance);
    partial void InsertTab(Tab instance);
    partial void UpdateTab(Tab instance);
    partial void DeleteTab(Tab instance);
    partial void InsertTaxonomy_ScopeType(Taxonomy_ScopeType instance);
    partial void UpdateTaxonomy_ScopeType(Taxonomy_ScopeType instance);
    partial void DeleteTaxonomy_ScopeType(Taxonomy_ScopeType instance);
    partial void InsertTaxonomy_Term(Taxonomy_Term instance);
    partial void UpdateTaxonomy_Term(Taxonomy_Term instance);
    partial void DeleteTaxonomy_Term(Taxonomy_Term instance);
    partial void InsertTaxonomy_Vocabulary(Taxonomy_Vocabulary instance);
    partial void UpdateTaxonomy_Vocabulary(Taxonomy_Vocabulary instance);
    partial void DeleteTaxonomy_Vocabulary(Taxonomy_Vocabulary instance);
    partial void InsertTaxonomy_VocabularyType(Taxonomy_VocabularyType instance);
    partial void UpdateTaxonomy_VocabularyType(Taxonomy_VocabularyType instance);
    partial void DeleteTaxonomy_VocabularyType(Taxonomy_VocabularyType instance);
    partial void InsertUrlLog(UrlLog instance);
    partial void UpdateUrlLog(UrlLog instance);
    partial void DeleteUrlLog(UrlLog instance);
    partial void InsertUrl(Url instance);
    partial void UpdateUrl(Url instance);
    partial void DeleteUrl(Url instance);
    partial void InsertUrlTracking(UrlTracking instance);
    partial void UpdateUrlTracking(UrlTracking instance);
    partial void DeleteUrlTracking(UrlTracking instance);
    partial void InsertUserAuthentication(UserAuthentication instance);
    partial void UpdateUserAuthentication(UserAuthentication instance);
    partial void DeleteUserAuthentication(UserAuthentication instance);
    partial void InsertUserPortal(UserPortal instance);
    partial void UpdateUserPortal(UserPortal instance);
    partial void DeleteUserPortal(UserPortal instance);
    partial void InsertUserProfile(UserProfile instance);
    partial void UpdateUserProfile(UserProfile instance);
    partial void DeleteUserProfile(UserProfile instance);
    partial void InsertUserRelationshipPreference(UserRelationshipPreference instance);
    partial void UpdateUserRelationshipPreference(UserRelationshipPreference instance);
    partial void DeleteUserRelationshipPreference(UserRelationshipPreference instance);
    partial void InsertUserRelationship(UserRelationship instance);
    partial void UpdateUserRelationship(UserRelationship instance);
    partial void DeleteUserRelationship(UserRelationship instance);
    partial void InsertUserRole(UserRole instance);
    partial void UpdateUserRole(UserRole instance);
    partial void DeleteUserRole(UserRole instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertUsersOnline(UsersOnline instance);
    partial void UpdateUsersOnline(UsersOnline instance);
    partial void DeleteUsersOnline(UsersOnline instance);
    partial void InsertVendorClassification(VendorClassification instance);
    partial void UpdateVendorClassification(VendorClassification instance);
    partial void DeleteVendorClassification(VendorClassification instance);
    partial void InsertVendor(Vendor instance);
    partial void UpdateVendor(Vendor instance);
    partial void DeleteVendor(Vendor instance);
    partial void InsertVersion(Version instance);
    partial void UpdateVersion(Version instance);
    partial void DeleteVersion(Version instance);
    partial void InsertWebServer(WebServer instance);
    partial void UpdateWebServer(WebServer instance);
    partial void DeleteWebServer(WebServer instance);
    partial void InsertWorkflow(Workflow instance);
    partial void UpdateWorkflow(Workflow instance);
    partial void DeleteWorkflow(Workflow instance);
    partial void InsertWorkflowState(WorkflowState instance);
    partial void UpdateWorkflowState(WorkflowState instance);
    partial void DeleteWorkflowState(WorkflowState instance);
    partial void InsertzBaseSalary(zBaseSalary instance);
    partial void UpdatezBaseSalary(zBaseSalary instance);
    partial void DeletezBaseSalary(zBaseSalary instance);
    partial void InsertzCatalogue(zCatalogue instance);
    partial void UpdatezCatalogue(zCatalogue instance);
    partial void DeletezCatalogue(zCatalogue instance);
    partial void InsertzCity(zCity instance);
    partial void UpdatezCity(zCity instance);
    partial void DeletezCity(zCity instance);
    partial void InsertzDepartment(zDepartment instance);
    partial void UpdatezDepartment(zDepartment instance);
    partial void DeletezDepartment(zDepartment instance);
    partial void InsertzDiploma(zDiploma instance);
    partial void UpdatezDiploma(zDiploma instance);
    partial void DeletezDiploma(zDiploma instance);
    partial void InsertzEthnic(zEthnic instance);
    partial void UpdatezEthnic(zEthnic instance);
    partial void DeletezEthnic(zEthnic instance);
    partial void InsertzExtra(zExtra instance);
    partial void UpdatezExtra(zExtra instance);
    partial void DeletezExtra(zExtra instance);
    partial void InsertzFamily(zFamily instance);
    partial void UpdatezFamily(zFamily instance);
    partial void DeletezFamily(zFamily instance);
    partial void InsertzInOutBonus(zInOutBonus instance);
    partial void UpdatezInOutBonus(zInOutBonus instance);
    partial void DeletezInOutBonus(zInOutBonus instance);
    partial void InsertzInstitute(zInstitute instance);
    partial void UpdatezInstitute(zInstitute instance);
    partial void DeletezInstitute(zInstitute instance);
    partial void InsertzNew(zNew instance);
    partial void UpdatezNew(zNew instance);
    partial void DeletezNew(zNew instance);
    partial void InsertzOffice(zOffice instance);
    partial void UpdatezOffice(zOffice instance);
    partial void DeletezOffice(zOffice instance);
    partial void InsertzResearch(zResearch instance);
    partial void UpdatezResearch(zResearch instance);
    partial void DeletezResearch(zResearch instance);
    partial void InsertzResearchState(zResearchState instance);
    partial void UpdatezResearchState(zResearchState instance);
    partial void DeletezResearchState(zResearchState instance);
    partial void InsertzSalaryLog(zSalaryLog instance);
    partial void UpdatezSalaryLog(zSalaryLog instance);
    partial void DeletezSalaryLog(zSalaryLog instance);
    partial void InsertzScaleSalary(zScaleSalary instance);
    partial void UpdatezScaleSalary(zScaleSalary instance);
    partial void DeletezScaleSalary(zScaleSalary instance);
    partial void InsertzStudyProcess(zStudyProcess instance);
    partial void UpdatezStudyProcess(zStudyProcess instance);
    partial void DeletezStudyProcess(zStudyProcess instance);
    partial void InsertzWorkLog(zWorkLog instance);
    partial void UpdatezWorkLog(zWorkLog instance);
    partial void DeletezWorkLog(zWorkLog instance);
    #endregion
		
		public MyLinqDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["do_an_g08ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MyLinqDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyLinqDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyLinqDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyLinqDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Affiliate> Affiliates
		{
			get
			{
				return this.GetTable<Affiliate>();
			}
		}
		
		public System.Data.Linq.Table<zWorkProcess> zWorkProcesses
		{
			get
			{
				return this.GetTable<zWorkProcess>();
			}
		}
		
		public System.Data.Linq.Table<AnonymousUser> AnonymousUsers
		{
			get
			{
				return this.GetTable<AnonymousUser>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Application> aspnet_Applications
		{
			get
			{
				return this.GetTable<aspnet_Application>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Membership> aspnet_Memberships
		{
			get
			{
				return this.GetTable<aspnet_Membership>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Profile> aspnet_Profiles
		{
			get
			{
				return this.GetTable<aspnet_Profile>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Role> aspnet_Roles
		{
			get
			{
				return this.GetTable<aspnet_Role>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_SchemaVersion> aspnet_SchemaVersions
		{
			get
			{
				return this.GetTable<aspnet_SchemaVersion>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_User> aspnet_Users
		{
			get
			{
				return this.GetTable<aspnet_User>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this.GetTable<aspnet_UsersInRole>();
			}
		}
		
		public System.Data.Linq.Table<Assembly> Assemblies
		{
			get
			{
				return this.GetTable<Assembly>();
			}
		}
		
		public System.Data.Linq.Table<Authentication> Authentications
		{
			get
			{
				return this.GetTable<Authentication>();
			}
		}
		
		public System.Data.Linq.Table<Banner> Banners
		{
			get
			{
				return this.GetTable<Banner>();
			}
		}
		
		public System.Data.Linq.Table<Classification> Classifications
		{
			get
			{
				return this.GetTable<Classification>();
			}
		}
		
		public System.Data.Linq.Table<ContentItem> ContentItems
		{
			get
			{
				return this.GetTable<ContentItem>();
			}
		}
		
		public System.Data.Linq.Table<ContentItems_MetaData> ContentItems_MetaDatas
		{
			get
			{
				return this.GetTable<ContentItems_MetaData>();
			}
		}
		
		public System.Data.Linq.Table<ContentItems_Tag> ContentItems_Tags
		{
			get
			{
				return this.GetTable<ContentItems_Tag>();
			}
		}
		
		public System.Data.Linq.Table<ContentType> ContentTypes
		{
			get
			{
				return this.GetTable<ContentType>();
			}
		}
		
		public System.Data.Linq.Table<CoreMessaging_MessageAttachment> CoreMessaging_MessageAttachments
		{
			get
			{
				return this.GetTable<CoreMessaging_MessageAttachment>();
			}
		}
		
		public System.Data.Linq.Table<CoreMessaging_MessageRecipient> CoreMessaging_MessageRecipients
		{
			get
			{
				return this.GetTable<CoreMessaging_MessageRecipient>();
			}
		}
		
		public System.Data.Linq.Table<CoreMessaging_Message> CoreMessaging_Messages
		{
			get
			{
				return this.GetTable<CoreMessaging_Message>();
			}
		}
		
		public System.Data.Linq.Table<CoreMessaging_NotificationTypeAction> CoreMessaging_NotificationTypeActions
		{
			get
			{
				return this.GetTable<CoreMessaging_NotificationTypeAction>();
			}
		}
		
		public System.Data.Linq.Table<CoreMessaging_NotificationType> CoreMessaging_NotificationTypes
		{
			get
			{
				return this.GetTable<CoreMessaging_NotificationType>();
			}
		}
		
		public System.Data.Linq.Table<Dashboard_Control> Dashboard_Controls
		{
			get
			{
				return this.GetTable<Dashboard_Control>();
			}
		}
		
		public System.Data.Linq.Table<DesktopModulePermission> DesktopModulePermissions
		{
			get
			{
				return this.GetTable<DesktopModulePermission>();
			}
		}
		
		public System.Data.Linq.Table<DesktopModule> DesktopModules
		{
			get
			{
				return this.GetTable<DesktopModule>();
			}
		}
		
		public System.Data.Linq.Table<EventLog> EventLogs
		{
			get
			{
				return this.GetTable<EventLog>();
			}
		}
		
		public System.Data.Linq.Table<EventLogConfig> EventLogConfigs
		{
			get
			{
				return this.GetTable<EventLogConfig>();
			}
		}
		
		public System.Data.Linq.Table<EventLogType> EventLogTypes
		{
			get
			{
				return this.GetTable<EventLogType>();
			}
		}
		
		public System.Data.Linq.Table<EventQueue> EventQueues
		{
			get
			{
				return this.GetTable<EventQueue>();
			}
		}
		
		public System.Data.Linq.Table<File> Files
		{
			get
			{
				return this.GetTable<File>();
			}
		}
		
		public System.Data.Linq.Table<FolderMapping> FolderMappings
		{
			get
			{
				return this.GetTable<FolderMapping>();
			}
		}
		
		public System.Data.Linq.Table<FolderMappingsSetting> FolderMappingsSettings
		{
			get
			{
				return this.GetTable<FolderMappingsSetting>();
			}
		}
		
		public System.Data.Linq.Table<FolderPermission> FolderPermissions
		{
			get
			{
				return this.GetTable<FolderPermission>();
			}
		}
		
		public System.Data.Linq.Table<Folder> Folders
		{
			get
			{
				return this.GetTable<Folder>();
			}
		}
		
		public System.Data.Linq.Table<HostSetting> HostSettings
		{
			get
			{
				return this.GetTable<HostSetting>();
			}
		}
		
		public System.Data.Linq.Table<HtmlText> HtmlTexts
		{
			get
			{
				return this.GetTable<HtmlText>();
			}
		}
		
		public System.Data.Linq.Table<HtmlTextLog> HtmlTextLogs
		{
			get
			{
				return this.GetTable<HtmlTextLog>();
			}
		}
		
		public System.Data.Linq.Table<HtmlTextUser> HtmlTextUsers
		{
			get
			{
				return this.GetTable<HtmlTextUser>();
			}
		}
		
		public System.Data.Linq.Table<Journal> Journals
		{
			get
			{
				return this.GetTable<Journal>();
			}
		}
		
		public System.Data.Linq.Table<Journal_Access> Journal_Accesses
		{
			get
			{
				return this.GetTable<Journal_Access>();
			}
		}
		
		public System.Data.Linq.Table<Journal_Comment> Journal_Comments
		{
			get
			{
				return this.GetTable<Journal_Comment>();
			}
		}
		
		public System.Data.Linq.Table<Journal_Data> Journal_Datas
		{
			get
			{
				return this.GetTable<Journal_Data>();
			}
		}
		
		public System.Data.Linq.Table<Journal_Security> Journal_Securities
		{
			get
			{
				return this.GetTable<Journal_Security>();
			}
		}
		
		public System.Data.Linq.Table<Journal_TypeFilter> Journal_TypeFilters
		{
			get
			{
				return this.GetTable<Journal_TypeFilter>();
			}
		}
		
		public System.Data.Linq.Table<Journal_Type> Journal_Types
		{
			get
			{
				return this.GetTable<Journal_Type>();
			}
		}
		
		public System.Data.Linq.Table<LanguagePack> LanguagePacks
		{
			get
			{
				return this.GetTable<LanguagePack>();
			}
		}
		
		public System.Data.Linq.Table<Language> Languages
		{
			get
			{
				return this.GetTable<Language>();
			}
		}
		
		public System.Data.Linq.Table<Link> Links
		{
			get
			{
				return this.GetTable<Link>();
			}
		}
		
		public System.Data.Linq.Table<List> Lists
		{
			get
			{
				return this.GetTable<List>();
			}
		}
		
		public System.Data.Linq.Table<Messaging_Message> Messaging_Messages
		{
			get
			{
				return this.GetTable<Messaging_Message>();
			}
		}
		
		public System.Data.Linq.Table<MetaData> MetaDatas
		{
			get
			{
				return this.GetTable<MetaData>();
			}
		}
		
		public System.Data.Linq.Table<Mobile_PreviewProfile> Mobile_PreviewProfiles
		{
			get
			{
				return this.GetTable<Mobile_PreviewProfile>();
			}
		}
		
		public System.Data.Linq.Table<Mobile_RedirectionRule> Mobile_RedirectionRules
		{
			get
			{
				return this.GetTable<Mobile_RedirectionRule>();
			}
		}
		
		public System.Data.Linq.Table<Mobile_Redirection> Mobile_Redirections
		{
			get
			{
				return this.GetTable<Mobile_Redirection>();
			}
		}
		
		public System.Data.Linq.Table<ModuleControl> ModuleControls
		{
			get
			{
				return this.GetTable<ModuleControl>();
			}
		}
		
		public System.Data.Linq.Table<ModuleDefinition> ModuleDefinitions
		{
			get
			{
				return this.GetTable<ModuleDefinition>();
			}
		}
		
		public System.Data.Linq.Table<ModulePermission> ModulePermissions
		{
			get
			{
				return this.GetTable<ModulePermission>();
			}
		}
		
		public System.Data.Linq.Table<Module> Modules
		{
			get
			{
				return this.GetTable<Module>();
			}
		}
		
		public System.Data.Linq.Table<ModuleSetting> ModuleSettings
		{
			get
			{
				return this.GetTable<ModuleSetting>();
			}
		}
		
		public System.Data.Linq.Table<Package> Packages
		{
			get
			{
				return this.GetTable<Package>();
			}
		}
		
		public System.Data.Linq.Table<PackageType> PackageTypes
		{
			get
			{
				return this.GetTable<PackageType>();
			}
		}
		
		public System.Data.Linq.Table<Permission> Permissions
		{
			get
			{
				return this.GetTable<Permission>();
			}
		}
		
		public System.Data.Linq.Table<PortalAlia> PortalAlias
		{
			get
			{
				return this.GetTable<PortalAlia>();
			}
		}
		
		public System.Data.Linq.Table<PortalDesktopModule> PortalDesktopModules
		{
			get
			{
				return this.GetTable<PortalDesktopModule>();
			}
		}
		
		public System.Data.Linq.Table<PortalGroup> PortalGroups
		{
			get
			{
				return this.GetTable<PortalGroup>();
			}
		}
		
		public System.Data.Linq.Table<PortalLanguage> PortalLanguages
		{
			get
			{
				return this.GetTable<PortalLanguage>();
			}
		}
		
		public System.Data.Linq.Table<PortalLocalization> PortalLocalizations
		{
			get
			{
				return this.GetTable<PortalLocalization>();
			}
		}
		
		public System.Data.Linq.Table<Portal> Portals
		{
			get
			{
				return this.GetTable<Portal>();
			}
		}
		
		public System.Data.Linq.Table<PortalSetting> PortalSettings
		{
			get
			{
				return this.GetTable<PortalSetting>();
			}
		}
		
		public System.Data.Linq.Table<Profile> Profiles
		{
			get
			{
				return this.GetTable<Profile>();
			}
		}
		
		public System.Data.Linq.Table<ProfilePropertyDefinition> ProfilePropertyDefinitions
		{
			get
			{
				return this.GetTable<ProfilePropertyDefinition>();
			}
		}
		
		public System.Data.Linq.Table<Relationship> Relationships
		{
			get
			{
				return this.GetTable<Relationship>();
			}
		}
		
		public System.Data.Linq.Table<RelationshipType> RelationshipTypes
		{
			get
			{
				return this.GetTable<RelationshipType>();
			}
		}
		
		public System.Data.Linq.Table<RoleGroup> RoleGroups
		{
			get
			{
				return this.GetTable<RoleGroup>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<RoleSetting> RoleSettings
		{
			get
			{
				return this.GetTable<RoleSetting>();
			}
		}
		
		public System.Data.Linq.Table<Schedule> Schedules
		{
			get
			{
				return this.GetTable<Schedule>();
			}
		}
		
		public System.Data.Linq.Table<ScheduleHistory> ScheduleHistories
		{
			get
			{
				return this.GetTable<ScheduleHistory>();
			}
		}
		
		public System.Data.Linq.Table<ScheduleItemSetting> ScheduleItemSettings
		{
			get
			{
				return this.GetTable<ScheduleItemSetting>();
			}
		}
		
		public System.Data.Linq.Table<SearchCommonWord> SearchCommonWords
		{
			get
			{
				return this.GetTable<SearchCommonWord>();
			}
		}
		
		public System.Data.Linq.Table<SearchIndexer> SearchIndexers
		{
			get
			{
				return this.GetTable<SearchIndexer>();
			}
		}
		
		public System.Data.Linq.Table<SearchItem> SearchItems
		{
			get
			{
				return this.GetTable<SearchItem>();
			}
		}
		
		public System.Data.Linq.Table<SearchItemWord> SearchItemWords
		{
			get
			{
				return this.GetTable<SearchItemWord>();
			}
		}
		
		public System.Data.Linq.Table<SearchItemWordPosition> SearchItemWordPositions
		{
			get
			{
				return this.GetTable<SearchItemWordPosition>();
			}
		}
		
		public System.Data.Linq.Table<SearchWord> SearchWords
		{
			get
			{
				return this.GetTable<SearchWord>();
			}
		}
		
		public System.Data.Linq.Table<SiteLog> SiteLogs
		{
			get
			{
				return this.GetTable<SiteLog>();
			}
		}
		
		public System.Data.Linq.Table<SkinControl> SkinControls
		{
			get
			{
				return this.GetTable<SkinControl>();
			}
		}
		
		public System.Data.Linq.Table<SkinPackage> SkinPackages
		{
			get
			{
				return this.GetTable<SkinPackage>();
			}
		}
		
		public System.Data.Linq.Table<Skin> Skins
		{
			get
			{
				return this.GetTable<Skin>();
			}
		}
		
		public System.Data.Linq.Table<SystemMessage> SystemMessages
		{
			get
			{
				return this.GetTable<SystemMessage>();
			}
		}
		
		public System.Data.Linq.Table<TabModule> TabModules
		{
			get
			{
				return this.GetTable<TabModule>();
			}
		}
		
		public System.Data.Linq.Table<TabModuleSetting> TabModuleSettings
		{
			get
			{
				return this.GetTable<TabModuleSetting>();
			}
		}
		
		public System.Data.Linq.Table<TabPermission> TabPermissions
		{
			get
			{
				return this.GetTable<TabPermission>();
			}
		}
		
		public System.Data.Linq.Table<Tab> Tabs
		{
			get
			{
				return this.GetTable<Tab>();
			}
		}
		
		public System.Data.Linq.Table<TabSetting> TabSettings
		{
			get
			{
				return this.GetTable<TabSetting>();
			}
		}
		
		public System.Data.Linq.Table<Taxonomy_ScopeType> Taxonomy_ScopeTypes
		{
			get
			{
				return this.GetTable<Taxonomy_ScopeType>();
			}
		}
		
		public System.Data.Linq.Table<Taxonomy_Term> Taxonomy_Terms
		{
			get
			{
				return this.GetTable<Taxonomy_Term>();
			}
		}
		
		public System.Data.Linq.Table<Taxonomy_Vocabulary> Taxonomy_Vocabularies
		{
			get
			{
				return this.GetTable<Taxonomy_Vocabulary>();
			}
		}
		
		public System.Data.Linq.Table<Taxonomy_VocabularyType> Taxonomy_VocabularyTypes
		{
			get
			{
				return this.GetTable<Taxonomy_VocabularyType>();
			}
		}
		
		public System.Data.Linq.Table<UrlLog> UrlLogs
		{
			get
			{
				return this.GetTable<UrlLog>();
			}
		}
		
		public System.Data.Linq.Table<Url> Urls
		{
			get
			{
				return this.GetTable<Url>();
			}
		}
		
		public System.Data.Linq.Table<UrlTracking> UrlTrackings
		{
			get
			{
				return this.GetTable<UrlTracking>();
			}
		}
		
		public System.Data.Linq.Table<UserAuthentication> UserAuthentications
		{
			get
			{
				return this.GetTable<UserAuthentication>();
			}
		}
		
		public System.Data.Linq.Table<UserPortal> UserPortals
		{
			get
			{
				return this.GetTable<UserPortal>();
			}
		}
		
		public System.Data.Linq.Table<UserProfile> UserProfiles
		{
			get
			{
				return this.GetTable<UserProfile>();
			}
		}
		
		public System.Data.Linq.Table<UserRelationshipPreference> UserRelationshipPreferences
		{
			get
			{
				return this.GetTable<UserRelationshipPreference>();
			}
		}
		
		public System.Data.Linq.Table<UserRelationship> UserRelationships
		{
			get
			{
				return this.GetTable<UserRelationship>();
			}
		}
		
		public System.Data.Linq.Table<UserRole> UserRoles
		{
			get
			{
				return this.GetTable<UserRole>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<UsersOnline> UsersOnlines
		{
			get
			{
				return this.GetTable<UsersOnline>();
			}
		}
		
		public System.Data.Linq.Table<VendorClassification> VendorClassifications
		{
			get
			{
				return this.GetTable<VendorClassification>();
			}
		}
		
		public System.Data.Linq.Table<Vendor> Vendors
		{
			get
			{
				return this.GetTable<Vendor>();
			}
		}
		
		public System.Data.Linq.Table<Version> Versions
		{
			get
			{
				return this.GetTable<Version>();
			}
		}
		
		public System.Data.Linq.Table<WebServer> WebServers
		{
			get
			{
				return this.GetTable<WebServer>();
			}
		}
		
		public System.Data.Linq.Table<Workflow> Workflows
		{
			get
			{
				return this.GetTable<Workflow>();
			}
		}
		
		public System.Data.Linq.Table<WorkflowState> WorkflowStates
		{
			get
			{
				return this.GetTable<WorkflowState>();
			}
		}
		
		public System.Data.Linq.Table<zBaseSalary> zBaseSalaries
		{
			get
			{
				return this.GetTable<zBaseSalary>();
			}
		}
		
		public System.Data.Linq.Table<zCatalogue> zCatalogues
		{
			get
			{
				return this.GetTable<zCatalogue>();
			}
		}
		
		public System.Data.Linq.Table<zCity> zCities
		{
			get
			{
				return this.GetTable<zCity>();
			}
		}
		
		public System.Data.Linq.Table<zConfig> zConfigs
		{
			get
			{
				return this.GetTable<zConfig>();
			}
		}
		
		public System.Data.Linq.Table<zDepartment> zDepartments
		{
			get
			{
				return this.GetTable<zDepartment>();
			}
		}
		
		public System.Data.Linq.Table<zDiploma> zDiplomas
		{
			get
			{
				return this.GetTable<zDiploma>();
			}
		}
		
		public System.Data.Linq.Table<zEthnic> zEthnics
		{
			get
			{
				return this.GetTable<zEthnic>();
			}
		}
		
		public System.Data.Linq.Table<zExtra> zExtras
		{
			get
			{
				return this.GetTable<zExtra>();
			}
		}
		
		public System.Data.Linq.Table<zFamily> zFamilies
		{
			get
			{
				return this.GetTable<zFamily>();
			}
		}
		
		public System.Data.Linq.Table<zInOutBonus> zInOutBonus
		{
			get
			{
				return this.GetTable<zInOutBonus>();
			}
		}
		
		public System.Data.Linq.Table<zInstitute> zInstitutes
		{
			get
			{
				return this.GetTable<zInstitute>();
			}
		}
		
		public System.Data.Linq.Table<zNew> zNews
		{
			get
			{
				return this.GetTable<zNew>();
			}
		}
		
		public System.Data.Linq.Table<zOffice> zOffices
		{
			get
			{
				return this.GetTable<zOffice>();
			}
		}
		
		public System.Data.Linq.Table<zResearch> zResearches
		{
			get
			{
				return this.GetTable<zResearch>();
			}
		}
		
		public System.Data.Linq.Table<zResearchState> zResearchStates
		{
			get
			{
				return this.GetTable<zResearchState>();
			}
		}
		
		public System.Data.Linq.Table<zSalaryLog> zSalaryLogs
		{
			get
			{
				return this.GetTable<zSalaryLog>();
			}
		}
		
		public System.Data.Linq.Table<zScaleSalary> zScaleSalaries
		{
			get
			{
				return this.GetTable<zScaleSalary>();
			}
		}
		
		public System.Data.Linq.Table<zStudyProcess> zStudyProcesses
		{
			get
			{
				return this.GetTable<zStudyProcess>();
			}
		}
		
		public System.Data.Linq.Table<zUserDiploma> zUserDiplomas
		{
			get
			{
				return this.GetTable<zUserDiploma>();
			}
		}
		
		public System.Data.Linq.Table<zUserSalary> zUserSalaries
		{
			get
			{
				return this.GetTable<zUserSalary>();
			}
		}
		
		public System.Data.Linq.Table<zUserWork> zUserWorks
		{
			get
			{
				return this.GetTable<zUserWork>();
			}
		}
		
		public System.Data.Linq.Table<zWorkLog> zWorkLogs
		{
			get
			{
				return this.GetTable<zWorkLog>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Affiliates")]
	public partial class Affiliate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AffiliateId;
		
		private System.Nullable<int> _VendorId;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private double _CPC;
		
		private int _Clicks;
		
		private double _CPA;
		
		private int _Acquisitions;
		
		private EntityRef<Vendor> _Vendor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAffiliateIdChanging(int value);
    partial void OnAffiliateIdChanged();
    partial void OnVendorIdChanging(System.Nullable<int> value);
    partial void OnVendorIdChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnCPCChanging(double value);
    partial void OnCPCChanged();
    partial void OnClicksChanging(int value);
    partial void OnClicksChanged();
    partial void OnCPAChanging(double value);
    partial void OnCPAChanged();
    partial void OnAcquisitionsChanging(int value);
    partial void OnAcquisitionsChanged();
    #endregion
		
		public Affiliate()
		{
			this._Vendor = default(EntityRef<Vendor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AffiliateId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AffiliateId
		{
			get
			{
				return this._AffiliateId;
			}
			set
			{
				if ((this._AffiliateId != value))
				{
					this.OnAffiliateIdChanging(value);
					this.SendPropertyChanging();
					this._AffiliateId = value;
					this.SendPropertyChanged("AffiliateId");
					this.OnAffiliateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorId", DbType="Int")]
		public System.Nullable<int> VendorId
		{
			get
			{
				return this._VendorId;
			}
			set
			{
				if ((this._VendorId != value))
				{
					if (this._Vendor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVendorIdChanging(value);
					this.SendPropertyChanging();
					this._VendorId = value;
					this.SendPropertyChanged("VendorId");
					this.OnVendorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPC", DbType="Float NOT NULL")]
		public double CPC
		{
			get
			{
				return this._CPC;
			}
			set
			{
				if ((this._CPC != value))
				{
					this.OnCPCChanging(value);
					this.SendPropertyChanging();
					this._CPC = value;
					this.SendPropertyChanged("CPC");
					this.OnCPCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Clicks", DbType="Int NOT NULL")]
		public int Clicks
		{
			get
			{
				return this._Clicks;
			}
			set
			{
				if ((this._Clicks != value))
				{
					this.OnClicksChanging(value);
					this.SendPropertyChanging();
					this._Clicks = value;
					this.SendPropertyChanged("Clicks");
					this.OnClicksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPA", DbType="Float NOT NULL")]
		public double CPA
		{
			get
			{
				return this._CPA;
			}
			set
			{
				if ((this._CPA != value))
				{
					this.OnCPAChanging(value);
					this.SendPropertyChanging();
					this._CPA = value;
					this.SendPropertyChanged("CPA");
					this.OnCPAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Acquisitions", DbType="Int NOT NULL")]
		public int Acquisitions
		{
			get
			{
				return this._Acquisitions;
			}
			set
			{
				if ((this._Acquisitions != value))
				{
					this.OnAcquisitionsChanging(value);
					this.SendPropertyChanging();
					this._Acquisitions = value;
					this.SendPropertyChanged("Acquisitions");
					this.OnAcquisitionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendor_Affiliate", Storage="_Vendor", ThisKey="VendorId", OtherKey="VendorId", IsForeignKey=true, DeleteRule="CASCADE")]
		public Vendor Vendor
		{
			get
			{
				return this._Vendor.Entity;
			}
			set
			{
				Vendor previousValue = this._Vendor.Entity;
				if (((previousValue != value) 
							|| (this._Vendor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vendor.Entity = null;
						previousValue.Affiliates.Remove(this);
					}
					this._Vendor.Entity = value;
					if ((value != null))
					{
						value.Affiliates.Add(this);
						this._VendorId = value.VendorId;
					}
					else
					{
						this._VendorId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Vendor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.zWorkProcess")]
	public partial class zWorkProcess : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _WPID;
		
		private int _UserID;
		
		private System.Nullable<System.DateTime> _StartTime;
		
		private System.Nullable<System.DateTime> _FinishTime;
		
		private string _OfficeAddr;
		
		private string _WorkAs;
		
		private string _Detail;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWPIDChanging(int value);
    partial void OnWPIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnStartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnStartTimeChanged();
    partial void OnFinishTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnFinishTimeChanged();
    partial void OnOfficeAddrChanging(string value);
    partial void OnOfficeAddrChanged();
    partial void OnWorkAsChanging(string value);
    partial void OnWorkAsChanged();
    partial void OnDetailChanging(string value);
    partial void OnDetailChanged();
    #endregion
		
		public zWorkProcess()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WPID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int WPID
		{
			get
			{
				return this._WPID;
			}
			set
			{
				if ((this._WPID != value))
				{
					this.OnWPIDChanging(value);
					this.SendPropertyChanging();
					this._WPID = value;
					this.SendPropertyChanged("WPID");
					this.OnWPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinishTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> FinishTime
		{
			get
			{
				return this._FinishTime;
			}
			set
			{
				if ((this._FinishTime != value))
				{
					this.OnFinishTimeChanging(value);
					this.SendPropertyChanging();
					this._FinishTime = value;
					this.SendPropertyChanged("FinishTime");
					this.OnFinishTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeAddr", DbType="NVarChar(256)")]
		public string OfficeAddr
		{
			get
			{
				return this._OfficeAddr;
			}
			set
			{
				if ((this._OfficeAddr != value))
				{
					this.OnOfficeAddrChanging(value);
					this.SendPropertyChanging();
					this._OfficeAddr = value;
					this.SendPropertyChanged("OfficeAddr");
					this.OnOfficeAddrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkAs", DbType="NVarChar(128)")]
		public string WorkAs
		{
			get
			{
				return this._WorkAs;
			}
			set
			{
				if ((this._WorkAs != value))
				{
					this.OnWorkAsChanging(value);
					this.SendPropertyChanging();
					this._WorkAs = value;
					this.SendPropertyChanged("WorkAs");
					this.OnWorkAsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Detail", DbType="NVarChar(256)")]
		public string Detail
		{
			get
			{
				return this._Detail;
			}
			set
			{
				if ((this._Detail != value))
				{
					this.OnDetailChanging(value);
					this.SendPropertyChanging();
					this._Detail = value;
					this.SendPropertyChanged("Detail");
					this.OnDetailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_zWorkProcess", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.zWorkProcesses.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.zWorkProcesses.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AnonymousUsers")]
	public partial class AnonymousUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserID;
		
		private int _PortalID;
		
		private int _TabID;
		
		private System.DateTime _CreationDate;
		
		private System.DateTime _LastActiveDate;
		
		private EntityRef<Portal> _Portal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnPortalIDChanging(int value);
    partial void OnPortalIDChanged();
    partial void OnTabIDChanging(int value);
    partial void OnTabIDChanged();
    partial void OnCreationDateChanging(System.DateTime value);
    partial void OnCreationDateChanged();
    partial void OnLastActiveDateChanging(System.DateTime value);
    partial void OnLastActiveDateChanged();
    #endregion
		
		public AnonymousUser()
		{
			this._Portal = default(EntityRef<Portal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					if (this._Portal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TabID", DbType="Int NOT NULL")]
		public int TabID
		{
			get
			{
				return this._TabID;
			}
			set
			{
				if ((this._TabID != value))
				{
					this.OnTabIDChanging(value);
					this.SendPropertyChanging();
					this._TabID = value;
					this.SendPropertyChanged("TabID");
					this.OnTabIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActiveDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastActiveDate
		{
			get
			{
				return this._LastActiveDate;
			}
			set
			{
				if ((this._LastActiveDate != value))
				{
					this.OnLastActiveDateChanging(value);
					this.SendPropertyChanging();
					this._LastActiveDate = value;
					this.SendPropertyChanged("LastActiveDate");
					this.OnLastActiveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Portal_AnonymousUser", Storage="_Portal", ThisKey="PortalID", OtherKey="PortalID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Portal Portal
		{
			get
			{
				return this._Portal.Entity;
			}
			set
			{
				Portal previousValue = this._Portal.Entity;
				if (((previousValue != value) 
							|| (this._Portal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Portal.Entity = null;
						previousValue.AnonymousUsers.Remove(this);
					}
					this._Portal.Entity = value;
					if ((value != null))
					{
						value.AnonymousUsers.Add(this);
						this._PortalID = value.PortalID;
					}
					else
					{
						this._PortalID = default(int);
					}
					this.SendPropertyChanged("Portal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Applications")]
	public partial class aspnet_Application : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ApplicationName;
		
		private string _LoweredApplicationName;
		
		private System.Guid _ApplicationId;
		
		private string _Description;
		
		private EntitySet<aspnet_Membership> _aspnet_Memberships;
		
		private EntitySet<aspnet_Role> _aspnet_Roles;
		
		private EntitySet<aspnet_User> _aspnet_Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationNameChanging(string value);
    partial void OnApplicationNameChanged();
    partial void OnLoweredApplicationNameChanging(string value);
    partial void OnLoweredApplicationNameChanged();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public aspnet_Application()
		{
			this._aspnet_Memberships = new EntitySet<aspnet_Membership>(new Action<aspnet_Membership>(this.attach_aspnet_Memberships), new Action<aspnet_Membership>(this.detach_aspnet_Memberships));
			this._aspnet_Roles = new EntitySet<aspnet_Role>(new Action<aspnet_Role>(this.attach_aspnet_Roles), new Action<aspnet_Role>(this.detach_aspnet_Roles));
			this._aspnet_Users = new EntitySet<aspnet_User>(new Action<aspnet_User>(this.attach_aspnet_Users), new Action<aspnet_User>(this.detach_aspnet_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string ApplicationName
		{
			get
			{
				return this._ApplicationName;
			}
			set
			{
				if ((this._ApplicationName != value))
				{
					this.OnApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._ApplicationName = value;
					this.SendPropertyChanged("ApplicationName");
					this.OnApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredApplicationName
		{
			get
			{
				return this._LoweredApplicationName;
			}
			set
			{
				if ((this._LoweredApplicationName != value))
				{
					this.OnLoweredApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredApplicationName = value;
					this.SendPropertyChanged("LoweredApplicationName");
					this.OnLoweredApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Membership", Storage="_aspnet_Memberships", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_Membership> aspnet_Memberships
		{
			get
			{
				return this._aspnet_Memberships;
			}
			set
			{
				this._aspnet_Memberships.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Role", Storage="_aspnet_Roles", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_Role> aspnet_Roles
		{
			get
			{
				return this._aspnet_Roles;
			}
			set
			{
				this._aspnet_Roles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_User", Storage="_aspnet_Users", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_User> aspnet_Users
		{
			get
			{
				return this._aspnet_Users;
			}
			set
			{
				this._aspnet_Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_Memberships(aspnet_Membership entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Memberships(aspnet_Membership entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
		
		private void attach_aspnet_Roles(aspnet_Role entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Roles(aspnet_Role entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
		
		private void attach_aspnet_Users(aspnet_User entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Users(aspnet_User entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Membership")]
	public partial class aspnet_Membership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _Password;
		
		private int _PasswordFormat;
		
		private string _PasswordSalt;
		
		private string _MobilePIN;
		
		private string _Email;
		
		private string _LoweredEmail;
		
		private string _PasswordQuestion;
		
		private string _PasswordAnswer;
		
		private bool _IsApproved;
		
		private bool _IsLockedOut;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _LastLoginDate;
		
		private System.DateTime _LastPasswordChangedDate;
		
		private System.DateTime _LastLockoutDate;
		
		private int _FailedPasswordAttemptCount;
		
		private System.DateTime _FailedPasswordAttemptWindowStart;
		
		private int _FailedPasswordAnswerAttemptCount;
		
		private System.DateTime _FailedPasswordAnswerAttemptWindowStart;
		
		private string _Comment;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPasswordFormatChanging(int value);
    partial void OnPasswordFormatChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnMobilePINChanging(string value);
    partial void OnMobilePINChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnLoweredEmailChanging(string value);
    partial void OnLoweredEmailChanged();
    partial void OnPasswordQuestionChanging(string value);
    partial void OnPasswordQuestionChanged();
    partial void OnPasswordAnswerChanging(string value);
    partial void OnPasswordAnswerChanged();
    partial void OnIsApprovedChanging(bool value);
    partial void OnIsApprovedChanged();
    partial void OnIsLockedOutChanging(bool value);
    partial void OnIsLockedOutChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnLastLoginDateChanging(System.DateTime value);
    partial void OnLastLoginDateChanged();
    partial void OnLastPasswordChangedDateChanging(System.DateTime value);
    partial void OnLastPasswordChangedDateChanged();
    partial void OnLastLockoutDateChanging(System.DateTime value);
    partial void OnLastLockoutDateChanged();
    partial void OnFailedPasswordAttemptCountChanging(int value);
    partial void OnFailedPasswordAttemptCountChanged();
    partial void OnFailedPasswordAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAttemptWindowStartChanged();
    partial void OnFailedPasswordAnswerAttemptCountChanging(int value);
    partial void OnFailedPasswordAnswerAttemptCountChanged();
    partial void OnFailedPasswordAnswerAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public aspnet_Membership()
		{
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordFormat", DbType="Int NOT NULL")]
		public int PasswordFormat
		{
			get
			{
				return this._PasswordFormat;
			}
			set
			{
				if ((this._PasswordFormat != value))
				{
					this.OnPasswordFormatChanging(value);
					this.SendPropertyChanging();
					this._PasswordFormat = value;
					this.SendPropertyChanged("PasswordFormat");
					this.OnPasswordFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePIN", DbType="NVarChar(16)")]
		public string MobilePIN
		{
			get
			{
				return this._MobilePIN;
			}
			set
			{
				if ((this._MobilePIN != value))
				{
					this.OnMobilePINChanging(value);
					this.SendPropertyChanging();
					this._MobilePIN = value;
					this.SendPropertyChanged("MobilePIN");
					this.OnMobilePINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredEmail", DbType="NVarChar(256)")]
		public string LoweredEmail
		{
			get
			{
				return this._LoweredEmail;
			}
			set
			{
				if ((this._LoweredEmail != value))
				{
					this.OnLoweredEmailChanging(value);
					this.SendPropertyChanging();
					this._LoweredEmail = value;
					this.SendPropertyChanged("LoweredEmail");
					this.OnLoweredEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordQuestion", DbType="NVarChar(256)")]
		public string PasswordQuestion
		{
			get
			{
				return this._PasswordQuestion;
			}
			set
			{
				if ((this._PasswordQuestion != value))
				{
					this.OnPasswordQuestionChanging(value);
					this.SendPropertyChanging();
					this._PasswordQuestion = value;
					this.SendPropertyChanged("PasswordQuestion");
					this.OnPasswordQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordAnswer", DbType="NVarChar(128)")]
		public string PasswordAnswer
		{
			get
			{
				return this._PasswordAnswer;
			}
			set
			{
				if ((this._PasswordAnswer != value))
				{
					this.OnPasswordAnswerChanging(value);
					this.SendPropertyChanging();
					this._PasswordAnswer = value;
					this.SendPropertyChanged("PasswordAnswer");
					this.OnPasswordAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit NOT NULL")]
		public bool IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLockedOut", DbType="Bit NOT NULL")]
		public bool IsLockedOut
		{
			get
			{
				return this._IsLockedOut;
			}
			set
			{
				if ((this._IsLockedOut != value))
				{
					this.OnIsLockedOutChanging(value);
					this.SendPropertyChanging();
					this._IsLockedOut = value;
					this.SendPropertyChanged("IsLockedOut");
					this.OnIsLockedOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPasswordChangedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastPasswordChangedDate
		{
			get
			{
				return this._LastPasswordChangedDate;
			}
			set
			{
				if ((this._LastPasswordChangedDate != value))
				{
					this.OnLastPasswordChangedDateChanging(value);
					this.SendPropertyChanging();
					this._LastPasswordChangedDate = value;
					this.SendPropertyChanged("LastPasswordChangedDate");
					this.OnLastPasswordChangedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLockoutDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLockoutDate
		{
			get
			{
				return this._LastLockoutDate;
			}
			set
			{
				if ((this._LastLockoutDate != value))
				{
					this.OnLastLockoutDateChanging(value);
					this.SendPropertyChanging();
					this._LastLockoutDate = value;
					this.SendPropertyChanged("LastLockoutDate");
					this.OnLastLockoutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAttemptCount
		{
			get
			{
				return this._FailedPasswordAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAttemptCount != value))
				{
					this.OnFailedPasswordAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAttemptCount");
					this.OnFailedPasswordAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAttemptWindowStart != value))
				{
					this.OnFailedPasswordAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAttemptWindowStart");
					this.OnFailedPasswordAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAnswerAttemptCount
		{
			get
			{
				return this._FailedPasswordAnswerAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptCount != value))
				{
					this.OnFailedPasswordAnswerAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptCount");
					this.OnFailedPasswordAnswerAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAnswerAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAnswerAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptWindowStart != value))
				{
					this.OnFailedPasswordAnswerAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
					this.OnFailedPasswordAnswerAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Membership", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Memberships.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Memberships.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_Membership = null;
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_Membership = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Profile")]
	public partial class aspnet_Profile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private string _PropertyNames;
		
		private string _PropertyValuesString;
		
		private System.Data.Linq.Binary _PropertyValuesBinary;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPropertyNamesChanging(string value);
    partial void OnPropertyNamesChanged();
    partial void OnPropertyValuesStringChanging(string value);
    partial void OnPropertyValuesStringChanged();
    partial void OnPropertyValuesBinaryChanging(System.Data.Linq.Binary value);
    partial void OnPropertyValuesBinaryChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public aspnet_Profile()
		{
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyNames", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PropertyNames
		{
			get
			{
				return this._PropertyNames;
			}
			set
			{
				if ((this._PropertyNames != value))
				{
					this.OnPropertyNamesChanging(value);
					this.SendPropertyChanging();
					this._PropertyNames = value;
					this.SendPropertyChanged("PropertyNames");
					this.OnPropertyNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValuesString", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PropertyValuesString
		{
			get
			{
				return this._PropertyValuesString;
			}
			set
			{
				if ((this._PropertyValuesString != value))
				{
					this.OnPropertyValuesStringChanging(value);
					this.SendPropertyChanging();
					this._PropertyValuesString = value;
					this.SendPropertyChanged("PropertyValuesString");
					this.OnPropertyValuesStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValuesBinary", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PropertyValuesBinary
		{
			get
			{
				return this._PropertyValuesBinary;
			}
			set
			{
				if ((this._PropertyValuesBinary != value))
				{
					this.OnPropertyValuesBinaryChanging(value);
					this.SendPropertyChanging();
					this._PropertyValuesBinary = value;
					this.SendPropertyChanged("PropertyValuesBinary");
					this.OnPropertyValuesBinaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Profile", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_Profile = null;
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_Profile = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Roles")]
	public partial class aspnet_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _RoleId;
		
		private string _RoleName;
		
		private string _LoweredRoleName;
		
		private string _Description;
		
		private EntitySet<aspnet_UsersInRole> _aspnet_UsersInRoles;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnLoweredRoleNameChanging(string value);
    partial void OnLoweredRoleNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public aspnet_Role()
		{
			this._aspnet_UsersInRoles = new EntitySet<aspnet_UsersInRole>(new Action<aspnet_UsersInRole>(this.attach_aspnet_UsersInRoles), new Action<aspnet_UsersInRole>(this.detach_aspnet_UsersInRoles));
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredRoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredRoleName
		{
			get
			{
				return this._LoweredRoleName;
			}
			set
			{
				if ((this._LoweredRoleName != value))
				{
					this.OnLoweredRoleNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredRoleName = value;
					this.SendPropertyChanged("LoweredRoleName");
					this.OnLoweredRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_aspnet_UsersInRole", Storage="_aspnet_UsersInRoles", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this._aspnet_UsersInRoles;
			}
			set
			{
				this._aspnet_UsersInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Role", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Roles.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Roles.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = this;
		}
		
		private void detach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_SchemaVersions")]
	public partial class aspnet_SchemaVersion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Feature;
		
		private string _CompatibleSchemaVersion;
		
		private bool _IsCurrentVersion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFeatureChanging(string value);
    partial void OnFeatureChanged();
    partial void OnCompatibleSchemaVersionChanging(string value);
    partial void OnCompatibleSchemaVersionChanged();
    partial void OnIsCurrentVersionChanging(bool value);
    partial void OnIsCurrentVersionChanged();
    #endregion
		
		public aspnet_SchemaVersion()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Feature", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Feature
		{
			get
			{
				return this._Feature;
			}
			set
			{
				if ((this._Feature != value))
				{
					this.OnFeatureChanging(value);
					this.SendPropertyChanging();
					this._Feature = value;
					this.SendPropertyChanged("Feature");
					this.OnFeatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompatibleSchemaVersion", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CompatibleSchemaVersion
		{
			get
			{
				return this._CompatibleSchemaVersion;
			}
			set
			{
				if ((this._CompatibleSchemaVersion != value))
				{
					this.OnCompatibleSchemaVersionChanging(value);
					this.SendPropertyChanging();
					this._CompatibleSchemaVersion = value;
					this.SendPropertyChanged("CompatibleSchemaVersion");
					this.OnCompatibleSchemaVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCurrentVersion", DbType="Bit NOT NULL")]
		public bool IsCurrentVersion
		{
			get
			{
				return this._IsCurrentVersion;
			}
			set
			{
				if ((this._IsCurrentVersion != value))
				{
					this.OnIsCurrentVersionChanging(value);
					this.SendPropertyChanging();
					this._IsCurrentVersion = value;
					this.SendPropertyChanged("IsCurrentVersion");
					this.OnIsCurrentVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Users")]
	public partial class aspnet_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _UserName;
		
		private string _LoweredUserName;
		
		private string _MobileAlias;
		
		private bool _IsAnonymous;
		
		private System.DateTime _LastActivityDate;
		
		private EntityRef<aspnet_Membership> _aspnet_Membership;
		
		private EntityRef<aspnet_Profile> _aspnet_Profile;
		
		private EntitySet<aspnet_UsersInRole> _aspnet_UsersInRoles;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLoweredUserNameChanging(string value);
    partial void OnLoweredUserNameChanged();
    partial void OnMobileAliasChanging(string value);
    partial void OnMobileAliasChanged();
    partial void OnIsAnonymousChanging(bool value);
    partial void OnIsAnonymousChanged();
    partial void OnLastActivityDateChanging(System.DateTime value);
    partial void OnLastActivityDateChanged();
    #endregion
		
		public aspnet_User()
		{
			this._aspnet_Membership = default(EntityRef<aspnet_Membership>);
			this._aspnet_Profile = default(EntityRef<aspnet_Profile>);
			this._aspnet_UsersInRoles = new EntitySet<aspnet_UsersInRole>(new Action<aspnet_UsersInRole>(this.attach_aspnet_UsersInRoles), new Action<aspnet_UsersInRole>(this.detach_aspnet_UsersInRoles));
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredUserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredUserName
		{
			get
			{
				return this._LoweredUserName;
			}
			set
			{
				if ((this._LoweredUserName != value))
				{
					this.OnLoweredUserNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredUserName = value;
					this.SendPropertyChanged("LoweredUserName");
					this.OnLoweredUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileAlias", DbType="NVarChar(16)")]
		public string MobileAlias
		{
			get
			{
				return this._MobileAlias;
			}
			set
			{
				if ((this._MobileAlias != value))
				{
					this.OnMobileAliasChanging(value);
					this.SendPropertyChanging();
					this._MobileAlias = value;
					this.SendPropertyChanged("MobileAlias");
					this.OnMobileAliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
		public bool IsAnonymous
		{
			get
			{
				return this._IsAnonymous;
			}
			set
			{
				if ((this._IsAnonymous != value))
				{
					this.OnIsAnonymousChanging(value);
					this.SendPropertyChanging();
					this._IsAnonymous = value;
					this.SendPropertyChanged("IsAnonymous");
					this.OnIsAnonymousChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastActivityDate
		{
			get
			{
				return this._LastActivityDate;
			}
			set
			{
				if ((this._LastActivityDate != value))
				{
					this.OnLastActivityDateChanging(value);
					this.SendPropertyChanging();
					this._LastActivityDate = value;
					this.SendPropertyChanged("LastActivityDate");
					this.OnLastActivityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_Membership", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public aspnet_Membership aspnet_Membership
		{
			get
			{
				return this._aspnet_Membership.Entity;
			}
			set
			{
				aspnet_Membership previousValue = this._aspnet_Membership.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Membership.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Membership.Entity = null;
						previousValue.aspnet_User = null;
					}
					this._aspnet_Membership.Entity = value;
					if ((value != null))
					{
						value.aspnet_User = this;
					}
					this.SendPropertyChanged("aspnet_Membership");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Profile", Storage="_aspnet_Profile", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public aspnet_Profile aspnet_Profile
		{
			get
			{
				return this._aspnet_Profile.Entity;
			}
			set
			{
				aspnet_Profile previousValue = this._aspnet_Profile.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Profile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Profile.Entity = null;
						previousValue.aspnet_User = null;
					}
					this._aspnet_Profile.Entity = value;
					if ((value != null))
					{
						value.aspnet_User = this;
					}
					this.SendPropertyChanged("aspnet_Profile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_UsersInRole", Storage="_aspnet_UsersInRoles", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this._aspnet_UsersInRoles;
			}
			set
			{
				this._aspnet_UsersInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_User", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Users.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Users.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_UsersInRoles")]
	public partial class aspnet_UsersInRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private System.Guid _RoleId;
		
		private EntityRef<aspnet_Role> _aspnet_Role;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    #endregion
		
		public aspnet_UsersInRole()
		{
			this._aspnet_Role = default(EntityRef<aspnet_Role>);
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._aspnet_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_aspnet_UsersInRole", Storage="_aspnet_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public aspnet_Role aspnet_Role
		{
			get
			{
				return this._aspnet_Role.Entity;
			}
			set
			{
				aspnet_Role previousValue = this._aspnet_Role.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Role.Entity = null;
						previousValue.aspnet_UsersInRoles.Remove(this);
					}
					this._aspnet_Role.Entity = value;
					if ((value != null))
					{
						value.aspnet_UsersInRoles.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_UsersInRole", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_UsersInRoles.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_UsersInRoles.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Assemblies")]
	public partial class Assembly : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AssemblyID;
		
		private int _PackageID;
		
		private string _AssemblyName;
		
		private string _Version;
		
		private EntityRef<Package> _Package;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAssemblyIDChanging(int value);
    partial void OnAssemblyIDChanged();
    partial void OnPackageIDChanging(int value);
    partial void OnPackageIDChanged();
    partial void OnAssemblyNameChanging(string value);
    partial void OnAssemblyNameChanged();
    partial void OnVersionChanging(string value);
    partial void OnVersionChanged();
    #endregion
		
		public Assembly()
		{
			this._Package = default(EntityRef<Package>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssemblyID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AssemblyID
		{
			get
			{
				return this._AssemblyID;
			}
			set
			{
				if ((this._AssemblyID != value))
				{
					this.OnAssemblyIDChanging(value);
					this.SendPropertyChanging();
					this._AssemblyID = value;
					this.SendPropertyChanged("AssemblyID");
					this.OnAssemblyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageID", DbType="Int NOT NULL")]
		public int PackageID
		{
			get
			{
				return this._PackageID;
			}
			set
			{
				if ((this._PackageID != value))
				{
					if (this._Package.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPackageIDChanging(value);
					this.SendPropertyChanging();
					this._PackageID = value;
					this.SendPropertyChanged("PackageID");
					this.OnPackageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssemblyName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string AssemblyName
		{
			get
			{
				return this._AssemblyName;
			}
			set
			{
				if ((this._AssemblyName != value))
				{
					this.OnAssemblyNameChanging(value);
					this.SendPropertyChanging();
					this._AssemblyName = value;
					this.SendPropertyChanged("AssemblyName");
					this.OnAssemblyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Package_Assembly", Storage="_Package", ThisKey="PackageID", OtherKey="PackageID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Package Package
		{
			get
			{
				return this._Package.Entity;
			}
			set
			{
				Package previousValue = this._Package.Entity;
				if (((previousValue != value) 
							|| (this._Package.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Package.Entity = null;
						previousValue.Assemblies.Remove(this);
					}
					this._Package.Entity = value;
					if ((value != null))
					{
						value.Assemblies.Add(this);
						this._PackageID = value.PackageID;
					}
					else
					{
						this._PackageID = default(int);
					}
					this.SendPropertyChanged("Package");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Authentication")]
	public partial class Authentication : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AuthenticationID;
		
		private int _PackageID;
		
		private string _AuthenticationType;
		
		private bool _IsEnabled;
		
		private string _SettingsControlSrc;
		
		private string _LoginControlSrc;
		
		private string _LogoffControlSrc;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntityRef<Package> _Package;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAuthenticationIDChanging(int value);
    partial void OnAuthenticationIDChanged();
    partial void OnPackageIDChanging(int value);
    partial void OnPackageIDChanged();
    partial void OnAuthenticationTypeChanging(string value);
    partial void OnAuthenticationTypeChanged();
    partial void OnIsEnabledChanging(bool value);
    partial void OnIsEnabledChanged();
    partial void OnSettingsControlSrcChanging(string value);
    partial void OnSettingsControlSrcChanged();
    partial void OnLoginControlSrcChanging(string value);
    partial void OnLoginControlSrcChanged();
    partial void OnLogoffControlSrcChanging(string value);
    partial void OnLogoffControlSrcChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public Authentication()
		{
			this._Package = default(EntityRef<Package>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthenticationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AuthenticationID
		{
			get
			{
				return this._AuthenticationID;
			}
			set
			{
				if ((this._AuthenticationID != value))
				{
					this.OnAuthenticationIDChanging(value);
					this.SendPropertyChanging();
					this._AuthenticationID = value;
					this.SendPropertyChanged("AuthenticationID");
					this.OnAuthenticationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageID", DbType="Int NOT NULL")]
		public int PackageID
		{
			get
			{
				return this._PackageID;
			}
			set
			{
				if ((this._PackageID != value))
				{
					if (this._Package.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPackageIDChanging(value);
					this.SendPropertyChanging();
					this._PackageID = value;
					this.SendPropertyChanged("PackageID");
					this.OnPackageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthenticationType", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string AuthenticationType
		{
			get
			{
				return this._AuthenticationType;
			}
			set
			{
				if ((this._AuthenticationType != value))
				{
					this.OnAuthenticationTypeChanging(value);
					this.SendPropertyChanging();
					this._AuthenticationType = value;
					this.SendPropertyChanged("AuthenticationType");
					this.OnAuthenticationTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEnabled", DbType="Bit NOT NULL")]
		public bool IsEnabled
		{
			get
			{
				return this._IsEnabled;
			}
			set
			{
				if ((this._IsEnabled != value))
				{
					this.OnIsEnabledChanging(value);
					this.SendPropertyChanging();
					this._IsEnabled = value;
					this.SendPropertyChanged("IsEnabled");
					this.OnIsEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingsControlSrc", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string SettingsControlSrc
		{
			get
			{
				return this._SettingsControlSrc;
			}
			set
			{
				if ((this._SettingsControlSrc != value))
				{
					this.OnSettingsControlSrcChanging(value);
					this.SendPropertyChanging();
					this._SettingsControlSrc = value;
					this.SendPropertyChanged("SettingsControlSrc");
					this.OnSettingsControlSrcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginControlSrc", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string LoginControlSrc
		{
			get
			{
				return this._LoginControlSrc;
			}
			set
			{
				if ((this._LoginControlSrc != value))
				{
					this.OnLoginControlSrcChanging(value);
					this.SendPropertyChanging();
					this._LoginControlSrc = value;
					this.SendPropertyChanged("LoginControlSrc");
					this.OnLoginControlSrcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogoffControlSrc", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string LogoffControlSrc
		{
			get
			{
				return this._LogoffControlSrc;
			}
			set
			{
				if ((this._LogoffControlSrc != value))
				{
					this.OnLogoffControlSrcChanging(value);
					this.SendPropertyChanging();
					this._LogoffControlSrc = value;
					this.SendPropertyChanged("LogoffControlSrc");
					this.OnLogoffControlSrcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Package_Authentication", Storage="_Package", ThisKey="PackageID", OtherKey="PackageID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Package Package
		{
			get
			{
				return this._Package.Entity;
			}
			set
			{
				Package previousValue = this._Package.Entity;
				if (((previousValue != value) 
							|| (this._Package.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Package.Entity = null;
						previousValue.Authentications.Remove(this);
					}
					this._Package.Entity = value;
					if ((value != null))
					{
						value.Authentications.Add(this);
						this._PackageID = value.PackageID;
					}
					else
					{
						this._PackageID = default(int);
					}
					this.SendPropertyChanged("Package");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Banners")]
	public partial class Banner : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BannerId;
		
		private int _VendorId;
		
		private string _ImageFile;
		
		private string _BannerName;
		
		private int _Impressions;
		
		private double _CPM;
		
		private int _Views;
		
		private int _ClickThroughs;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private string _CreatedByUser;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<int> _BannerTypeId;
		
		private string _Description;
		
		private string _GroupName;
		
		private bool _Criteria;
		
		private string _URL;
		
		private int _Width;
		
		private int _Height;
		
		private EntityRef<Vendor> _Vendor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBannerIdChanging(int value);
    partial void OnBannerIdChanged();
    partial void OnVendorIdChanging(int value);
    partial void OnVendorIdChanged();
    partial void OnImageFileChanging(string value);
    partial void OnImageFileChanged();
    partial void OnBannerNameChanging(string value);
    partial void OnBannerNameChanged();
    partial void OnImpressionsChanging(int value);
    partial void OnImpressionsChanged();
    partial void OnCPMChanging(double value);
    partial void OnCPMChanged();
    partial void OnViewsChanging(int value);
    partial void OnViewsChanged();
    partial void OnClickThroughsChanging(int value);
    partial void OnClickThroughsChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnCreatedByUserChanging(string value);
    partial void OnCreatedByUserChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnBannerTypeIdChanging(System.Nullable<int> value);
    partial void OnBannerTypeIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    partial void OnCriteriaChanging(bool value);
    partial void OnCriteriaChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnWidthChanging(int value);
    partial void OnWidthChanged();
    partial void OnHeightChanging(int value);
    partial void OnHeightChanged();
    #endregion
		
		public Banner()
		{
			this._Vendor = default(EntityRef<Vendor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BannerId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BannerId
		{
			get
			{
				return this._BannerId;
			}
			set
			{
				if ((this._BannerId != value))
				{
					this.OnBannerIdChanging(value);
					this.SendPropertyChanging();
					this._BannerId = value;
					this.SendPropertyChanged("BannerId");
					this.OnBannerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorId", DbType="Int NOT NULL")]
		public int VendorId
		{
			get
			{
				return this._VendorId;
			}
			set
			{
				if ((this._VendorId != value))
				{
					if (this._Vendor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVendorIdChanging(value);
					this.SendPropertyChanging();
					this._VendorId = value;
					this.SendPropertyChanged("VendorId");
					this.OnVendorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageFile", DbType="NVarChar(100)")]
		public string ImageFile
		{
			get
			{
				return this._ImageFile;
			}
			set
			{
				if ((this._ImageFile != value))
				{
					this.OnImageFileChanging(value);
					this.SendPropertyChanging();
					this._ImageFile = value;
					this.SendPropertyChanged("ImageFile");
					this.OnImageFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BannerName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string BannerName
		{
			get
			{
				return this._BannerName;
			}
			set
			{
				if ((this._BannerName != value))
				{
					this.OnBannerNameChanging(value);
					this.SendPropertyChanging();
					this._BannerName = value;
					this.SendPropertyChanged("BannerName");
					this.OnBannerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Impressions", DbType="Int NOT NULL")]
		public int Impressions
		{
			get
			{
				return this._Impressions;
			}
			set
			{
				if ((this._Impressions != value))
				{
					this.OnImpressionsChanging(value);
					this.SendPropertyChanging();
					this._Impressions = value;
					this.SendPropertyChanged("Impressions");
					this.OnImpressionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPM", DbType="Float NOT NULL")]
		public double CPM
		{
			get
			{
				return this._CPM;
			}
			set
			{
				if ((this._CPM != value))
				{
					this.OnCPMChanging(value);
					this.SendPropertyChanging();
					this._CPM = value;
					this.SendPropertyChanged("CPM");
					this.OnCPMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Views", DbType="Int NOT NULL")]
		public int Views
		{
			get
			{
				return this._Views;
			}
			set
			{
				if ((this._Views != value))
				{
					this.OnViewsChanging(value);
					this.SendPropertyChanging();
					this._Views = value;
					this.SendPropertyChanged("Views");
					this.OnViewsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClickThroughs", DbType="Int NOT NULL")]
		public int ClickThroughs
		{
			get
			{
				return this._ClickThroughs;
			}
			set
			{
				if ((this._ClickThroughs != value))
				{
					this.OnClickThroughsChanging(value);
					this.SendPropertyChanging();
					this._ClickThroughs = value;
					this.SendPropertyChanged("ClickThroughs");
					this.OnClickThroughsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUser", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string CreatedByUser
		{
			get
			{
				return this._CreatedByUser;
			}
			set
			{
				if ((this._CreatedByUser != value))
				{
					this.OnCreatedByUserChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUser = value;
					this.SendPropertyChanged("CreatedByUser");
					this.OnCreatedByUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BannerTypeId", DbType="Int")]
		public System.Nullable<int> BannerTypeId
		{
			get
			{
				return this._BannerTypeId;
			}
			set
			{
				if ((this._BannerTypeId != value))
				{
					this.OnBannerTypeIdChanging(value);
					this.SendPropertyChanging();
					this._BannerTypeId = value;
					this.SendPropertyChanged("BannerTypeId");
					this.OnBannerTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(2000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(100)")]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Criteria", DbType="Bit NOT NULL")]
		public bool Criteria
		{
			get
			{
				return this._Criteria;
			}
			set
			{
				if ((this._Criteria != value))
				{
					this.OnCriteriaChanging(value);
					this.SendPropertyChanging();
					this._Criteria = value;
					this.SendPropertyChanged("Criteria");
					this.OnCriteriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="NVarChar(255)")]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Width", DbType="Int NOT NULL")]
		public int Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Int NOT NULL")]
		public int Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendor_Banner", Storage="_Vendor", ThisKey="VendorId", OtherKey="VendorId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Vendor Vendor
		{
			get
			{
				return this._Vendor.Entity;
			}
			set
			{
				Vendor previousValue = this._Vendor.Entity;
				if (((previousValue != value) 
							|| (this._Vendor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vendor.Entity = null;
						previousValue.Banners.Remove(this);
					}
					this._Vendor.Entity = value;
					if ((value != null))
					{
						value.Banners.Add(this);
						this._VendorId = value.VendorId;
					}
					else
					{
						this._VendorId = default(int);
					}
					this.SendPropertyChanged("Vendor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Classification")]
	public partial class Classification : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ClassificationId;
		
		private string _ClassificationName;
		
		private System.Nullable<int> _ParentId;
		
		private EntitySet<Classification> _Classifications;
		
		private EntitySet<VendorClassification> _VendorClassifications;
		
		private EntityRef<Classification> _Classification1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClassificationIdChanging(int value);
    partial void OnClassificationIdChanged();
    partial void OnClassificationNameChanging(string value);
    partial void OnClassificationNameChanged();
    partial void OnParentIdChanging(System.Nullable<int> value);
    partial void OnParentIdChanged();
    #endregion
		
		public Classification()
		{
			this._Classifications = new EntitySet<Classification>(new Action<Classification>(this.attach_Classifications), new Action<Classification>(this.detach_Classifications));
			this._VendorClassifications = new EntitySet<VendorClassification>(new Action<VendorClassification>(this.attach_VendorClassifications), new Action<VendorClassification>(this.detach_VendorClassifications));
			this._Classification1 = default(EntityRef<Classification>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassificationId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ClassificationId
		{
			get
			{
				return this._ClassificationId;
			}
			set
			{
				if ((this._ClassificationId != value))
				{
					this.OnClassificationIdChanging(value);
					this.SendPropertyChanging();
					this._ClassificationId = value;
					this.SendPropertyChanged("ClassificationId");
					this.OnClassificationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassificationName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string ClassificationName
		{
			get
			{
				return this._ClassificationName;
			}
			set
			{
				if ((this._ClassificationName != value))
				{
					this.OnClassificationNameChanging(value);
					this.SendPropertyChanging();
					this._ClassificationName = value;
					this.SendPropertyChanged("ClassificationName");
					this.OnClassificationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="Int")]
		public System.Nullable<int> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					if (this._Classification1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Classification_Classification", Storage="_Classifications", ThisKey="ClassificationId", OtherKey="ParentId")]
		public EntitySet<Classification> Classifications
		{
			get
			{
				return this._Classifications;
			}
			set
			{
				this._Classifications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Classification_VendorClassification", Storage="_VendorClassifications", ThisKey="ClassificationId", OtherKey="ClassificationId")]
		public EntitySet<VendorClassification> VendorClassifications
		{
			get
			{
				return this._VendorClassifications;
			}
			set
			{
				this._VendorClassifications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Classification_Classification", Storage="_Classification1", ThisKey="ParentId", OtherKey="ClassificationId", IsForeignKey=true)]
		public Classification Classification1
		{
			get
			{
				return this._Classification1.Entity;
			}
			set
			{
				Classification previousValue = this._Classification1.Entity;
				if (((previousValue != value) 
							|| (this._Classification1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Classification1.Entity = null;
						previousValue.Classifications.Remove(this);
					}
					this._Classification1.Entity = value;
					if ((value != null))
					{
						value.Classifications.Add(this);
						this._ParentId = value.ClassificationId;
					}
					else
					{
						this._ParentId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Classification1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Classifications(Classification entity)
		{
			this.SendPropertyChanging();
			entity.Classification1 = this;
		}
		
		private void detach_Classifications(Classification entity)
		{
			this.SendPropertyChanging();
			entity.Classification1 = null;
		}
		
		private void attach_VendorClassifications(VendorClassification entity)
		{
			this.SendPropertyChanging();
			entity.Classification = this;
		}
		
		private void detach_VendorClassifications(VendorClassification entity)
		{
			this.SendPropertyChanging();
			entity.Classification = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContentItems")]
	public partial class ContentItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContentItemID;
		
		private string _Content;
		
		private int _ContentTypeID;
		
		private int _TabID;
		
		private int _ModuleID;
		
		private string _ContentKey;
		
		private bool _Indexed;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntitySet<ContentItems_MetaData> _ContentItems_MetaDatas;
		
		private EntitySet<ContentItems_Tag> _ContentItems_Tags;
		
		private EntitySet<Module> _Modules;
		
		private EntitySet<Tab> _Tabs;
		
		private EntityRef<ContentType> _ContentType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContentItemIDChanging(int value);
    partial void OnContentItemIDChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnContentTypeIDChanging(int value);
    partial void OnContentTypeIDChanged();
    partial void OnTabIDChanging(int value);
    partial void OnTabIDChanged();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnContentKeyChanging(string value);
    partial void OnContentKeyChanged();
    partial void OnIndexedChanging(bool value);
    partial void OnIndexedChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public ContentItem()
		{
			this._ContentItems_MetaDatas = new EntitySet<ContentItems_MetaData>(new Action<ContentItems_MetaData>(this.attach_ContentItems_MetaDatas), new Action<ContentItems_MetaData>(this.detach_ContentItems_MetaDatas));
			this._ContentItems_Tags = new EntitySet<ContentItems_Tag>(new Action<ContentItems_Tag>(this.attach_ContentItems_Tags), new Action<ContentItems_Tag>(this.detach_ContentItems_Tags));
			this._Modules = new EntitySet<Module>(new Action<Module>(this.attach_Modules), new Action<Module>(this.detach_Modules));
			this._Tabs = new EntitySet<Tab>(new Action<Tab>(this.attach_Tabs), new Action<Tab>(this.detach_Tabs));
			this._ContentType = default(EntityRef<ContentType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ContentItemID
		{
			get
			{
				return this._ContentItemID;
			}
			set
			{
				if ((this._ContentItemID != value))
				{
					this.OnContentItemIDChanging(value);
					this.SendPropertyChanging();
					this._ContentItemID = value;
					this.SendPropertyChanged("ContentItemID");
					this.OnContentItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(MAX)")]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentTypeID", DbType="Int NOT NULL")]
		public int ContentTypeID
		{
			get
			{
				return this._ContentTypeID;
			}
			set
			{
				if ((this._ContentTypeID != value))
				{
					if (this._ContentType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContentTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ContentTypeID = value;
					this.SendPropertyChanged("ContentTypeID");
					this.OnContentTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TabID", DbType="Int NOT NULL")]
		public int TabID
		{
			get
			{
				return this._TabID;
			}
			set
			{
				if ((this._TabID != value))
				{
					this.OnTabIDChanging(value);
					this.SendPropertyChanging();
					this._TabID = value;
					this.SendPropertyChanged("TabID");
					this.OnTabIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleID", DbType="Int NOT NULL")]
		public int ModuleID
		{
			get
			{
				return this._ModuleID;
			}
			set
			{
				if ((this._ModuleID != value))
				{
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentKey", DbType="NVarChar(250)")]
		public string ContentKey
		{
			get
			{
				return this._ContentKey;
			}
			set
			{
				if ((this._ContentKey != value))
				{
					this.OnContentKeyChanging(value);
					this.SendPropertyChanging();
					this._ContentKey = value;
					this.SendPropertyChanged("ContentKey");
					this.OnContentKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Indexed", DbType="Bit NOT NULL")]
		public bool Indexed
		{
			get
			{
				return this._Indexed;
			}
			set
			{
				if ((this._Indexed != value))
				{
					this.OnIndexedChanging(value);
					this.SendPropertyChanging();
					this._Indexed = value;
					this.SendPropertyChanged("Indexed");
					this.OnIndexedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContentItem_ContentItems_MetaData", Storage="_ContentItems_MetaDatas", ThisKey="ContentItemID", OtherKey="ContentItemID")]
		public EntitySet<ContentItems_MetaData> ContentItems_MetaDatas
		{
			get
			{
				return this._ContentItems_MetaDatas;
			}
			set
			{
				this._ContentItems_MetaDatas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContentItem_ContentItems_Tag", Storage="_ContentItems_Tags", ThisKey="ContentItemID", OtherKey="ContentItemID")]
		public EntitySet<ContentItems_Tag> ContentItems_Tags
		{
			get
			{
				return this._ContentItems_Tags;
			}
			set
			{
				this._ContentItems_Tags.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContentItem_Module", Storage="_Modules", ThisKey="ContentItemID", OtherKey="ContentItemID")]
		public EntitySet<Module> Modules
		{
			get
			{
				return this._Modules;
			}
			set
			{
				this._Modules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContentItem_Tab", Storage="_Tabs", ThisKey="ContentItemID", OtherKey="ContentItemID")]
		public EntitySet<Tab> Tabs
		{
			get
			{
				return this._Tabs;
			}
			set
			{
				this._Tabs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContentType_ContentItem", Storage="_ContentType", ThisKey="ContentTypeID", OtherKey="ContentTypeID", IsForeignKey=true)]
		public ContentType ContentType
		{
			get
			{
				return this._ContentType.Entity;
			}
			set
			{
				ContentType previousValue = this._ContentType.Entity;
				if (((previousValue != value) 
							|| (this._ContentType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContentType.Entity = null;
						previousValue.ContentItems.Remove(this);
					}
					this._ContentType.Entity = value;
					if ((value != null))
					{
						value.ContentItems.Add(this);
						this._ContentTypeID = value.ContentTypeID;
					}
					else
					{
						this._ContentTypeID = default(int);
					}
					this.SendPropertyChanged("ContentType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ContentItems_MetaDatas(ContentItems_MetaData entity)
		{
			this.SendPropertyChanging();
			entity.ContentItem = this;
		}
		
		private void detach_ContentItems_MetaDatas(ContentItems_MetaData entity)
		{
			this.SendPropertyChanging();
			entity.ContentItem = null;
		}
		
		private void attach_ContentItems_Tags(ContentItems_Tag entity)
		{
			this.SendPropertyChanging();
			entity.ContentItem = this;
		}
		
		private void detach_ContentItems_Tags(ContentItems_Tag entity)
		{
			this.SendPropertyChanging();
			entity.ContentItem = null;
		}
		
		private void attach_Modules(Module entity)
		{
			this.SendPropertyChanging();
			entity.ContentItem = this;
		}
		
		private void detach_Modules(Module entity)
		{
			this.SendPropertyChanging();
			entity.ContentItem = null;
		}
		
		private void attach_Tabs(Tab entity)
		{
			this.SendPropertyChanging();
			entity.ContentItem = this;
		}
		
		private void detach_Tabs(Tab entity)
		{
			this.SendPropertyChanging();
			entity.ContentItem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContentItems_MetaData")]
	public partial class ContentItems_MetaData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContentItemMetaDataID;
		
		private int _ContentItemID;
		
		private int _MetaDataID;
		
		private string _MetaDataValue;
		
		private EntityRef<ContentItem> _ContentItem;
		
		private EntityRef<MetaData> _MetaData;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContentItemMetaDataIDChanging(int value);
    partial void OnContentItemMetaDataIDChanged();
    partial void OnContentItemIDChanging(int value);
    partial void OnContentItemIDChanged();
    partial void OnMetaDataIDChanging(int value);
    partial void OnMetaDataIDChanged();
    partial void OnMetaDataValueChanging(string value);
    partial void OnMetaDataValueChanged();
    #endregion
		
		public ContentItems_MetaData()
		{
			this._ContentItem = default(EntityRef<ContentItem>);
			this._MetaData = default(EntityRef<MetaData>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentItemMetaDataID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ContentItemMetaDataID
		{
			get
			{
				return this._ContentItemMetaDataID;
			}
			set
			{
				if ((this._ContentItemMetaDataID != value))
				{
					this.OnContentItemMetaDataIDChanging(value);
					this.SendPropertyChanging();
					this._ContentItemMetaDataID = value;
					this.SendPropertyChanged("ContentItemMetaDataID");
					this.OnContentItemMetaDataIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentItemID", DbType="Int NOT NULL")]
		public int ContentItemID
		{
			get
			{
				return this._ContentItemID;
			}
			set
			{
				if ((this._ContentItemID != value))
				{
					if (this._ContentItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContentItemIDChanging(value);
					this.SendPropertyChanging();
					this._ContentItemID = value;
					this.SendPropertyChanged("ContentItemID");
					this.OnContentItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaDataID", DbType="Int NOT NULL")]
		public int MetaDataID
		{
			get
			{
				return this._MetaDataID;
			}
			set
			{
				if ((this._MetaDataID != value))
				{
					if (this._MetaData.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMetaDataIDChanging(value);
					this.SendPropertyChanging();
					this._MetaDataID = value;
					this.SendPropertyChanged("MetaDataID");
					this.OnMetaDataIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaDataValue", DbType="NVarChar(MAX)")]
		public string MetaDataValue
		{
			get
			{
				return this._MetaDataValue;
			}
			set
			{
				if ((this._MetaDataValue != value))
				{
					this.OnMetaDataValueChanging(value);
					this.SendPropertyChanging();
					this._MetaDataValue = value;
					this.SendPropertyChanged("MetaDataValue");
					this.OnMetaDataValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContentItem_ContentItems_MetaData", Storage="_ContentItem", ThisKey="ContentItemID", OtherKey="ContentItemID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ContentItem ContentItem
		{
			get
			{
				return this._ContentItem.Entity;
			}
			set
			{
				ContentItem previousValue = this._ContentItem.Entity;
				if (((previousValue != value) 
							|| (this._ContentItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContentItem.Entity = null;
						previousValue.ContentItems_MetaDatas.Remove(this);
					}
					this._ContentItem.Entity = value;
					if ((value != null))
					{
						value.ContentItems_MetaDatas.Add(this);
						this._ContentItemID = value.ContentItemID;
					}
					else
					{
						this._ContentItemID = default(int);
					}
					this.SendPropertyChanged("ContentItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MetaData_ContentItems_MetaData", Storage="_MetaData", ThisKey="MetaDataID", OtherKey="MetaDataID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MetaData MetaData
		{
			get
			{
				return this._MetaData.Entity;
			}
			set
			{
				MetaData previousValue = this._MetaData.Entity;
				if (((previousValue != value) 
							|| (this._MetaData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MetaData.Entity = null;
						previousValue.ContentItems_MetaDatas.Remove(this);
					}
					this._MetaData.Entity = value;
					if ((value != null))
					{
						value.ContentItems_MetaDatas.Add(this);
						this._MetaDataID = value.MetaDataID;
					}
					else
					{
						this._MetaDataID = default(int);
					}
					this.SendPropertyChanged("MetaData");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContentItems_Tags")]
	public partial class ContentItems_Tag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContentItemTagID;
		
		private int _ContentItemID;
		
		private int _TermID;
		
		private EntityRef<ContentItem> _ContentItem;
		
		private EntityRef<Taxonomy_Term> _Taxonomy_Term;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContentItemTagIDChanging(int value);
    partial void OnContentItemTagIDChanged();
    partial void OnContentItemIDChanging(int value);
    partial void OnContentItemIDChanged();
    partial void OnTermIDChanging(int value);
    partial void OnTermIDChanged();
    #endregion
		
		public ContentItems_Tag()
		{
			this._ContentItem = default(EntityRef<ContentItem>);
			this._Taxonomy_Term = default(EntityRef<Taxonomy_Term>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentItemTagID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ContentItemTagID
		{
			get
			{
				return this._ContentItemTagID;
			}
			set
			{
				if ((this._ContentItemTagID != value))
				{
					this.OnContentItemTagIDChanging(value);
					this.SendPropertyChanging();
					this._ContentItemTagID = value;
					this.SendPropertyChanged("ContentItemTagID");
					this.OnContentItemTagIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentItemID", DbType="Int NOT NULL")]
		public int ContentItemID
		{
			get
			{
				return this._ContentItemID;
			}
			set
			{
				if ((this._ContentItemID != value))
				{
					if (this._ContentItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContentItemIDChanging(value);
					this.SendPropertyChanging();
					this._ContentItemID = value;
					this.SendPropertyChanged("ContentItemID");
					this.OnContentItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermID", DbType="Int NOT NULL")]
		public int TermID
		{
			get
			{
				return this._TermID;
			}
			set
			{
				if ((this._TermID != value))
				{
					if (this._Taxonomy_Term.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTermIDChanging(value);
					this.SendPropertyChanging();
					this._TermID = value;
					this.SendPropertyChanged("TermID");
					this.OnTermIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContentItem_ContentItems_Tag", Storage="_ContentItem", ThisKey="ContentItemID", OtherKey="ContentItemID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ContentItem ContentItem
		{
			get
			{
				return this._ContentItem.Entity;
			}
			set
			{
				ContentItem previousValue = this._ContentItem.Entity;
				if (((previousValue != value) 
							|| (this._ContentItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContentItem.Entity = null;
						previousValue.ContentItems_Tags.Remove(this);
					}
					this._ContentItem.Entity = value;
					if ((value != null))
					{
						value.ContentItems_Tags.Add(this);
						this._ContentItemID = value.ContentItemID;
					}
					else
					{
						this._ContentItemID = default(int);
					}
					this.SendPropertyChanged("ContentItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Taxonomy_Term_ContentItems_Tag", Storage="_Taxonomy_Term", ThisKey="TermID", OtherKey="TermID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Taxonomy_Term Taxonomy_Term
		{
			get
			{
				return this._Taxonomy_Term.Entity;
			}
			set
			{
				Taxonomy_Term previousValue = this._Taxonomy_Term.Entity;
				if (((previousValue != value) 
							|| (this._Taxonomy_Term.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Taxonomy_Term.Entity = null;
						previousValue.ContentItems_Tags.Remove(this);
					}
					this._Taxonomy_Term.Entity = value;
					if ((value != null))
					{
						value.ContentItems_Tags.Add(this);
						this._TermID = value.TermID;
					}
					else
					{
						this._TermID = default(int);
					}
					this.SendPropertyChanged("Taxonomy_Term");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContentTypes")]
	public partial class ContentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContentTypeID;
		
		private string _ContentType1;
		
		private EntitySet<ContentItem> _ContentItems;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContentTypeIDChanging(int value);
    partial void OnContentTypeIDChanged();
    partial void OnContentType1Changing(string value);
    partial void OnContentType1Changed();
    #endregion
		
		public ContentType()
		{
			this._ContentItems = new EntitySet<ContentItem>(new Action<ContentItem>(this.attach_ContentItems), new Action<ContentItem>(this.detach_ContentItems));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ContentTypeID
		{
			get
			{
				return this._ContentTypeID;
			}
			set
			{
				if ((this._ContentTypeID != value))
				{
					this.OnContentTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ContentTypeID = value;
					this.SendPropertyChanged("ContentTypeID");
					this.OnContentTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ContentType", Storage="_ContentType1", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ContentType1
		{
			get
			{
				return this._ContentType1;
			}
			set
			{
				if ((this._ContentType1 != value))
				{
					this.OnContentType1Changing(value);
					this.SendPropertyChanging();
					this._ContentType1 = value;
					this.SendPropertyChanged("ContentType1");
					this.OnContentType1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContentType_ContentItem", Storage="_ContentItems", ThisKey="ContentTypeID", OtherKey="ContentTypeID")]
		public EntitySet<ContentItem> ContentItems
		{
			get
			{
				return this._ContentItems;
			}
			set
			{
				this._ContentItems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ContentItems(ContentItem entity)
		{
			this.SendPropertyChanging();
			entity.ContentType = this;
		}
		
		private void detach_ContentItems(ContentItem entity)
		{
			this.SendPropertyChanging();
			entity.ContentType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CoreMessaging_MessageAttachments")]
	public partial class CoreMessaging_MessageAttachment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MessageAttachmentID;
		
		private int _MessageID;
		
		private System.Nullable<int> _FileID;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntityRef<CoreMessaging_Message> _CoreMessaging_Message;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMessageAttachmentIDChanging(int value);
    partial void OnMessageAttachmentIDChanged();
    partial void OnMessageIDChanging(int value);
    partial void OnMessageIDChanged();
    partial void OnFileIDChanging(System.Nullable<int> value);
    partial void OnFileIDChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public CoreMessaging_MessageAttachment()
		{
			this._CoreMessaging_Message = default(EntityRef<CoreMessaging_Message>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageAttachmentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MessageAttachmentID
		{
			get
			{
				return this._MessageAttachmentID;
			}
			set
			{
				if ((this._MessageAttachmentID != value))
				{
					this.OnMessageAttachmentIDChanging(value);
					this.SendPropertyChanging();
					this._MessageAttachmentID = value;
					this.SendPropertyChanged("MessageAttachmentID");
					this.OnMessageAttachmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageID", DbType="Int NOT NULL")]
		public int MessageID
		{
			get
			{
				return this._MessageID;
			}
			set
			{
				if ((this._MessageID != value))
				{
					if (this._CoreMessaging_Message.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMessageIDChanging(value);
					this.SendPropertyChanging();
					this._MessageID = value;
					this.SendPropertyChanged("MessageID");
					this.OnMessageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileID", DbType="Int")]
		public System.Nullable<int> FileID
		{
			get
			{
				return this._FileID;
			}
			set
			{
				if ((this._FileID != value))
				{
					this.OnFileIDChanging(value);
					this.SendPropertyChanging();
					this._FileID = value;
					this.SendPropertyChanged("FileID");
					this.OnFileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CoreMessaging_Message_CoreMessaging_MessageAttachment", Storage="_CoreMessaging_Message", ThisKey="MessageID", OtherKey="MessageID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CoreMessaging_Message CoreMessaging_Message
		{
			get
			{
				return this._CoreMessaging_Message.Entity;
			}
			set
			{
				CoreMessaging_Message previousValue = this._CoreMessaging_Message.Entity;
				if (((previousValue != value) 
							|| (this._CoreMessaging_Message.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CoreMessaging_Message.Entity = null;
						previousValue.CoreMessaging_MessageAttachments.Remove(this);
					}
					this._CoreMessaging_Message.Entity = value;
					if ((value != null))
					{
						value.CoreMessaging_MessageAttachments.Add(this);
						this._MessageID = value.MessageID;
					}
					else
					{
						this._MessageID = default(int);
					}
					this.SendPropertyChanged("CoreMessaging_Message");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CoreMessaging_MessageRecipients")]
	public partial class CoreMessaging_MessageRecipient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RecipientID;
		
		private int _MessageID;
		
		private int _UserID;
		
		private bool _Read;
		
		private bool _Archived;
		
		private bool _EmailSent;
		
		private System.Nullable<System.DateTime> _EmailSentDate;
		
		private System.Nullable<System.Guid> _EmailSchedulerInstance;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntityRef<CoreMessaging_Message> _CoreMessaging_Message;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRecipientIDChanging(int value);
    partial void OnRecipientIDChanged();
    partial void OnMessageIDChanging(int value);
    partial void OnMessageIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnReadChanging(bool value);
    partial void OnReadChanged();
    partial void OnArchivedChanging(bool value);
    partial void OnArchivedChanged();
    partial void OnEmailSentChanging(bool value);
    partial void OnEmailSentChanged();
    partial void OnEmailSentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEmailSentDateChanged();
    partial void OnEmailSchedulerInstanceChanging(System.Nullable<System.Guid> value);
    partial void OnEmailSchedulerInstanceChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public CoreMessaging_MessageRecipient()
		{
			this._CoreMessaging_Message = default(EntityRef<CoreMessaging_Message>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecipientID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RecipientID
		{
			get
			{
				return this._RecipientID;
			}
			set
			{
				if ((this._RecipientID != value))
				{
					this.OnRecipientIDChanging(value);
					this.SendPropertyChanging();
					this._RecipientID = value;
					this.SendPropertyChanged("RecipientID");
					this.OnRecipientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageID", DbType="Int NOT NULL")]
		public int MessageID
		{
			get
			{
				return this._MessageID;
			}
			set
			{
				if ((this._MessageID != value))
				{
					if (this._CoreMessaging_Message.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMessageIDChanging(value);
					this.SendPropertyChanging();
					this._MessageID = value;
					this.SendPropertyChanged("MessageID");
					this.OnMessageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Read]", Storage="_Read", DbType="Bit NOT NULL")]
		public bool Read
		{
			get
			{
				return this._Read;
			}
			set
			{
				if ((this._Read != value))
				{
					this.OnReadChanging(value);
					this.SendPropertyChanging();
					this._Read = value;
					this.SendPropertyChanged("Read");
					this.OnReadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Archived", DbType="Bit NOT NULL")]
		public bool Archived
		{
			get
			{
				return this._Archived;
			}
			set
			{
				if ((this._Archived != value))
				{
					this.OnArchivedChanging(value);
					this.SendPropertyChanging();
					this._Archived = value;
					this.SendPropertyChanged("Archived");
					this.OnArchivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailSent", DbType="Bit NOT NULL")]
		public bool EmailSent
		{
			get
			{
				return this._EmailSent;
			}
			set
			{
				if ((this._EmailSent != value))
				{
					this.OnEmailSentChanging(value);
					this.SendPropertyChanging();
					this._EmailSent = value;
					this.SendPropertyChanged("EmailSent");
					this.OnEmailSentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailSentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EmailSentDate
		{
			get
			{
				return this._EmailSentDate;
			}
			set
			{
				if ((this._EmailSentDate != value))
				{
					this.OnEmailSentDateChanging(value);
					this.SendPropertyChanging();
					this._EmailSentDate = value;
					this.SendPropertyChanged("EmailSentDate");
					this.OnEmailSentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailSchedulerInstance", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> EmailSchedulerInstance
		{
			get
			{
				return this._EmailSchedulerInstance;
			}
			set
			{
				if ((this._EmailSchedulerInstance != value))
				{
					this.OnEmailSchedulerInstanceChanging(value);
					this.SendPropertyChanging();
					this._EmailSchedulerInstance = value;
					this.SendPropertyChanged("EmailSchedulerInstance");
					this.OnEmailSchedulerInstanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CoreMessaging_Message_CoreMessaging_MessageRecipient", Storage="_CoreMessaging_Message", ThisKey="MessageID", OtherKey="MessageID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CoreMessaging_Message CoreMessaging_Message
		{
			get
			{
				return this._CoreMessaging_Message.Entity;
			}
			set
			{
				CoreMessaging_Message previousValue = this._CoreMessaging_Message.Entity;
				if (((previousValue != value) 
							|| (this._CoreMessaging_Message.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CoreMessaging_Message.Entity = null;
						previousValue.CoreMessaging_MessageRecipients.Remove(this);
					}
					this._CoreMessaging_Message.Entity = value;
					if ((value != null))
					{
						value.CoreMessaging_MessageRecipients.Add(this);
						this._MessageID = value.MessageID;
					}
					else
					{
						this._MessageID = default(int);
					}
					this.SendPropertyChanged("CoreMessaging_Message");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CoreMessaging_Messages")]
	public partial class CoreMessaging_Message : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MessageID;
		
		private System.Nullable<int> _PortalID;
		
		private System.Nullable<int> _NotificationTypeID;
		
		private string _To;
		
		private string _From;
		
		private string _Subject;
		
		private string _Body;
		
		private System.Nullable<int> _ConversationID;
		
		private System.Nullable<bool> _ReplyAllAllowed;
		
		private System.Nullable<int> _SenderUserID;
		
		private System.Nullable<System.DateTime> _ExpirationDate;
		
		private string _Context;
		
		private System.Nullable<bool> _IncludeDismissAction;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntitySet<CoreMessaging_MessageAttachment> _CoreMessaging_MessageAttachments;
		
		private EntitySet<CoreMessaging_MessageRecipient> _CoreMessaging_MessageRecipients;
		
		private EntityRef<CoreMessaging_NotificationType> _CoreMessaging_NotificationType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMessageIDChanging(int value);
    partial void OnMessageIDChanged();
    partial void OnPortalIDChanging(System.Nullable<int> value);
    partial void OnPortalIDChanged();
    partial void OnNotificationTypeIDChanging(System.Nullable<int> value);
    partial void OnNotificationTypeIDChanged();
    partial void OnToChanging(string value);
    partial void OnToChanged();
    partial void OnFromChanging(string value);
    partial void OnFromChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnConversationIDChanging(System.Nullable<int> value);
    partial void OnConversationIDChanged();
    partial void OnReplyAllAllowedChanging(System.Nullable<bool> value);
    partial void OnReplyAllAllowedChanged();
    partial void OnSenderUserIDChanging(System.Nullable<int> value);
    partial void OnSenderUserIDChanged();
    partial void OnExpirationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpirationDateChanged();
    partial void OnContextChanging(string value);
    partial void OnContextChanged();
    partial void OnIncludeDismissActionChanging(System.Nullable<bool> value);
    partial void OnIncludeDismissActionChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public CoreMessaging_Message()
		{
			this._CoreMessaging_MessageAttachments = new EntitySet<CoreMessaging_MessageAttachment>(new Action<CoreMessaging_MessageAttachment>(this.attach_CoreMessaging_MessageAttachments), new Action<CoreMessaging_MessageAttachment>(this.detach_CoreMessaging_MessageAttachments));
			this._CoreMessaging_MessageRecipients = new EntitySet<CoreMessaging_MessageRecipient>(new Action<CoreMessaging_MessageRecipient>(this.attach_CoreMessaging_MessageRecipients), new Action<CoreMessaging_MessageRecipient>(this.detach_CoreMessaging_MessageRecipients));
			this._CoreMessaging_NotificationType = default(EntityRef<CoreMessaging_NotificationType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MessageID
		{
			get
			{
				return this._MessageID;
			}
			set
			{
				if ((this._MessageID != value))
				{
					this.OnMessageIDChanging(value);
					this.SendPropertyChanging();
					this._MessageID = value;
					this.SendPropertyChanged("MessageID");
					this.OnMessageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int")]
		public System.Nullable<int> PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationTypeID", DbType="Int")]
		public System.Nullable<int> NotificationTypeID
		{
			get
			{
				return this._NotificationTypeID;
			}
			set
			{
				if ((this._NotificationTypeID != value))
				{
					if (this._CoreMessaging_NotificationType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNotificationTypeIDChanging(value);
					this.SendPropertyChanging();
					this._NotificationTypeID = value;
					this.SendPropertyChanged("NotificationTypeID");
					this.OnNotificationTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[To]", Storage="_To", DbType="NVarChar(2000)")]
		public string To
		{
			get
			{
				return this._To;
			}
			set
			{
				if ((this._To != value))
				{
					this.OnToChanging(value);
					this.SendPropertyChanging();
					this._To = value;
					this.SendPropertyChanged("To");
					this.OnToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[From]", Storage="_From", DbType="NVarChar(200)")]
		public string From
		{
			get
			{
				return this._From;
			}
			set
			{
				if ((this._From != value))
				{
					this.OnFromChanging(value);
					this.SendPropertyChanging();
					this._From = value;
					this.SendPropertyChanged("From");
					this.OnFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(400)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Body", DbType="NVarChar(MAX)")]
		public string Body
		{
			get
			{
				return this._Body;
			}
			set
			{
				if ((this._Body != value))
				{
					this.OnBodyChanging(value);
					this.SendPropertyChanging();
					this._Body = value;
					this.SendPropertyChanged("Body");
					this.OnBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConversationID", DbType="Int")]
		public System.Nullable<int> ConversationID
		{
			get
			{
				return this._ConversationID;
			}
			set
			{
				if ((this._ConversationID != value))
				{
					this.OnConversationIDChanging(value);
					this.SendPropertyChanging();
					this._ConversationID = value;
					this.SendPropertyChanged("ConversationID");
					this.OnConversationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplyAllAllowed", DbType="Bit")]
		public System.Nullable<bool> ReplyAllAllowed
		{
			get
			{
				return this._ReplyAllAllowed;
			}
			set
			{
				if ((this._ReplyAllAllowed != value))
				{
					this.OnReplyAllAllowedChanging(value);
					this.SendPropertyChanging();
					this._ReplyAllAllowed = value;
					this.SendPropertyChanged("ReplyAllAllowed");
					this.OnReplyAllAllowedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SenderUserID", DbType="Int")]
		public System.Nullable<int> SenderUserID
		{
			get
			{
				return this._SenderUserID;
			}
			set
			{
				if ((this._SenderUserID != value))
				{
					this.OnSenderUserIDChanging(value);
					this.SendPropertyChanging();
					this._SenderUserID = value;
					this.SendPropertyChanged("SenderUserID");
					this.OnSenderUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpirationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpirationDate
		{
			get
			{
				return this._ExpirationDate;
			}
			set
			{
				if ((this._ExpirationDate != value))
				{
					this.OnExpirationDateChanging(value);
					this.SendPropertyChanging();
					this._ExpirationDate = value;
					this.SendPropertyChanged("ExpirationDate");
					this.OnExpirationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Context", DbType="NVarChar(200)")]
		public string Context
		{
			get
			{
				return this._Context;
			}
			set
			{
				if ((this._Context != value))
				{
					this.OnContextChanging(value);
					this.SendPropertyChanging();
					this._Context = value;
					this.SendPropertyChanged("Context");
					this.OnContextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncludeDismissAction", DbType="Bit")]
		public System.Nullable<bool> IncludeDismissAction
		{
			get
			{
				return this._IncludeDismissAction;
			}
			set
			{
				if ((this._IncludeDismissAction != value))
				{
					this.OnIncludeDismissActionChanging(value);
					this.SendPropertyChanging();
					this._IncludeDismissAction = value;
					this.SendPropertyChanged("IncludeDismissAction");
					this.OnIncludeDismissActionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CoreMessaging_Message_CoreMessaging_MessageAttachment", Storage="_CoreMessaging_MessageAttachments", ThisKey="MessageID", OtherKey="MessageID")]
		public EntitySet<CoreMessaging_MessageAttachment> CoreMessaging_MessageAttachments
		{
			get
			{
				return this._CoreMessaging_MessageAttachments;
			}
			set
			{
				this._CoreMessaging_MessageAttachments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CoreMessaging_Message_CoreMessaging_MessageRecipient", Storage="_CoreMessaging_MessageRecipients", ThisKey="MessageID", OtherKey="MessageID")]
		public EntitySet<CoreMessaging_MessageRecipient> CoreMessaging_MessageRecipients
		{
			get
			{
				return this._CoreMessaging_MessageRecipients;
			}
			set
			{
				this._CoreMessaging_MessageRecipients.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CoreMessaging_NotificationType_CoreMessaging_Message", Storage="_CoreMessaging_NotificationType", ThisKey="NotificationTypeID", OtherKey="NotificationTypeID", IsForeignKey=true)]
		public CoreMessaging_NotificationType CoreMessaging_NotificationType
		{
			get
			{
				return this._CoreMessaging_NotificationType.Entity;
			}
			set
			{
				CoreMessaging_NotificationType previousValue = this._CoreMessaging_NotificationType.Entity;
				if (((previousValue != value) 
							|| (this._CoreMessaging_NotificationType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CoreMessaging_NotificationType.Entity = null;
						previousValue.CoreMessaging_Messages.Remove(this);
					}
					this._CoreMessaging_NotificationType.Entity = value;
					if ((value != null))
					{
						value.CoreMessaging_Messages.Add(this);
						this._NotificationTypeID = value.NotificationTypeID;
					}
					else
					{
						this._NotificationTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CoreMessaging_NotificationType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CoreMessaging_MessageAttachments(CoreMessaging_MessageAttachment entity)
		{
			this.SendPropertyChanging();
			entity.CoreMessaging_Message = this;
		}
		
		private void detach_CoreMessaging_MessageAttachments(CoreMessaging_MessageAttachment entity)
		{
			this.SendPropertyChanging();
			entity.CoreMessaging_Message = null;
		}
		
		private void attach_CoreMessaging_MessageRecipients(CoreMessaging_MessageRecipient entity)
		{
			this.SendPropertyChanging();
			entity.CoreMessaging_Message = this;
		}
		
		private void detach_CoreMessaging_MessageRecipients(CoreMessaging_MessageRecipient entity)
		{
			this.SendPropertyChanging();
			entity.CoreMessaging_Message = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CoreMessaging_NotificationTypeActions")]
	public partial class CoreMessaging_NotificationTypeAction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NotificationTypeActionID;
		
		private int _NotificationTypeID;
		
		private string _NameResourceKey;
		
		private string _DescriptionResourceKey;
		
		private string _ConfirmResourceKey;
		
		private int _Order;
		
		private string _APICall;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntityRef<CoreMessaging_NotificationType> _CoreMessaging_NotificationType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNotificationTypeActionIDChanging(int value);
    partial void OnNotificationTypeActionIDChanged();
    partial void OnNotificationTypeIDChanging(int value);
    partial void OnNotificationTypeIDChanged();
    partial void OnNameResourceKeyChanging(string value);
    partial void OnNameResourceKeyChanged();
    partial void OnDescriptionResourceKeyChanging(string value);
    partial void OnDescriptionResourceKeyChanged();
    partial void OnConfirmResourceKeyChanging(string value);
    partial void OnConfirmResourceKeyChanged();
    partial void OnOrderChanging(int value);
    partial void OnOrderChanged();
    partial void OnAPICallChanging(string value);
    partial void OnAPICallChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public CoreMessaging_NotificationTypeAction()
		{
			this._CoreMessaging_NotificationType = default(EntityRef<CoreMessaging_NotificationType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationTypeActionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NotificationTypeActionID
		{
			get
			{
				return this._NotificationTypeActionID;
			}
			set
			{
				if ((this._NotificationTypeActionID != value))
				{
					this.OnNotificationTypeActionIDChanging(value);
					this.SendPropertyChanging();
					this._NotificationTypeActionID = value;
					this.SendPropertyChanged("NotificationTypeActionID");
					this.OnNotificationTypeActionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationTypeID", DbType="Int NOT NULL")]
		public int NotificationTypeID
		{
			get
			{
				return this._NotificationTypeID;
			}
			set
			{
				if ((this._NotificationTypeID != value))
				{
					if (this._CoreMessaging_NotificationType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNotificationTypeIDChanging(value);
					this.SendPropertyChanging();
					this._NotificationTypeID = value;
					this.SendPropertyChanged("NotificationTypeID");
					this.OnNotificationTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameResourceKey", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string NameResourceKey
		{
			get
			{
				return this._NameResourceKey;
			}
			set
			{
				if ((this._NameResourceKey != value))
				{
					this.OnNameResourceKeyChanging(value);
					this.SendPropertyChanging();
					this._NameResourceKey = value;
					this.SendPropertyChanged("NameResourceKey");
					this.OnNameResourceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionResourceKey", DbType="NVarChar(100)")]
		public string DescriptionResourceKey
		{
			get
			{
				return this._DescriptionResourceKey;
			}
			set
			{
				if ((this._DescriptionResourceKey != value))
				{
					this.OnDescriptionResourceKeyChanging(value);
					this.SendPropertyChanging();
					this._DescriptionResourceKey = value;
					this.SendPropertyChanged("DescriptionResourceKey");
					this.OnDescriptionResourceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmResourceKey", DbType="NVarChar(100)")]
		public string ConfirmResourceKey
		{
			get
			{
				return this._ConfirmResourceKey;
			}
			set
			{
				if ((this._ConfirmResourceKey != value))
				{
					this.OnConfirmResourceKeyChanging(value);
					this.SendPropertyChanging();
					this._ConfirmResourceKey = value;
					this.SendPropertyChanged("ConfirmResourceKey");
					this.OnConfirmResourceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int NOT NULL")]
		public int Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this.OnOrderChanging(value);
					this.SendPropertyChanging();
					this._Order = value;
					this.SendPropertyChanged("Order");
					this.OnOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APICall", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string APICall
		{
			get
			{
				return this._APICall;
			}
			set
			{
				if ((this._APICall != value))
				{
					this.OnAPICallChanging(value);
					this.SendPropertyChanging();
					this._APICall = value;
					this.SendPropertyChanged("APICall");
					this.OnAPICallChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CoreMessaging_NotificationType_CoreMessaging_NotificationTypeAction", Storage="_CoreMessaging_NotificationType", ThisKey="NotificationTypeID", OtherKey="NotificationTypeID", IsForeignKey=true)]
		public CoreMessaging_NotificationType CoreMessaging_NotificationType
		{
			get
			{
				return this._CoreMessaging_NotificationType.Entity;
			}
			set
			{
				CoreMessaging_NotificationType previousValue = this._CoreMessaging_NotificationType.Entity;
				if (((previousValue != value) 
							|| (this._CoreMessaging_NotificationType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CoreMessaging_NotificationType.Entity = null;
						previousValue.CoreMessaging_NotificationTypeActions.Remove(this);
					}
					this._CoreMessaging_NotificationType.Entity = value;
					if ((value != null))
					{
						value.CoreMessaging_NotificationTypeActions.Add(this);
						this._NotificationTypeID = value.NotificationTypeID;
					}
					else
					{
						this._NotificationTypeID = default(int);
					}
					this.SendPropertyChanged("CoreMessaging_NotificationType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CoreMessaging_NotificationTypes")]
	public partial class CoreMessaging_NotificationType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NotificationTypeID;
		
		private string _Name;
		
		private string _Description;
		
		private System.Nullable<int> _TTL;
		
		private System.Nullable<int> _DesktopModuleID;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntitySet<CoreMessaging_Message> _CoreMessaging_Messages;
		
		private EntitySet<CoreMessaging_NotificationTypeAction> _CoreMessaging_NotificationTypeActions;
		
		private EntityRef<DesktopModule> _DesktopModule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNotificationTypeIDChanging(int value);
    partial void OnNotificationTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnTTLChanging(System.Nullable<int> value);
    partial void OnTTLChanged();
    partial void OnDesktopModuleIDChanging(System.Nullable<int> value);
    partial void OnDesktopModuleIDChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public CoreMessaging_NotificationType()
		{
			this._CoreMessaging_Messages = new EntitySet<CoreMessaging_Message>(new Action<CoreMessaging_Message>(this.attach_CoreMessaging_Messages), new Action<CoreMessaging_Message>(this.detach_CoreMessaging_Messages));
			this._CoreMessaging_NotificationTypeActions = new EntitySet<CoreMessaging_NotificationTypeAction>(new Action<CoreMessaging_NotificationTypeAction>(this.attach_CoreMessaging_NotificationTypeActions), new Action<CoreMessaging_NotificationTypeAction>(this.detach_CoreMessaging_NotificationTypeActions));
			this._DesktopModule = default(EntityRef<DesktopModule>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NotificationTypeID
		{
			get
			{
				return this._NotificationTypeID;
			}
			set
			{
				if ((this._NotificationTypeID != value))
				{
					this.OnNotificationTypeIDChanging(value);
					this.SendPropertyChanging();
					this._NotificationTypeID = value;
					this.SendPropertyChanged("NotificationTypeID");
					this.OnNotificationTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(2000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TTL", DbType="Int")]
		public System.Nullable<int> TTL
		{
			get
			{
				return this._TTL;
			}
			set
			{
				if ((this._TTL != value))
				{
					this.OnTTLChanging(value);
					this.SendPropertyChanging();
					this._TTL = value;
					this.SendPropertyChanged("TTL");
					this.OnTTLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesktopModuleID", DbType="Int")]
		public System.Nullable<int> DesktopModuleID
		{
			get
			{
				return this._DesktopModuleID;
			}
			set
			{
				if ((this._DesktopModuleID != value))
				{
					if (this._DesktopModule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDesktopModuleIDChanging(value);
					this.SendPropertyChanging();
					this._DesktopModuleID = value;
					this.SendPropertyChanged("DesktopModuleID");
					this.OnDesktopModuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CoreMessaging_NotificationType_CoreMessaging_Message", Storage="_CoreMessaging_Messages", ThisKey="NotificationTypeID", OtherKey="NotificationTypeID")]
		public EntitySet<CoreMessaging_Message> CoreMessaging_Messages
		{
			get
			{
				return this._CoreMessaging_Messages;
			}
			set
			{
				this._CoreMessaging_Messages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CoreMessaging_NotificationType_CoreMessaging_NotificationTypeAction", Storage="_CoreMessaging_NotificationTypeActions", ThisKey="NotificationTypeID", OtherKey="NotificationTypeID")]
		public EntitySet<CoreMessaging_NotificationTypeAction> CoreMessaging_NotificationTypeActions
		{
			get
			{
				return this._CoreMessaging_NotificationTypeActions;
			}
			set
			{
				this._CoreMessaging_NotificationTypeActions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DesktopModule_CoreMessaging_NotificationType", Storage="_DesktopModule", ThisKey="DesktopModuleID", OtherKey="DesktopModuleID", IsForeignKey=true)]
		public DesktopModule DesktopModule
		{
			get
			{
				return this._DesktopModule.Entity;
			}
			set
			{
				DesktopModule previousValue = this._DesktopModule.Entity;
				if (((previousValue != value) 
							|| (this._DesktopModule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DesktopModule.Entity = null;
						previousValue.CoreMessaging_NotificationTypes.Remove(this);
					}
					this._DesktopModule.Entity = value;
					if ((value != null))
					{
						value.CoreMessaging_NotificationTypes.Add(this);
						this._DesktopModuleID = value.DesktopModuleID;
					}
					else
					{
						this._DesktopModuleID = default(Nullable<int>);
					}
					this.SendPropertyChanged("DesktopModule");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CoreMessaging_Messages(CoreMessaging_Message entity)
		{
			this.SendPropertyChanging();
			entity.CoreMessaging_NotificationType = this;
		}
		
		private void detach_CoreMessaging_Messages(CoreMessaging_Message entity)
		{
			this.SendPropertyChanging();
			entity.CoreMessaging_NotificationType = null;
		}
		
		private void attach_CoreMessaging_NotificationTypeActions(CoreMessaging_NotificationTypeAction entity)
		{
			this.SendPropertyChanging();
			entity.CoreMessaging_NotificationType = this;
		}
		
		private void detach_CoreMessaging_NotificationTypeActions(CoreMessaging_NotificationTypeAction entity)
		{
			this.SendPropertyChanging();
			entity.CoreMessaging_NotificationType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Dashboard_Controls")]
	public partial class Dashboard_Control : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DashboardControlID;
		
		private string _DashboardControlKey;
		
		private bool _IsEnabled;
		
		private string _DashboardControlSrc;
		
		private string _DashboardControlLocalResources;
		
		private string _ControllerClass;
		
		private int _ViewOrder;
		
		private int _PackageID;
		
		private EntityRef<Package> _Package;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDashboardControlIDChanging(int value);
    partial void OnDashboardControlIDChanged();
    partial void OnDashboardControlKeyChanging(string value);
    partial void OnDashboardControlKeyChanged();
    partial void OnIsEnabledChanging(bool value);
    partial void OnIsEnabledChanged();
    partial void OnDashboardControlSrcChanging(string value);
    partial void OnDashboardControlSrcChanged();
    partial void OnDashboardControlLocalResourcesChanging(string value);
    partial void OnDashboardControlLocalResourcesChanged();
    partial void OnControllerClassChanging(string value);
    partial void OnControllerClassChanged();
    partial void OnViewOrderChanging(int value);
    partial void OnViewOrderChanged();
    partial void OnPackageIDChanging(int value);
    partial void OnPackageIDChanged();
    #endregion
		
		public Dashboard_Control()
		{
			this._Package = default(EntityRef<Package>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DashboardControlID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DashboardControlID
		{
			get
			{
				return this._DashboardControlID;
			}
			set
			{
				if ((this._DashboardControlID != value))
				{
					this.OnDashboardControlIDChanging(value);
					this.SendPropertyChanging();
					this._DashboardControlID = value;
					this.SendPropertyChanged("DashboardControlID");
					this.OnDashboardControlIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DashboardControlKey", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DashboardControlKey
		{
			get
			{
				return this._DashboardControlKey;
			}
			set
			{
				if ((this._DashboardControlKey != value))
				{
					this.OnDashboardControlKeyChanging(value);
					this.SendPropertyChanging();
					this._DashboardControlKey = value;
					this.SendPropertyChanged("DashboardControlKey");
					this.OnDashboardControlKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEnabled", DbType="Bit NOT NULL")]
		public bool IsEnabled
		{
			get
			{
				return this._IsEnabled;
			}
			set
			{
				if ((this._IsEnabled != value))
				{
					this.OnIsEnabledChanging(value);
					this.SendPropertyChanging();
					this._IsEnabled = value;
					this.SendPropertyChanged("IsEnabled");
					this.OnIsEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DashboardControlSrc", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string DashboardControlSrc
		{
			get
			{
				return this._DashboardControlSrc;
			}
			set
			{
				if ((this._DashboardControlSrc != value))
				{
					this.OnDashboardControlSrcChanging(value);
					this.SendPropertyChanging();
					this._DashboardControlSrc = value;
					this.SendPropertyChanged("DashboardControlSrc");
					this.OnDashboardControlSrcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DashboardControlLocalResources", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string DashboardControlLocalResources
		{
			get
			{
				return this._DashboardControlLocalResources;
			}
			set
			{
				if ((this._DashboardControlLocalResources != value))
				{
					this.OnDashboardControlLocalResourcesChanging(value);
					this.SendPropertyChanging();
					this._DashboardControlLocalResources = value;
					this.SendPropertyChanged("DashboardControlLocalResources");
					this.OnDashboardControlLocalResourcesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControllerClass", DbType="NVarChar(250)")]
		public string ControllerClass
		{
			get
			{
				return this._ControllerClass;
			}
			set
			{
				if ((this._ControllerClass != value))
				{
					this.OnControllerClassChanging(value);
					this.SendPropertyChanging();
					this._ControllerClass = value;
					this.SendPropertyChanged("ControllerClass");
					this.OnControllerClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewOrder", DbType="Int NOT NULL")]
		public int ViewOrder
		{
			get
			{
				return this._ViewOrder;
			}
			set
			{
				if ((this._ViewOrder != value))
				{
					this.OnViewOrderChanging(value);
					this.SendPropertyChanging();
					this._ViewOrder = value;
					this.SendPropertyChanged("ViewOrder");
					this.OnViewOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageID", DbType="Int NOT NULL")]
		public int PackageID
		{
			get
			{
				return this._PackageID;
			}
			set
			{
				if ((this._PackageID != value))
				{
					if (this._Package.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPackageIDChanging(value);
					this.SendPropertyChanging();
					this._PackageID = value;
					this.SendPropertyChanged("PackageID");
					this.OnPackageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Package_Dashboard_Control", Storage="_Package", ThisKey="PackageID", OtherKey="PackageID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Package Package
		{
			get
			{
				return this._Package.Entity;
			}
			set
			{
				Package previousValue = this._Package.Entity;
				if (((previousValue != value) 
							|| (this._Package.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Package.Entity = null;
						previousValue.Dashboard_Controls.Remove(this);
					}
					this._Package.Entity = value;
					if ((value != null))
					{
						value.Dashboard_Controls.Add(this);
						this._PackageID = value.PackageID;
					}
					else
					{
						this._PackageID = default(int);
					}
					this.SendPropertyChanged("Package");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DesktopModulePermission")]
	public partial class DesktopModulePermission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DesktopModulePermissionID;
		
		private int _PortalDesktopModuleID;
		
		private int _PermissionID;
		
		private bool _AllowAccess;
		
		private System.Nullable<int> _RoleID;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntityRef<Permission> _Permission;
		
		private EntityRef<PortalDesktopModule> _PortalDesktopModule;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDesktopModulePermissionIDChanging(int value);
    partial void OnDesktopModulePermissionIDChanged();
    partial void OnPortalDesktopModuleIDChanging(int value);
    partial void OnPortalDesktopModuleIDChanged();
    partial void OnPermissionIDChanging(int value);
    partial void OnPermissionIDChanged();
    partial void OnAllowAccessChanging(bool value);
    partial void OnAllowAccessChanged();
    partial void OnRoleIDChanging(System.Nullable<int> value);
    partial void OnRoleIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public DesktopModulePermission()
		{
			this._Permission = default(EntityRef<Permission>);
			this._PortalDesktopModule = default(EntityRef<PortalDesktopModule>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesktopModulePermissionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DesktopModulePermissionID
		{
			get
			{
				return this._DesktopModulePermissionID;
			}
			set
			{
				if ((this._DesktopModulePermissionID != value))
				{
					this.OnDesktopModulePermissionIDChanging(value);
					this.SendPropertyChanging();
					this._DesktopModulePermissionID = value;
					this.SendPropertyChanged("DesktopModulePermissionID");
					this.OnDesktopModulePermissionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalDesktopModuleID", DbType="Int NOT NULL")]
		public int PortalDesktopModuleID
		{
			get
			{
				return this._PortalDesktopModuleID;
			}
			set
			{
				if ((this._PortalDesktopModuleID != value))
				{
					if (this._PortalDesktopModule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalDesktopModuleIDChanging(value);
					this.SendPropertyChanging();
					this._PortalDesktopModuleID = value;
					this.SendPropertyChanged("PortalDesktopModuleID");
					this.OnPortalDesktopModuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionID", DbType="Int NOT NULL")]
		public int PermissionID
		{
			get
			{
				return this._PermissionID;
			}
			set
			{
				if ((this._PermissionID != value))
				{
					if (this._Permission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPermissionIDChanging(value);
					this.SendPropertyChanging();
					this._PermissionID = value;
					this.SendPropertyChanged("PermissionID");
					this.OnPermissionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowAccess", DbType="Bit NOT NULL")]
		public bool AllowAccess
		{
			get
			{
				return this._AllowAccess;
			}
			set
			{
				if ((this._AllowAccess != value))
				{
					this.OnAllowAccessChanging(value);
					this.SendPropertyChanging();
					this._AllowAccess = value;
					this.SendPropertyChanged("AllowAccess");
					this.OnAllowAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int")]
		public System.Nullable<int> RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permission_DesktopModulePermission", Storage="_Permission", ThisKey="PermissionID", OtherKey="PermissionID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Permission Permission
		{
			get
			{
				return this._Permission.Entity;
			}
			set
			{
				Permission previousValue = this._Permission.Entity;
				if (((previousValue != value) 
							|| (this._Permission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Permission.Entity = null;
						previousValue.DesktopModulePermissions.Remove(this);
					}
					this._Permission.Entity = value;
					if ((value != null))
					{
						value.DesktopModulePermissions.Add(this);
						this._PermissionID = value.PermissionID;
					}
					else
					{
						this._PermissionID = default(int);
					}
					this.SendPropertyChanged("Permission");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PortalDesktopModule_DesktopModulePermission", Storage="_PortalDesktopModule", ThisKey="PortalDesktopModuleID", OtherKey="PortalDesktopModuleID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PortalDesktopModule PortalDesktopModule
		{
			get
			{
				return this._PortalDesktopModule.Entity;
			}
			set
			{
				PortalDesktopModule previousValue = this._PortalDesktopModule.Entity;
				if (((previousValue != value) 
							|| (this._PortalDesktopModule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PortalDesktopModule.Entity = null;
						previousValue.DesktopModulePermissions.Remove(this);
					}
					this._PortalDesktopModule.Entity = value;
					if ((value != null))
					{
						value.DesktopModulePermissions.Add(this);
						this._PortalDesktopModuleID = value.PortalDesktopModuleID;
					}
					else
					{
						this._PortalDesktopModuleID = default(int);
					}
					this.SendPropertyChanged("PortalDesktopModule");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_DesktopModulePermission", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.DesktopModulePermissions.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.DesktopModulePermissions.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DesktopModules")]
	public partial class DesktopModule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DesktopModuleID;
		
		private string _FriendlyName;
		
		private string _Description;
		
		private string _Version;
		
		private bool _IsPremium;
		
		private bool _IsAdmin;
		
		private string _BusinessControllerClass;
		
		private string _FolderName;
		
		private string _ModuleName;
		
		private int _SupportedFeatures;
		
		private string _CompatibleVersions;
		
		private string _Dependencies;
		
		private string _Permissions;
		
		private int _PackageID;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private int _ContentItemId;
		
		private EntitySet<CoreMessaging_NotificationType> _CoreMessaging_NotificationTypes;
		
		private EntitySet<ModuleDefinition> _ModuleDefinitions;
		
		private EntitySet<PortalDesktopModule> _PortalDesktopModules;
		
		private EntityRef<Package> _Package;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDesktopModuleIDChanging(int value);
    partial void OnDesktopModuleIDChanged();
    partial void OnFriendlyNameChanging(string value);
    partial void OnFriendlyNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnVersionChanging(string value);
    partial void OnVersionChanged();
    partial void OnIsPremiumChanging(bool value);
    partial void OnIsPremiumChanged();
    partial void OnIsAdminChanging(bool value);
    partial void OnIsAdminChanged();
    partial void OnBusinessControllerClassChanging(string value);
    partial void OnBusinessControllerClassChanged();
    partial void OnFolderNameChanging(string value);
    partial void OnFolderNameChanged();
    partial void OnModuleNameChanging(string value);
    partial void OnModuleNameChanged();
    partial void OnSupportedFeaturesChanging(int value);
    partial void OnSupportedFeaturesChanged();
    partial void OnCompatibleVersionsChanging(string value);
    partial void OnCompatibleVersionsChanged();
    partial void OnDependenciesChanging(string value);
    partial void OnDependenciesChanged();
    partial void OnPermissionsChanging(string value);
    partial void OnPermissionsChanged();
    partial void OnPackageIDChanging(int value);
    partial void OnPackageIDChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    partial void OnContentItemIdChanging(int value);
    partial void OnContentItemIdChanged();
    #endregion
		
		public DesktopModule()
		{
			this._CoreMessaging_NotificationTypes = new EntitySet<CoreMessaging_NotificationType>(new Action<CoreMessaging_NotificationType>(this.attach_CoreMessaging_NotificationTypes), new Action<CoreMessaging_NotificationType>(this.detach_CoreMessaging_NotificationTypes));
			this._ModuleDefinitions = new EntitySet<ModuleDefinition>(new Action<ModuleDefinition>(this.attach_ModuleDefinitions), new Action<ModuleDefinition>(this.detach_ModuleDefinitions));
			this._PortalDesktopModules = new EntitySet<PortalDesktopModule>(new Action<PortalDesktopModule>(this.attach_PortalDesktopModules), new Action<PortalDesktopModule>(this.detach_PortalDesktopModules));
			this._Package = default(EntityRef<Package>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesktopModuleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DesktopModuleID
		{
			get
			{
				return this._DesktopModuleID;
			}
			set
			{
				if ((this._DesktopModuleID != value))
				{
					this.OnDesktopModuleIDChanging(value);
					this.SendPropertyChanging();
					this._DesktopModuleID = value;
					this.SendPropertyChanged("DesktopModuleID");
					this.OnDesktopModuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FriendlyName", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string FriendlyName
		{
			get
			{
				return this._FriendlyName;
			}
			set
			{
				if ((this._FriendlyName != value))
				{
					this.OnFriendlyNameChanging(value);
					this.SendPropertyChanging();
					this._FriendlyName = value;
					this.SendPropertyChanged("FriendlyName");
					this.OnFriendlyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(2000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="NVarChar(8)")]
		public string Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPremium", DbType="Bit NOT NULL")]
		public bool IsPremium
		{
			get
			{
				return this._IsPremium;
			}
			set
			{
				if ((this._IsPremium != value))
				{
					this.OnIsPremiumChanging(value);
					this.SendPropertyChanging();
					this._IsPremium = value;
					this.SendPropertyChanged("IsPremium");
					this.OnIsPremiumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAdmin", DbType="Bit NOT NULL")]
		public bool IsAdmin
		{
			get
			{
				return this._IsAdmin;
			}
			set
			{
				if ((this._IsAdmin != value))
				{
					this.OnIsAdminChanging(value);
					this.SendPropertyChanging();
					this._IsAdmin = value;
					this.SendPropertyChanged("IsAdmin");
					this.OnIsAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessControllerClass", DbType="NVarChar(200)")]
		public string BusinessControllerClass
		{
			get
			{
				return this._BusinessControllerClass;
			}
			set
			{
				if ((this._BusinessControllerClass != value))
				{
					this.OnBusinessControllerClassChanging(value);
					this.SendPropertyChanging();
					this._BusinessControllerClass = value;
					this.SendPropertyChanged("BusinessControllerClass");
					this.OnBusinessControllerClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FolderName", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string FolderName
		{
			get
			{
				return this._FolderName;
			}
			set
			{
				if ((this._FolderName != value))
				{
					this.OnFolderNameChanging(value);
					this.SendPropertyChanging();
					this._FolderName = value;
					this.SendPropertyChanged("FolderName");
					this.OnFolderNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleName", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string ModuleName
		{
			get
			{
				return this._ModuleName;
			}
			set
			{
				if ((this._ModuleName != value))
				{
					this.OnModuleNameChanging(value);
					this.SendPropertyChanging();
					this._ModuleName = value;
					this.SendPropertyChanged("ModuleName");
					this.OnModuleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupportedFeatures", DbType="Int NOT NULL")]
		public int SupportedFeatures
		{
			get
			{
				return this._SupportedFeatures;
			}
			set
			{
				if ((this._SupportedFeatures != value))
				{
					this.OnSupportedFeaturesChanging(value);
					this.SendPropertyChanging();
					this._SupportedFeatures = value;
					this.SendPropertyChanged("SupportedFeatures");
					this.OnSupportedFeaturesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompatibleVersions", DbType="NVarChar(500)")]
		public string CompatibleVersions
		{
			get
			{
				return this._CompatibleVersions;
			}
			set
			{
				if ((this._CompatibleVersions != value))
				{
					this.OnCompatibleVersionsChanging(value);
					this.SendPropertyChanging();
					this._CompatibleVersions = value;
					this.SendPropertyChanged("CompatibleVersions");
					this.OnCompatibleVersionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dependencies", DbType="NVarChar(400)")]
		public string Dependencies
		{
			get
			{
				return this._Dependencies;
			}
			set
			{
				if ((this._Dependencies != value))
				{
					this.OnDependenciesChanging(value);
					this.SendPropertyChanging();
					this._Dependencies = value;
					this.SendPropertyChanged("Dependencies");
					this.OnDependenciesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Permissions", DbType="NVarChar(400)")]
		public string Permissions
		{
			get
			{
				return this._Permissions;
			}
			set
			{
				if ((this._Permissions != value))
				{
					this.OnPermissionsChanging(value);
					this.SendPropertyChanging();
					this._Permissions = value;
					this.SendPropertyChanged("Permissions");
					this.OnPermissionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageID", DbType="Int NOT NULL")]
		public int PackageID
		{
			get
			{
				return this._PackageID;
			}
			set
			{
				if ((this._PackageID != value))
				{
					if (this._Package.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPackageIDChanging(value);
					this.SendPropertyChanging();
					this._PackageID = value;
					this.SendPropertyChanged("PackageID");
					this.OnPackageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentItemId", DbType="Int NOT NULL")]
		public int ContentItemId
		{
			get
			{
				return this._ContentItemId;
			}
			set
			{
				if ((this._ContentItemId != value))
				{
					this.OnContentItemIdChanging(value);
					this.SendPropertyChanging();
					this._ContentItemId = value;
					this.SendPropertyChanged("ContentItemId");
					this.OnContentItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DesktopModule_CoreMessaging_NotificationType", Storage="_CoreMessaging_NotificationTypes", ThisKey="DesktopModuleID", OtherKey="DesktopModuleID")]
		public EntitySet<CoreMessaging_NotificationType> CoreMessaging_NotificationTypes
		{
			get
			{
				return this._CoreMessaging_NotificationTypes;
			}
			set
			{
				this._CoreMessaging_NotificationTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DesktopModule_ModuleDefinition", Storage="_ModuleDefinitions", ThisKey="DesktopModuleID", OtherKey="DesktopModuleID")]
		public EntitySet<ModuleDefinition> ModuleDefinitions
		{
			get
			{
				return this._ModuleDefinitions;
			}
			set
			{
				this._ModuleDefinitions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DesktopModule_PortalDesktopModule", Storage="_PortalDesktopModules", ThisKey="DesktopModuleID", OtherKey="DesktopModuleID")]
		public EntitySet<PortalDesktopModule> PortalDesktopModules
		{
			get
			{
				return this._PortalDesktopModules;
			}
			set
			{
				this._PortalDesktopModules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Package_DesktopModule", Storage="_Package", ThisKey="PackageID", OtherKey="PackageID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Package Package
		{
			get
			{
				return this._Package.Entity;
			}
			set
			{
				Package previousValue = this._Package.Entity;
				if (((previousValue != value) 
							|| (this._Package.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Package.Entity = null;
						previousValue.DesktopModules.Remove(this);
					}
					this._Package.Entity = value;
					if ((value != null))
					{
						value.DesktopModules.Add(this);
						this._PackageID = value.PackageID;
					}
					else
					{
						this._PackageID = default(int);
					}
					this.SendPropertyChanged("Package");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CoreMessaging_NotificationTypes(CoreMessaging_NotificationType entity)
		{
			this.SendPropertyChanging();
			entity.DesktopModule = this;
		}
		
		private void detach_CoreMessaging_NotificationTypes(CoreMessaging_NotificationType entity)
		{
			this.SendPropertyChanging();
			entity.DesktopModule = null;
		}
		
		private void attach_ModuleDefinitions(ModuleDefinition entity)
		{
			this.SendPropertyChanging();
			entity.DesktopModule = this;
		}
		
		private void detach_ModuleDefinitions(ModuleDefinition entity)
		{
			this.SendPropertyChanging();
			entity.DesktopModule = null;
		}
		
		private void attach_PortalDesktopModules(PortalDesktopModule entity)
		{
			this.SendPropertyChanging();
			entity.DesktopModule = this;
		}
		
		private void detach_PortalDesktopModules(PortalDesktopModule entity)
		{
			this.SendPropertyChanging();
			entity.DesktopModule = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EventLog")]
	public partial class EventLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LogGUID;
		
		private string _LogTypeKey;
		
		private System.Nullable<int> _LogConfigID;
		
		private System.Nullable<int> _LogUserID;
		
		private string _LogUserName;
		
		private System.Nullable<int> _LogPortalID;
		
		private string _LogPortalName;
		
		private System.DateTime _LogCreateDate;
		
		private string _LogServerName;
		
		private string _LogProperties;
		
		private System.Nullable<bool> _LogNotificationPending;
		
		private long _LogEventID;
		
		private EntityRef<EventLogConfig> _EventLogConfig;
		
		private EntityRef<EventLogType> _EventLogType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogGUIDChanging(string value);
    partial void OnLogGUIDChanged();
    partial void OnLogTypeKeyChanging(string value);
    partial void OnLogTypeKeyChanged();
    partial void OnLogConfigIDChanging(System.Nullable<int> value);
    partial void OnLogConfigIDChanged();
    partial void OnLogUserIDChanging(System.Nullable<int> value);
    partial void OnLogUserIDChanged();
    partial void OnLogUserNameChanging(string value);
    partial void OnLogUserNameChanged();
    partial void OnLogPortalIDChanging(System.Nullable<int> value);
    partial void OnLogPortalIDChanged();
    partial void OnLogPortalNameChanging(string value);
    partial void OnLogPortalNameChanged();
    partial void OnLogCreateDateChanging(System.DateTime value);
    partial void OnLogCreateDateChanged();
    partial void OnLogServerNameChanging(string value);
    partial void OnLogServerNameChanged();
    partial void OnLogPropertiesChanging(string value);
    partial void OnLogPropertiesChanged();
    partial void OnLogNotificationPendingChanging(System.Nullable<bool> value);
    partial void OnLogNotificationPendingChanged();
    partial void OnLogEventIDChanging(long value);
    partial void OnLogEventIDChanged();
    #endregion
		
		public EventLog()
		{
			this._EventLogConfig = default(EntityRef<EventLogConfig>);
			this._EventLogType = default(EntityRef<EventLogType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogGUID", DbType="VarChar(36) NOT NULL", CanBeNull=false)]
		public string LogGUID
		{
			get
			{
				return this._LogGUID;
			}
			set
			{
				if ((this._LogGUID != value))
				{
					this.OnLogGUIDChanging(value);
					this.SendPropertyChanging();
					this._LogGUID = value;
					this.SendPropertyChanged("LogGUID");
					this.OnLogGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogTypeKey", DbType="NVarChar(35) NOT NULL", CanBeNull=false)]
		public string LogTypeKey
		{
			get
			{
				return this._LogTypeKey;
			}
			set
			{
				if ((this._LogTypeKey != value))
				{
					if (this._EventLogType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLogTypeKeyChanging(value);
					this.SendPropertyChanging();
					this._LogTypeKey = value;
					this.SendPropertyChanged("LogTypeKey");
					this.OnLogTypeKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogConfigID", DbType="Int")]
		public System.Nullable<int> LogConfigID
		{
			get
			{
				return this._LogConfigID;
			}
			set
			{
				if ((this._LogConfigID != value))
				{
					if (this._EventLogConfig.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLogConfigIDChanging(value);
					this.SendPropertyChanging();
					this._LogConfigID = value;
					this.SendPropertyChanged("LogConfigID");
					this.OnLogConfigIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogUserID", DbType="Int")]
		public System.Nullable<int> LogUserID
		{
			get
			{
				return this._LogUserID;
			}
			set
			{
				if ((this._LogUserID != value))
				{
					this.OnLogUserIDChanging(value);
					this.SendPropertyChanging();
					this._LogUserID = value;
					this.SendPropertyChanged("LogUserID");
					this.OnLogUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogUserName", DbType="NVarChar(50)")]
		public string LogUserName
		{
			get
			{
				return this._LogUserName;
			}
			set
			{
				if ((this._LogUserName != value))
				{
					this.OnLogUserNameChanging(value);
					this.SendPropertyChanging();
					this._LogUserName = value;
					this.SendPropertyChanged("LogUserName");
					this.OnLogUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogPortalID", DbType="Int")]
		public System.Nullable<int> LogPortalID
		{
			get
			{
				return this._LogPortalID;
			}
			set
			{
				if ((this._LogPortalID != value))
				{
					this.OnLogPortalIDChanging(value);
					this.SendPropertyChanging();
					this._LogPortalID = value;
					this.SendPropertyChanged("LogPortalID");
					this.OnLogPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogPortalName", DbType="NVarChar(100)")]
		public string LogPortalName
		{
			get
			{
				return this._LogPortalName;
			}
			set
			{
				if ((this._LogPortalName != value))
				{
					this.OnLogPortalNameChanging(value);
					this.SendPropertyChanging();
					this._LogPortalName = value;
					this.SendPropertyChanged("LogPortalName");
					this.OnLogPortalNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogCreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime LogCreateDate
		{
			get
			{
				return this._LogCreateDate;
			}
			set
			{
				if ((this._LogCreateDate != value))
				{
					this.OnLogCreateDateChanging(value);
					this.SendPropertyChanging();
					this._LogCreateDate = value;
					this.SendPropertyChanged("LogCreateDate");
					this.OnLogCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogServerName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LogServerName
		{
			get
			{
				return this._LogServerName;
			}
			set
			{
				if ((this._LogServerName != value))
				{
					this.OnLogServerNameChanging(value);
					this.SendPropertyChanging();
					this._LogServerName = value;
					this.SendPropertyChanged("LogServerName");
					this.OnLogServerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogProperties", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string LogProperties
		{
			get
			{
				return this._LogProperties;
			}
			set
			{
				if ((this._LogProperties != value))
				{
					this.OnLogPropertiesChanging(value);
					this.SendPropertyChanging();
					this._LogProperties = value;
					this.SendPropertyChanged("LogProperties");
					this.OnLogPropertiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogNotificationPending", DbType="Bit")]
		public System.Nullable<bool> LogNotificationPending
		{
			get
			{
				return this._LogNotificationPending;
			}
			set
			{
				if ((this._LogNotificationPending != value))
				{
					this.OnLogNotificationPendingChanging(value);
					this.SendPropertyChanging();
					this._LogNotificationPending = value;
					this.SendPropertyChanged("LogNotificationPending");
					this.OnLogNotificationPendingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogEventID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long LogEventID
		{
			get
			{
				return this._LogEventID;
			}
			set
			{
				if ((this._LogEventID != value))
				{
					this.OnLogEventIDChanging(value);
					this.SendPropertyChanging();
					this._LogEventID = value;
					this.SendPropertyChanged("LogEventID");
					this.OnLogEventIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EventLogConfig_EventLog", Storage="_EventLogConfig", ThisKey="LogConfigID", OtherKey="ID", IsForeignKey=true)]
		public EventLogConfig EventLogConfig
		{
			get
			{
				return this._EventLogConfig.Entity;
			}
			set
			{
				EventLogConfig previousValue = this._EventLogConfig.Entity;
				if (((previousValue != value) 
							|| (this._EventLogConfig.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EventLogConfig.Entity = null;
						previousValue.EventLogs.Remove(this);
					}
					this._EventLogConfig.Entity = value;
					if ((value != null))
					{
						value.EventLogs.Add(this);
						this._LogConfigID = value.ID;
					}
					else
					{
						this._LogConfigID = default(Nullable<int>);
					}
					this.SendPropertyChanged("EventLogConfig");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EventLogType_EventLog", Storage="_EventLogType", ThisKey="LogTypeKey", OtherKey="LogTypeKey", IsForeignKey=true)]
		public EventLogType EventLogType
		{
			get
			{
				return this._EventLogType.Entity;
			}
			set
			{
				EventLogType previousValue = this._EventLogType.Entity;
				if (((previousValue != value) 
							|| (this._EventLogType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EventLogType.Entity = null;
						previousValue.EventLogs.Remove(this);
					}
					this._EventLogType.Entity = value;
					if ((value != null))
					{
						value.EventLogs.Add(this);
						this._LogTypeKey = value.LogTypeKey;
					}
					else
					{
						this._LogTypeKey = default(string);
					}
					this.SendPropertyChanged("EventLogType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EventLogConfig")]
	public partial class EventLogConfig : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _LogTypeKey;
		
		private System.Nullable<int> _LogTypePortalID;
		
		private bool _LoggingIsActive;
		
		private int _KeepMostRecent;
		
		private bool _EmailNotificationIsActive;
		
		private System.Nullable<int> _NotificationThreshold;
		
		private System.Nullable<int> _NotificationThresholdTime;
		
		private System.Nullable<int> _NotificationThresholdTimeType;
		
		private string _MailFromAddress;
		
		private string _MailToAddress;
		
		private EntitySet<EventLog> _EventLogs;
		
		private EntityRef<EventLogType> _EventLogType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnLogTypeKeyChanging(string value);
    partial void OnLogTypeKeyChanged();
    partial void OnLogTypePortalIDChanging(System.Nullable<int> value);
    partial void OnLogTypePortalIDChanged();
    partial void OnLoggingIsActiveChanging(bool value);
    partial void OnLoggingIsActiveChanged();
    partial void OnKeepMostRecentChanging(int value);
    partial void OnKeepMostRecentChanged();
    partial void OnEmailNotificationIsActiveChanging(bool value);
    partial void OnEmailNotificationIsActiveChanged();
    partial void OnNotificationThresholdChanging(System.Nullable<int> value);
    partial void OnNotificationThresholdChanged();
    partial void OnNotificationThresholdTimeChanging(System.Nullable<int> value);
    partial void OnNotificationThresholdTimeChanged();
    partial void OnNotificationThresholdTimeTypeChanging(System.Nullable<int> value);
    partial void OnNotificationThresholdTimeTypeChanged();
    partial void OnMailFromAddressChanging(string value);
    partial void OnMailFromAddressChanged();
    partial void OnMailToAddressChanging(string value);
    partial void OnMailToAddressChanged();
    #endregion
		
		public EventLogConfig()
		{
			this._EventLogs = new EntitySet<EventLog>(new Action<EventLog>(this.attach_EventLogs), new Action<EventLog>(this.detach_EventLogs));
			this._EventLogType = default(EntityRef<EventLogType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogTypeKey", DbType="NVarChar(35)")]
		public string LogTypeKey
		{
			get
			{
				return this._LogTypeKey;
			}
			set
			{
				if ((this._LogTypeKey != value))
				{
					if (this._EventLogType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLogTypeKeyChanging(value);
					this.SendPropertyChanging();
					this._LogTypeKey = value;
					this.SendPropertyChanged("LogTypeKey");
					this.OnLogTypeKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogTypePortalID", DbType="Int")]
		public System.Nullable<int> LogTypePortalID
		{
			get
			{
				return this._LogTypePortalID;
			}
			set
			{
				if ((this._LogTypePortalID != value))
				{
					this.OnLogTypePortalIDChanging(value);
					this.SendPropertyChanging();
					this._LogTypePortalID = value;
					this.SendPropertyChanged("LogTypePortalID");
					this.OnLogTypePortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoggingIsActive", DbType="Bit NOT NULL")]
		public bool LoggingIsActive
		{
			get
			{
				return this._LoggingIsActive;
			}
			set
			{
				if ((this._LoggingIsActive != value))
				{
					this.OnLoggingIsActiveChanging(value);
					this.SendPropertyChanging();
					this._LoggingIsActive = value;
					this.SendPropertyChanged("LoggingIsActive");
					this.OnLoggingIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeepMostRecent", DbType="Int NOT NULL")]
		public int KeepMostRecent
		{
			get
			{
				return this._KeepMostRecent;
			}
			set
			{
				if ((this._KeepMostRecent != value))
				{
					this.OnKeepMostRecentChanging(value);
					this.SendPropertyChanging();
					this._KeepMostRecent = value;
					this.SendPropertyChanged("KeepMostRecent");
					this.OnKeepMostRecentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailNotificationIsActive", DbType="Bit NOT NULL")]
		public bool EmailNotificationIsActive
		{
			get
			{
				return this._EmailNotificationIsActive;
			}
			set
			{
				if ((this._EmailNotificationIsActive != value))
				{
					this.OnEmailNotificationIsActiveChanging(value);
					this.SendPropertyChanging();
					this._EmailNotificationIsActive = value;
					this.SendPropertyChanged("EmailNotificationIsActive");
					this.OnEmailNotificationIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationThreshold", DbType="Int")]
		public System.Nullable<int> NotificationThreshold
		{
			get
			{
				return this._NotificationThreshold;
			}
			set
			{
				if ((this._NotificationThreshold != value))
				{
					this.OnNotificationThresholdChanging(value);
					this.SendPropertyChanging();
					this._NotificationThreshold = value;
					this.SendPropertyChanged("NotificationThreshold");
					this.OnNotificationThresholdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationThresholdTime", DbType="Int")]
		public System.Nullable<int> NotificationThresholdTime
		{
			get
			{
				return this._NotificationThresholdTime;
			}
			set
			{
				if ((this._NotificationThresholdTime != value))
				{
					this.OnNotificationThresholdTimeChanging(value);
					this.SendPropertyChanging();
					this._NotificationThresholdTime = value;
					this.SendPropertyChanged("NotificationThresholdTime");
					this.OnNotificationThresholdTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationThresholdTimeType", DbType="Int")]
		public System.Nullable<int> NotificationThresholdTimeType
		{
			get
			{
				return this._NotificationThresholdTimeType;
			}
			set
			{
				if ((this._NotificationThresholdTimeType != value))
				{
					this.OnNotificationThresholdTimeTypeChanging(value);
					this.SendPropertyChanging();
					this._NotificationThresholdTimeType = value;
					this.SendPropertyChanged("NotificationThresholdTimeType");
					this.OnNotificationThresholdTimeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailFromAddress", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MailFromAddress
		{
			get
			{
				return this._MailFromAddress;
			}
			set
			{
				if ((this._MailFromAddress != value))
				{
					this.OnMailFromAddressChanging(value);
					this.SendPropertyChanging();
					this._MailFromAddress = value;
					this.SendPropertyChanged("MailFromAddress");
					this.OnMailFromAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailToAddress", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MailToAddress
		{
			get
			{
				return this._MailToAddress;
			}
			set
			{
				if ((this._MailToAddress != value))
				{
					this.OnMailToAddressChanging(value);
					this.SendPropertyChanging();
					this._MailToAddress = value;
					this.SendPropertyChanged("MailToAddress");
					this.OnMailToAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EventLogConfig_EventLog", Storage="_EventLogs", ThisKey="ID", OtherKey="LogConfigID")]
		public EntitySet<EventLog> EventLogs
		{
			get
			{
				return this._EventLogs;
			}
			set
			{
				this._EventLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EventLogType_EventLogConfig", Storage="_EventLogType", ThisKey="LogTypeKey", OtherKey="LogTypeKey", IsForeignKey=true)]
		public EventLogType EventLogType
		{
			get
			{
				return this._EventLogType.Entity;
			}
			set
			{
				EventLogType previousValue = this._EventLogType.Entity;
				if (((previousValue != value) 
							|| (this._EventLogType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EventLogType.Entity = null;
						previousValue.EventLogConfigs.Remove(this);
					}
					this._EventLogType.Entity = value;
					if ((value != null))
					{
						value.EventLogConfigs.Add(this);
						this._LogTypeKey = value.LogTypeKey;
					}
					else
					{
						this._LogTypeKey = default(string);
					}
					this.SendPropertyChanged("EventLogType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EventLogs(EventLog entity)
		{
			this.SendPropertyChanging();
			entity.EventLogConfig = this;
		}
		
		private void detach_EventLogs(EventLog entity)
		{
			this.SendPropertyChanging();
			entity.EventLogConfig = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EventLogTypes")]
	public partial class EventLogType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LogTypeKey;
		
		private string _LogTypeFriendlyName;
		
		private string _LogTypeDescription;
		
		private string _LogTypeOwner;
		
		private string _LogTypeCSSClass;
		
		private EntitySet<EventLog> _EventLogs;
		
		private EntitySet<EventLogConfig> _EventLogConfigs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogTypeKeyChanging(string value);
    partial void OnLogTypeKeyChanged();
    partial void OnLogTypeFriendlyNameChanging(string value);
    partial void OnLogTypeFriendlyNameChanged();
    partial void OnLogTypeDescriptionChanging(string value);
    partial void OnLogTypeDescriptionChanged();
    partial void OnLogTypeOwnerChanging(string value);
    partial void OnLogTypeOwnerChanged();
    partial void OnLogTypeCSSClassChanging(string value);
    partial void OnLogTypeCSSClassChanged();
    #endregion
		
		public EventLogType()
		{
			this._EventLogs = new EntitySet<EventLog>(new Action<EventLog>(this.attach_EventLogs), new Action<EventLog>(this.detach_EventLogs));
			this._EventLogConfigs = new EntitySet<EventLogConfig>(new Action<EventLogConfig>(this.attach_EventLogConfigs), new Action<EventLogConfig>(this.detach_EventLogConfigs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogTypeKey", DbType="NVarChar(35) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LogTypeKey
		{
			get
			{
				return this._LogTypeKey;
			}
			set
			{
				if ((this._LogTypeKey != value))
				{
					this.OnLogTypeKeyChanging(value);
					this.SendPropertyChanging();
					this._LogTypeKey = value;
					this.SendPropertyChanged("LogTypeKey");
					this.OnLogTypeKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogTypeFriendlyName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LogTypeFriendlyName
		{
			get
			{
				return this._LogTypeFriendlyName;
			}
			set
			{
				if ((this._LogTypeFriendlyName != value))
				{
					this.OnLogTypeFriendlyNameChanging(value);
					this.SendPropertyChanging();
					this._LogTypeFriendlyName = value;
					this.SendPropertyChanged("LogTypeFriendlyName");
					this.OnLogTypeFriendlyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogTypeDescription", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string LogTypeDescription
		{
			get
			{
				return this._LogTypeDescription;
			}
			set
			{
				if ((this._LogTypeDescription != value))
				{
					this.OnLogTypeDescriptionChanging(value);
					this.SendPropertyChanging();
					this._LogTypeDescription = value;
					this.SendPropertyChanged("LogTypeDescription");
					this.OnLogTypeDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogTypeOwner", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string LogTypeOwner
		{
			get
			{
				return this._LogTypeOwner;
			}
			set
			{
				if ((this._LogTypeOwner != value))
				{
					this.OnLogTypeOwnerChanging(value);
					this.SendPropertyChanging();
					this._LogTypeOwner = value;
					this.SendPropertyChanged("LogTypeOwner");
					this.OnLogTypeOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogTypeCSSClass", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string LogTypeCSSClass
		{
			get
			{
				return this._LogTypeCSSClass;
			}
			set
			{
				if ((this._LogTypeCSSClass != value))
				{
					this.OnLogTypeCSSClassChanging(value);
					this.SendPropertyChanging();
					this._LogTypeCSSClass = value;
					this.SendPropertyChanged("LogTypeCSSClass");
					this.OnLogTypeCSSClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EventLogType_EventLog", Storage="_EventLogs", ThisKey="LogTypeKey", OtherKey="LogTypeKey")]
		public EntitySet<EventLog> EventLogs
		{
			get
			{
				return this._EventLogs;
			}
			set
			{
				this._EventLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EventLogType_EventLogConfig", Storage="_EventLogConfigs", ThisKey="LogTypeKey", OtherKey="LogTypeKey")]
		public EntitySet<EventLogConfig> EventLogConfigs
		{
			get
			{
				return this._EventLogConfigs;
			}
			set
			{
				this._EventLogConfigs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EventLogs(EventLog entity)
		{
			this.SendPropertyChanging();
			entity.EventLogType = this;
		}
		
		private void detach_EventLogs(EventLog entity)
		{
			this.SendPropertyChanging();
			entity.EventLogType = null;
		}
		
		private void attach_EventLogConfigs(EventLogConfig entity)
		{
			this.SendPropertyChanging();
			entity.EventLogType = this;
		}
		
		private void detach_EventLogConfigs(EventLogConfig entity)
		{
			this.SendPropertyChanging();
			entity.EventLogType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EventQueue")]
	public partial class EventQueue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EventMessageID;
		
		private string _EventName;
		
		private int _Priority;
		
		private string _ProcessorType;
		
		private string _ProcessorCommand;
		
		private string _Body;
		
		private string _Sender;
		
		private string _Subscriber;
		
		private string _AuthorizedRoles;
		
		private string _ExceptionMessage;
		
		private System.DateTime _SentDate;
		
		private System.DateTime _ExpirationDate;
		
		private string _Attributes;
		
		private bool _IsComplete;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventMessageIDChanging(int value);
    partial void OnEventMessageIDChanged();
    partial void OnEventNameChanging(string value);
    partial void OnEventNameChanged();
    partial void OnPriorityChanging(int value);
    partial void OnPriorityChanged();
    partial void OnProcessorTypeChanging(string value);
    partial void OnProcessorTypeChanged();
    partial void OnProcessorCommandChanging(string value);
    partial void OnProcessorCommandChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnSenderChanging(string value);
    partial void OnSenderChanged();
    partial void OnSubscriberChanging(string value);
    partial void OnSubscriberChanged();
    partial void OnAuthorizedRolesChanging(string value);
    partial void OnAuthorizedRolesChanged();
    partial void OnExceptionMessageChanging(string value);
    partial void OnExceptionMessageChanged();
    partial void OnSentDateChanging(System.DateTime value);
    partial void OnSentDateChanged();
    partial void OnExpirationDateChanging(System.DateTime value);
    partial void OnExpirationDateChanged();
    partial void OnAttributesChanging(string value);
    partial void OnAttributesChanged();
    partial void OnIsCompleteChanging(bool value);
    partial void OnIsCompleteChanged();
    #endregion
		
		public EventQueue()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventMessageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EventMessageID
		{
			get
			{
				return this._EventMessageID;
			}
			set
			{
				if ((this._EventMessageID != value))
				{
					this.OnEventMessageIDChanging(value);
					this.SendPropertyChanging();
					this._EventMessageID = value;
					this.SendPropertyChanged("EventMessageID");
					this.OnEventMessageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string EventName
		{
			get
			{
				return this._EventName;
			}
			set
			{
				if ((this._EventName != value))
				{
					this.OnEventNameChanging(value);
					this.SendPropertyChanging();
					this._EventName = value;
					this.SendPropertyChanged("EventName");
					this.OnEventNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int NOT NULL")]
		public int Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessorType", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string ProcessorType
		{
			get
			{
				return this._ProcessorType;
			}
			set
			{
				if ((this._ProcessorType != value))
				{
					this.OnProcessorTypeChanging(value);
					this.SendPropertyChanging();
					this._ProcessorType = value;
					this.SendPropertyChanged("ProcessorType");
					this.OnProcessorTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessorCommand", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string ProcessorCommand
		{
			get
			{
				return this._ProcessorCommand;
			}
			set
			{
				if ((this._ProcessorCommand != value))
				{
					this.OnProcessorCommandChanging(value);
					this.SendPropertyChanging();
					this._ProcessorCommand = value;
					this.SendPropertyChanged("ProcessorCommand");
					this.OnProcessorCommandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Body", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Body
		{
			get
			{
				return this._Body;
			}
			set
			{
				if ((this._Body != value))
				{
					this.OnBodyChanging(value);
					this.SendPropertyChanging();
					this._Body = value;
					this.SendPropertyChanged("Body");
					this.OnBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sender", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Sender
		{
			get
			{
				return this._Sender;
			}
			set
			{
				if ((this._Sender != value))
				{
					this.OnSenderChanging(value);
					this.SendPropertyChanging();
					this._Sender = value;
					this.SendPropertyChanged("Sender");
					this.OnSenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subscriber", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Subscriber
		{
			get
			{
				return this._Subscriber;
			}
			set
			{
				if ((this._Subscriber != value))
				{
					this.OnSubscriberChanging(value);
					this.SendPropertyChanging();
					this._Subscriber = value;
					this.SendPropertyChanged("Subscriber");
					this.OnSubscriberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorizedRoles", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string AuthorizedRoles
		{
			get
			{
				return this._AuthorizedRoles;
			}
			set
			{
				if ((this._AuthorizedRoles != value))
				{
					this.OnAuthorizedRolesChanging(value);
					this.SendPropertyChanging();
					this._AuthorizedRoles = value;
					this.SendPropertyChanged("AuthorizedRoles");
					this.OnAuthorizedRolesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExceptionMessage", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string ExceptionMessage
		{
			get
			{
				return this._ExceptionMessage;
			}
			set
			{
				if ((this._ExceptionMessage != value))
				{
					this.OnExceptionMessageChanging(value);
					this.SendPropertyChanging();
					this._ExceptionMessage = value;
					this.SendPropertyChanged("ExceptionMessage");
					this.OnExceptionMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SentDate", DbType="DateTime NOT NULL")]
		public System.DateTime SentDate
		{
			get
			{
				return this._SentDate;
			}
			set
			{
				if ((this._SentDate != value))
				{
					this.OnSentDateChanging(value);
					this.SendPropertyChanging();
					this._SentDate = value;
					this.SendPropertyChanged("SentDate");
					this.OnSentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpirationDate", DbType="DateTime NOT NULL")]
		public System.DateTime ExpirationDate
		{
			get
			{
				return this._ExpirationDate;
			}
			set
			{
				if ((this._ExpirationDate != value))
				{
					this.OnExpirationDateChanging(value);
					this.SendPropertyChanging();
					this._ExpirationDate = value;
					this.SendPropertyChanged("ExpirationDate");
					this.OnExpirationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attributes", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Attributes
		{
			get
			{
				return this._Attributes;
			}
			set
			{
				if ((this._Attributes != value))
				{
					this.OnAttributesChanging(value);
					this.SendPropertyChanging();
					this._Attributes = value;
					this.SendPropertyChanged("Attributes");
					this.OnAttributesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsComplete", DbType="Bit NOT NULL")]
		public bool IsComplete
		{
			get
			{
				return this._IsComplete;
			}
			set
			{
				if ((this._IsComplete != value))
				{
					this.OnIsCompleteChanging(value);
					this.SendPropertyChanging();
					this._IsComplete = value;
					this.SendPropertyChanged("IsComplete");
					this.OnIsCompleteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Files")]
	public partial class File : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FileId;
		
		private System.Nullable<int> _PortalId;
		
		private string _FileName;
		
		private string _Extension;
		
		private int _Size;
		
		private System.Nullable<int> _Width;
		
		private System.Nullable<int> _Height;
		
		private string _ContentType;
		
		private string _Folder;
		
		private int _FolderID;
		
		private System.Data.Linq.Binary _Content;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private System.Guid _UniqueId;
		
		private System.Guid _VersionGuid;
		
		private string _SHA1Hash;
		
		private System.DateTime _LastModificationTime;
		
		private EntityRef<Folder> _Folder1;
		
		private EntityRef<Portal> _Portal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFileIdChanging(int value);
    partial void OnFileIdChanged();
    partial void OnPortalIdChanging(System.Nullable<int> value);
    partial void OnPortalIdChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnExtensionChanging(string value);
    partial void OnExtensionChanged();
    partial void OnSizeChanging(int value);
    partial void OnSizeChanged();
    partial void OnWidthChanging(System.Nullable<int> value);
    partial void OnWidthChanged();
    partial void OnHeightChanging(System.Nullable<int> value);
    partial void OnHeightChanged();
    partial void OnContentTypeChanging(string value);
    partial void OnContentTypeChanged();
    partial void OnFolderChanging(string value);
    partial void OnFolderChanged();
    partial void OnFolderIDChanging(int value);
    partial void OnFolderIDChanged();
    partial void OnContentChanging(System.Data.Linq.Binary value);
    partial void OnContentChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    partial void OnUniqueIdChanging(System.Guid value);
    partial void OnUniqueIdChanged();
    partial void OnVersionGuidChanging(System.Guid value);
    partial void OnVersionGuidChanged();
    partial void OnSHA1HashChanging(string value);
    partial void OnSHA1HashChanged();
    partial void OnLastModificationTimeChanging(System.DateTime value);
    partial void OnLastModificationTimeChanged();
    #endregion
		
		public File()
		{
			this._Folder1 = default(EntityRef<Folder>);
			this._Portal = default(EntityRef<Portal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FileId
		{
			get
			{
				return this._FileId;
			}
			set
			{
				if ((this._FileId != value))
				{
					this.OnFileIdChanging(value);
					this.SendPropertyChanging();
					this._FileId = value;
					this.SendPropertyChanged("FileId");
					this.OnFileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalId", DbType="Int")]
		public System.Nullable<int> PortalId
		{
			get
			{
				return this._PortalId;
			}
			set
			{
				if ((this._PortalId != value))
				{
					if (this._Portal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalIdChanging(value);
					this.SendPropertyChanging();
					this._PortalId = value;
					this.SendPropertyChanged("PortalId");
					this.OnPortalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(246) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Extension", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Extension
		{
			get
			{
				return this._Extension;
			}
			set
			{
				if ((this._Extension != value))
				{
					this.OnExtensionChanging(value);
					this.SendPropertyChanging();
					this._Extension = value;
					this.SendPropertyChanged("Extension");
					this.OnExtensionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="Int NOT NULL")]
		public int Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Width", DbType="Int")]
		public System.Nullable<int> Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Int")]
		public System.Nullable<int> Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentType", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string ContentType
		{
			get
			{
				return this._ContentType;
			}
			set
			{
				if ((this._ContentType != value))
				{
					this.OnContentTypeChanging(value);
					this.SendPropertyChanging();
					this._ContentType = value;
					this.SendPropertyChanged("ContentType");
					this.OnContentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Folder", DbType="NVarChar(246)")]
		public string Folder
		{
			get
			{
				return this._Folder;
			}
			set
			{
				if ((this._Folder != value))
				{
					this.OnFolderChanging(value);
					this.SendPropertyChanging();
					this._Folder = value;
					this.SendPropertyChanged("Folder");
					this.OnFolderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FolderID", DbType="Int NOT NULL")]
		public int FolderID
		{
			get
			{
				return this._FolderID;
			}
			set
			{
				if ((this._FolderID != value))
				{
					if (this._Folder1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFolderIDChanging(value);
					this.SendPropertyChanging();
					this._FolderID = value;
					this.SendPropertyChanged("FolderID");
					this.OnFolderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="Image", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UniqueId
		{
			get
			{
				return this._UniqueId;
			}
			set
			{
				if ((this._UniqueId != value))
				{
					this.OnUniqueIdChanging(value);
					this.SendPropertyChanging();
					this._UniqueId = value;
					this.SendPropertyChanged("UniqueId");
					this.OnUniqueIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionGuid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid VersionGuid
		{
			get
			{
				return this._VersionGuid;
			}
			set
			{
				if ((this._VersionGuid != value))
				{
					this.OnVersionGuidChanging(value);
					this.SendPropertyChanging();
					this._VersionGuid = value;
					this.SendPropertyChanged("VersionGuid");
					this.OnVersionGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SHA1Hash", DbType="VarChar(40)")]
		public string SHA1Hash
		{
			get
			{
				return this._SHA1Hash;
			}
			set
			{
				if ((this._SHA1Hash != value))
				{
					this.OnSHA1HashChanging(value);
					this.SendPropertyChanging();
					this._SHA1Hash = value;
					this.SendPropertyChanged("SHA1Hash");
					this.OnSHA1HashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="DateTime NOT NULL")]
		public System.DateTime LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Folder_File", Storage="_Folder1", ThisKey="FolderID", OtherKey="FolderID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Folder Folder1
		{
			get
			{
				return this._Folder1.Entity;
			}
			set
			{
				Folder previousValue = this._Folder1.Entity;
				if (((previousValue != value) 
							|| (this._Folder1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Folder1.Entity = null;
						previousValue.Files.Remove(this);
					}
					this._Folder1.Entity = value;
					if ((value != null))
					{
						value.Files.Add(this);
						this._FolderID = value.FolderID;
					}
					else
					{
						this._FolderID = default(int);
					}
					this.SendPropertyChanged("Folder1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Portal_File", Storage="_Portal", ThisKey="PortalId", OtherKey="PortalID", IsForeignKey=true)]
		public Portal Portal
		{
			get
			{
				return this._Portal.Entity;
			}
			set
			{
				Portal previousValue = this._Portal.Entity;
				if (((previousValue != value) 
							|| (this._Portal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Portal.Entity = null;
						previousValue.Files.Remove(this);
					}
					this._Portal.Entity = value;
					if ((value != null))
					{
						value.Files.Add(this);
						this._PortalId = value.PortalID;
					}
					else
					{
						this._PortalId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Portal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FolderMappings")]
	public partial class FolderMapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FolderMappingID;
		
		private System.Nullable<int> _PortalID;
		
		private string _MappingName;
		
		private string _FolderProviderType;
		
		private System.Nullable<int> _Priority;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntitySet<FolderMappingsSetting> _FolderMappingsSettings;
		
		private EntityRef<Portal> _Portal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFolderMappingIDChanging(int value);
    partial void OnFolderMappingIDChanged();
    partial void OnPortalIDChanging(System.Nullable<int> value);
    partial void OnPortalIDChanged();
    partial void OnMappingNameChanging(string value);
    partial void OnMappingNameChanged();
    partial void OnFolderProviderTypeChanging(string value);
    partial void OnFolderProviderTypeChanged();
    partial void OnPriorityChanging(System.Nullable<int> value);
    partial void OnPriorityChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public FolderMapping()
		{
			this._FolderMappingsSettings = new EntitySet<FolderMappingsSetting>(new Action<FolderMappingsSetting>(this.attach_FolderMappingsSettings), new Action<FolderMappingsSetting>(this.detach_FolderMappingsSettings));
			this._Portal = default(EntityRef<Portal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FolderMappingID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FolderMappingID
		{
			get
			{
				return this._FolderMappingID;
			}
			set
			{
				if ((this._FolderMappingID != value))
				{
					this.OnFolderMappingIDChanging(value);
					this.SendPropertyChanging();
					this._FolderMappingID = value;
					this.SendPropertyChanged("FolderMappingID");
					this.OnFolderMappingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int")]
		public System.Nullable<int> PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					if (this._Portal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MappingName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MappingName
		{
			get
			{
				return this._MappingName;
			}
			set
			{
				if ((this._MappingName != value))
				{
					this.OnMappingNameChanging(value);
					this.SendPropertyChanging();
					this._MappingName = value;
					this.SendPropertyChanged("MappingName");
					this.OnMappingNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FolderProviderType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FolderProviderType
		{
			get
			{
				return this._FolderProviderType;
			}
			set
			{
				if ((this._FolderProviderType != value))
				{
					this.OnFolderProviderTypeChanging(value);
					this.SendPropertyChanging();
					this._FolderProviderType = value;
					this.SendPropertyChanged("FolderProviderType");
					this.OnFolderProviderTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int")]
		public System.Nullable<int> Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FolderMapping_FolderMappingsSetting", Storage="_FolderMappingsSettings", ThisKey="FolderMappingID", OtherKey="FolderMappingID")]
		public EntitySet<FolderMappingsSetting> FolderMappingsSettings
		{
			get
			{
				return this._FolderMappingsSettings;
			}
			set
			{
				this._FolderMappingsSettings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Portal_FolderMapping", Storage="_Portal", ThisKey="PortalID", OtherKey="PortalID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Portal Portal
		{
			get
			{
				return this._Portal.Entity;
			}
			set
			{
				Portal previousValue = this._Portal.Entity;
				if (((previousValue != value) 
							|| (this._Portal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Portal.Entity = null;
						previousValue.FolderMappings.Remove(this);
					}
					this._Portal.Entity = value;
					if ((value != null))
					{
						value.FolderMappings.Add(this);
						this._PortalID = value.PortalID;
					}
					else
					{
						this._PortalID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Portal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FolderMappingsSettings(FolderMappingsSetting entity)
		{
			this.SendPropertyChanging();
			entity.FolderMapping = this;
		}
		
		private void detach_FolderMappingsSettings(FolderMappingsSetting entity)
		{
			this.SendPropertyChanging();
			entity.FolderMapping = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FolderMappingsSettings")]
	public partial class FolderMappingsSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FolderMappingID;
		
		private string _SettingName;
		
		private string _SettingValue;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntityRef<FolderMapping> _FolderMapping;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFolderMappingIDChanging(int value);
    partial void OnFolderMappingIDChanged();
    partial void OnSettingNameChanging(string value);
    partial void OnSettingNameChanged();
    partial void OnSettingValueChanging(string value);
    partial void OnSettingValueChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public FolderMappingsSetting()
		{
			this._FolderMapping = default(EntityRef<FolderMapping>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FolderMappingID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int FolderMappingID
		{
			get
			{
				return this._FolderMappingID;
			}
			set
			{
				if ((this._FolderMappingID != value))
				{
					if (this._FolderMapping.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFolderMappingIDChanging(value);
					this.SendPropertyChanging();
					this._FolderMappingID = value;
					this.SendPropertyChanged("FolderMappingID");
					this.OnFolderMappingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SettingName
		{
			get
			{
				return this._SettingName;
			}
			set
			{
				if ((this._SettingName != value))
				{
					this.OnSettingNameChanging(value);
					this.SendPropertyChanging();
					this._SettingName = value;
					this.SendPropertyChanged("SettingName");
					this.OnSettingNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingValue", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string SettingValue
		{
			get
			{
				return this._SettingValue;
			}
			set
			{
				if ((this._SettingValue != value))
				{
					this.OnSettingValueChanging(value);
					this.SendPropertyChanging();
					this._SettingValue = value;
					this.SendPropertyChanged("SettingValue");
					this.OnSettingValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FolderMapping_FolderMappingsSetting", Storage="_FolderMapping", ThisKey="FolderMappingID", OtherKey="FolderMappingID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public FolderMapping FolderMapping
		{
			get
			{
				return this._FolderMapping.Entity;
			}
			set
			{
				FolderMapping previousValue = this._FolderMapping.Entity;
				if (((previousValue != value) 
							|| (this._FolderMapping.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FolderMapping.Entity = null;
						previousValue.FolderMappingsSettings.Remove(this);
					}
					this._FolderMapping.Entity = value;
					if ((value != null))
					{
						value.FolderMappingsSettings.Add(this);
						this._FolderMappingID = value.FolderMappingID;
					}
					else
					{
						this._FolderMappingID = default(int);
					}
					this.SendPropertyChanged("FolderMapping");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FolderPermission")]
	public partial class FolderPermission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FolderPermissionID;
		
		private int _FolderID;
		
		private int _PermissionID;
		
		private bool _AllowAccess;
		
		private System.Nullable<int> _RoleID;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntityRef<Folder> _Folder;
		
		private EntityRef<Permission> _Permission;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFolderPermissionIDChanging(int value);
    partial void OnFolderPermissionIDChanged();
    partial void OnFolderIDChanging(int value);
    partial void OnFolderIDChanged();
    partial void OnPermissionIDChanging(int value);
    partial void OnPermissionIDChanged();
    partial void OnAllowAccessChanging(bool value);
    partial void OnAllowAccessChanged();
    partial void OnRoleIDChanging(System.Nullable<int> value);
    partial void OnRoleIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public FolderPermission()
		{
			this._Folder = default(EntityRef<Folder>);
			this._Permission = default(EntityRef<Permission>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FolderPermissionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FolderPermissionID
		{
			get
			{
				return this._FolderPermissionID;
			}
			set
			{
				if ((this._FolderPermissionID != value))
				{
					this.OnFolderPermissionIDChanging(value);
					this.SendPropertyChanging();
					this._FolderPermissionID = value;
					this.SendPropertyChanged("FolderPermissionID");
					this.OnFolderPermissionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FolderID", DbType="Int NOT NULL")]
		public int FolderID
		{
			get
			{
				return this._FolderID;
			}
			set
			{
				if ((this._FolderID != value))
				{
					if (this._Folder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFolderIDChanging(value);
					this.SendPropertyChanging();
					this._FolderID = value;
					this.SendPropertyChanged("FolderID");
					this.OnFolderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionID", DbType="Int NOT NULL")]
		public int PermissionID
		{
			get
			{
				return this._PermissionID;
			}
			set
			{
				if ((this._PermissionID != value))
				{
					if (this._Permission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPermissionIDChanging(value);
					this.SendPropertyChanging();
					this._PermissionID = value;
					this.SendPropertyChanged("PermissionID");
					this.OnPermissionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowAccess", DbType="Bit NOT NULL")]
		public bool AllowAccess
		{
			get
			{
				return this._AllowAccess;
			}
			set
			{
				if ((this._AllowAccess != value))
				{
					this.OnAllowAccessChanging(value);
					this.SendPropertyChanging();
					this._AllowAccess = value;
					this.SendPropertyChanged("AllowAccess");
					this.OnAllowAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int")]
		public System.Nullable<int> RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Folder_FolderPermission", Storage="_Folder", ThisKey="FolderID", OtherKey="FolderID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Folder Folder
		{
			get
			{
				return this._Folder.Entity;
			}
			set
			{
				Folder previousValue = this._Folder.Entity;
				if (((previousValue != value) 
							|| (this._Folder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Folder.Entity = null;
						previousValue.FolderPermissions.Remove(this);
					}
					this._Folder.Entity = value;
					if ((value != null))
					{
						value.FolderPermissions.Add(this);
						this._FolderID = value.FolderID;
					}
					else
					{
						this._FolderID = default(int);
					}
					this.SendPropertyChanged("Folder");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permission_FolderPermission", Storage="_Permission", ThisKey="PermissionID", OtherKey="PermissionID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Permission Permission
		{
			get
			{
				return this._Permission.Entity;
			}
			set
			{
				Permission previousValue = this._Permission.Entity;
				if (((previousValue != value) 
							|| (this._Permission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Permission.Entity = null;
						previousValue.FolderPermissions.Remove(this);
					}
					this._Permission.Entity = value;
					if ((value != null))
					{
						value.FolderPermissions.Add(this);
						this._PermissionID = value.PermissionID;
					}
					else
					{
						this._PermissionID = default(int);
					}
					this.SendPropertyChanged("Permission");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_FolderPermission", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.FolderPermissions.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.FolderPermissions.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Folders")]
	public partial class Folder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FolderID;
		
		private System.Nullable<int> _PortalID;
		
		private string _FolderPath;
		
		private int _StorageLocation;
		
		private bool _IsProtected;
		
		private bool _IsCached;
		
		private System.Nullable<System.DateTime> _LastUpdated;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private System.Guid _UniqueId;
		
		private System.Guid _VersionGuid;
		
		private int _FolderMappingID;
		
		private EntitySet<File> _Files;
		
		private EntitySet<FolderPermission> _FolderPermissions;
		
		private EntityRef<Portal> _Portal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFolderIDChanging(int value);
    partial void OnFolderIDChanged();
    partial void OnPortalIDChanging(System.Nullable<int> value);
    partial void OnPortalIDChanged();
    partial void OnFolderPathChanging(string value);
    partial void OnFolderPathChanged();
    partial void OnStorageLocationChanging(int value);
    partial void OnStorageLocationChanged();
    partial void OnIsProtectedChanging(bool value);
    partial void OnIsProtectedChanged();
    partial void OnIsCachedChanging(bool value);
    partial void OnIsCachedChanged();
    partial void OnLastUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    partial void OnUniqueIdChanging(System.Guid value);
    partial void OnUniqueIdChanged();
    partial void OnVersionGuidChanging(System.Guid value);
    partial void OnVersionGuidChanged();
    partial void OnFolderMappingIDChanging(int value);
    partial void OnFolderMappingIDChanged();
    #endregion
		
		public Folder()
		{
			this._Files = new EntitySet<File>(new Action<File>(this.attach_Files), new Action<File>(this.detach_Files));
			this._FolderPermissions = new EntitySet<FolderPermission>(new Action<FolderPermission>(this.attach_FolderPermissions), new Action<FolderPermission>(this.detach_FolderPermissions));
			this._Portal = default(EntityRef<Portal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FolderID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FolderID
		{
			get
			{
				return this._FolderID;
			}
			set
			{
				if ((this._FolderID != value))
				{
					this.OnFolderIDChanging(value);
					this.SendPropertyChanging();
					this._FolderID = value;
					this.SendPropertyChanged("FolderID");
					this.OnFolderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int")]
		public System.Nullable<int> PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					if (this._Portal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FolderPath", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string FolderPath
		{
			get
			{
				return this._FolderPath;
			}
			set
			{
				if ((this._FolderPath != value))
				{
					this.OnFolderPathChanging(value);
					this.SendPropertyChanging();
					this._FolderPath = value;
					this.SendPropertyChanged("FolderPath");
					this.OnFolderPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageLocation", DbType="Int NOT NULL")]
		public int StorageLocation
		{
			get
			{
				return this._StorageLocation;
			}
			set
			{
				if ((this._StorageLocation != value))
				{
					this.OnStorageLocationChanging(value);
					this.SendPropertyChanging();
					this._StorageLocation = value;
					this.SendPropertyChanged("StorageLocation");
					this.OnStorageLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsProtected", DbType="Bit NOT NULL")]
		public bool IsProtected
		{
			get
			{
				return this._IsProtected;
			}
			set
			{
				if ((this._IsProtected != value))
				{
					this.OnIsProtectedChanging(value);
					this.SendPropertyChanging();
					this._IsProtected = value;
					this.SendPropertyChanged("IsProtected");
					this.OnIsProtectedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCached", DbType="Bit NOT NULL")]
		public bool IsCached
		{
			get
			{
				return this._IsCached;
			}
			set
			{
				if ((this._IsCached != value))
				{
					this.OnIsCachedChanging(value);
					this.SendPropertyChanging();
					this._IsCached = value;
					this.SendPropertyChanged("IsCached");
					this.OnIsCachedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdated
		{
			get
			{
				return this._LastUpdated;
			}
			set
			{
				if ((this._LastUpdated != value))
				{
					this.OnLastUpdatedChanging(value);
					this.SendPropertyChanging();
					this._LastUpdated = value;
					this.SendPropertyChanged("LastUpdated");
					this.OnLastUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UniqueId
		{
			get
			{
				return this._UniqueId;
			}
			set
			{
				if ((this._UniqueId != value))
				{
					this.OnUniqueIdChanging(value);
					this.SendPropertyChanging();
					this._UniqueId = value;
					this.SendPropertyChanged("UniqueId");
					this.OnUniqueIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionGuid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid VersionGuid
		{
			get
			{
				return this._VersionGuid;
			}
			set
			{
				if ((this._VersionGuid != value))
				{
					this.OnVersionGuidChanging(value);
					this.SendPropertyChanging();
					this._VersionGuid = value;
					this.SendPropertyChanged("VersionGuid");
					this.OnVersionGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FolderMappingID", DbType="Int NOT NULL")]
		public int FolderMappingID
		{
			get
			{
				return this._FolderMappingID;
			}
			set
			{
				if ((this._FolderMappingID != value))
				{
					this.OnFolderMappingIDChanging(value);
					this.SendPropertyChanging();
					this._FolderMappingID = value;
					this.SendPropertyChanged("FolderMappingID");
					this.OnFolderMappingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Folder_File", Storage="_Files", ThisKey="FolderID", OtherKey="FolderID")]
		public EntitySet<File> Files
		{
			get
			{
				return this._Files;
			}
			set
			{
				this._Files.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Folder_FolderPermission", Storage="_FolderPermissions", ThisKey="FolderID", OtherKey="FolderID")]
		public EntitySet<FolderPermission> FolderPermissions
		{
			get
			{
				return this._FolderPermissions;
			}
			set
			{
				this._FolderPermissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Portal_Folder", Storage="_Portal", ThisKey="PortalID", OtherKey="PortalID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Portal Portal
		{
			get
			{
				return this._Portal.Entity;
			}
			set
			{
				Portal previousValue = this._Portal.Entity;
				if (((previousValue != value) 
							|| (this._Portal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Portal.Entity = null;
						previousValue.Folders.Remove(this);
					}
					this._Portal.Entity = value;
					if ((value != null))
					{
						value.Folders.Add(this);
						this._PortalID = value.PortalID;
					}
					else
					{
						this._PortalID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Portal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Files(File entity)
		{
			this.SendPropertyChanging();
			entity.Folder1 = this;
		}
		
		private void detach_Files(File entity)
		{
			this.SendPropertyChanging();
			entity.Folder1 = null;
		}
		
		private void attach_FolderPermissions(FolderPermission entity)
		{
			this.SendPropertyChanging();
			entity.Folder = this;
		}
		
		private void detach_FolderPermissions(FolderPermission entity)
		{
			this.SendPropertyChanging();
			entity.Folder = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HostSettings")]
	public partial class HostSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SettingName;
		
		private string _SettingValue;
		
		private bool _SettingIsSecure;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSettingNameChanging(string value);
    partial void OnSettingNameChanged();
    partial void OnSettingValueChanging(string value);
    partial void OnSettingValueChanged();
    partial void OnSettingIsSecureChanging(bool value);
    partial void OnSettingIsSecureChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public HostSetting()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SettingName
		{
			get
			{
				return this._SettingName;
			}
			set
			{
				if ((this._SettingName != value))
				{
					this.OnSettingNameChanging(value);
					this.SendPropertyChanging();
					this._SettingName = value;
					this.SendPropertyChanged("SettingName");
					this.OnSettingNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingValue", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string SettingValue
		{
			get
			{
				return this._SettingValue;
			}
			set
			{
				if ((this._SettingValue != value))
				{
					this.OnSettingValueChanging(value);
					this.SendPropertyChanging();
					this._SettingValue = value;
					this.SendPropertyChanged("SettingValue");
					this.OnSettingValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingIsSecure", DbType="Bit NOT NULL")]
		public bool SettingIsSecure
		{
			get
			{
				return this._SettingIsSecure;
			}
			set
			{
				if ((this._SettingIsSecure != value))
				{
					this.OnSettingIsSecureChanging(value);
					this.SendPropertyChanging();
					this._SettingIsSecure = value;
					this.SendPropertyChanged("SettingIsSecure");
					this.OnSettingIsSecureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HtmlText")]
	public partial class HtmlText : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ModuleID;
		
		private int _ItemID;
		
		private string _Content;
		
		private System.Nullable<int> _Version;
		
		private System.Nullable<int> _StateID;
		
		private System.Nullable<bool> _IsPublished;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private string _Summary;
		
		private EntitySet<HtmlTextLog> _HtmlTextLogs;
		
		private EntitySet<HtmlTextUser> _HtmlTextUsers;
		
		private EntityRef<Module> _Module;
		
		private EntityRef<WorkflowState> _WorkflowState;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnVersionChanging(System.Nullable<int> value);
    partial void OnVersionChanged();
    partial void OnStateIDChanging(System.Nullable<int> value);
    partial void OnStateIDChanged();
    partial void OnIsPublishedChanging(System.Nullable<bool> value);
    partial void OnIsPublishedChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public HtmlText()
		{
			this._HtmlTextLogs = new EntitySet<HtmlTextLog>(new Action<HtmlTextLog>(this.attach_HtmlTextLogs), new Action<HtmlTextLog>(this.detach_HtmlTextLogs));
			this._HtmlTextUsers = new EntitySet<HtmlTextUser>(new Action<HtmlTextUser>(this.attach_HtmlTextUsers), new Action<HtmlTextUser>(this.detach_HtmlTextUsers));
			this._Module = default(EntityRef<Module>);
			this._WorkflowState = default(EntityRef<WorkflowState>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleID", DbType="Int NOT NULL")]
		public int ModuleID
		{
			get
			{
				return this._ModuleID;
			}
			set
			{
				if ((this._ModuleID != value))
				{
					if (this._Module.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="Int")]
		public System.Nullable<int> Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int")]
		public System.Nullable<int> StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					if (this._WorkflowState.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStateIDChanging(value);
					this.SendPropertyChanging();
					this._StateID = value;
					this.SendPropertyChanged("StateID");
					this.OnStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPublished", DbType="Bit")]
		public System.Nullable<bool> IsPublished
		{
			get
			{
				return this._IsPublished;
			}
			set
			{
				if ((this._IsPublished != value))
				{
					this.OnIsPublishedChanging(value);
					this.SendPropertyChanging();
					this._IsPublished = value;
					this.SendPropertyChanged("IsPublished");
					this.OnIsPublishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HtmlText_HtmlTextLog", Storage="_HtmlTextLogs", ThisKey="ItemID", OtherKey="ItemID")]
		public EntitySet<HtmlTextLog> HtmlTextLogs
		{
			get
			{
				return this._HtmlTextLogs;
			}
			set
			{
				this._HtmlTextLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HtmlText_HtmlTextUser", Storage="_HtmlTextUsers", ThisKey="ItemID", OtherKey="ItemID")]
		public EntitySet<HtmlTextUser> HtmlTextUsers
		{
			get
			{
				return this._HtmlTextUsers;
			}
			set
			{
				this._HtmlTextUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Module_HtmlText", Storage="_Module", ThisKey="ModuleID", OtherKey="ModuleID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Module Module
		{
			get
			{
				return this._Module.Entity;
			}
			set
			{
				Module previousValue = this._Module.Entity;
				if (((previousValue != value) 
							|| (this._Module.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Module.Entity = null;
						previousValue.HtmlTexts.Remove(this);
					}
					this._Module.Entity = value;
					if ((value != null))
					{
						value.HtmlTexts.Add(this);
						this._ModuleID = value.ModuleID;
					}
					else
					{
						this._ModuleID = default(int);
					}
					this.SendPropertyChanged("Module");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkflowState_HtmlText", Storage="_WorkflowState", ThisKey="StateID", OtherKey="StateID", IsForeignKey=true)]
		public WorkflowState WorkflowState
		{
			get
			{
				return this._WorkflowState.Entity;
			}
			set
			{
				WorkflowState previousValue = this._WorkflowState.Entity;
				if (((previousValue != value) 
							|| (this._WorkflowState.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkflowState.Entity = null;
						previousValue.HtmlTexts.Remove(this);
					}
					this._WorkflowState.Entity = value;
					if ((value != null))
					{
						value.HtmlTexts.Add(this);
						this._StateID = value.StateID;
					}
					else
					{
						this._StateID = default(Nullable<int>);
					}
					this.SendPropertyChanged("WorkflowState");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HtmlTextLogs(HtmlTextLog entity)
		{
			this.SendPropertyChanging();
			entity.HtmlText = this;
		}
		
		private void detach_HtmlTextLogs(HtmlTextLog entity)
		{
			this.SendPropertyChanging();
			entity.HtmlText = null;
		}
		
		private void attach_HtmlTextUsers(HtmlTextUser entity)
		{
			this.SendPropertyChanging();
			entity.HtmlText = this;
		}
		
		private void detach_HtmlTextUsers(HtmlTextUser entity)
		{
			this.SendPropertyChanging();
			entity.HtmlText = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HtmlTextLog")]
	public partial class HtmlTextLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HtmlTextLogID;
		
		private int _ItemID;
		
		private int _StateID;
		
		private string _Comment;
		
		private bool _Approved;
		
		private int _CreatedByUserID;
		
		private System.DateTime _CreatedOnDate;
		
		private EntityRef<HtmlText> _HtmlText;
		
		private EntityRef<WorkflowState> _WorkflowState;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHtmlTextLogIDChanging(int value);
    partial void OnHtmlTextLogIDChanged();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnStateIDChanging(int value);
    partial void OnStateIDChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnApprovedChanging(bool value);
    partial void OnApprovedChanged();
    partial void OnCreatedByUserIDChanging(int value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.DateTime value);
    partial void OnCreatedOnDateChanged();
    #endregion
		
		public HtmlTextLog()
		{
			this._HtmlText = default(EntityRef<HtmlText>);
			this._WorkflowState = default(EntityRef<WorkflowState>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HtmlTextLogID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HtmlTextLogID
		{
			get
			{
				return this._HtmlTextLogID;
			}
			set
			{
				if ((this._HtmlTextLogID != value))
				{
					this.OnHtmlTextLogIDChanging(value);
					this.SendPropertyChanging();
					this._HtmlTextLogID = value;
					this.SendPropertyChanged("HtmlTextLogID");
					this.OnHtmlTextLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="Int NOT NULL")]
		public int ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					if (this._HtmlText.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int NOT NULL")]
		public int StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					if (this._WorkflowState.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStateIDChanging(value);
					this.SendPropertyChanging();
					this._StateID = value;
					this.SendPropertyChanged("StateID");
					this.OnStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(4000)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Approved", DbType="Bit NOT NULL")]
		public bool Approved
		{
			get
			{
				return this._Approved;
			}
			set
			{
				if ((this._Approved != value))
				{
					this.OnApprovedChanging(value);
					this.SendPropertyChanging();
					this._Approved = value;
					this.SendPropertyChanged("Approved");
					this.OnApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int NOT NULL")]
		public int CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HtmlText_HtmlTextLog", Storage="_HtmlText", ThisKey="ItemID", OtherKey="ItemID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public HtmlText HtmlText
		{
			get
			{
				return this._HtmlText.Entity;
			}
			set
			{
				HtmlText previousValue = this._HtmlText.Entity;
				if (((previousValue != value) 
							|| (this._HtmlText.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HtmlText.Entity = null;
						previousValue.HtmlTextLogs.Remove(this);
					}
					this._HtmlText.Entity = value;
					if ((value != null))
					{
						value.HtmlTextLogs.Add(this);
						this._ItemID = value.ItemID;
					}
					else
					{
						this._ItemID = default(int);
					}
					this.SendPropertyChanged("HtmlText");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkflowState_HtmlTextLog", Storage="_WorkflowState", ThisKey="StateID", OtherKey="StateID", IsForeignKey=true)]
		public WorkflowState WorkflowState
		{
			get
			{
				return this._WorkflowState.Entity;
			}
			set
			{
				WorkflowState previousValue = this._WorkflowState.Entity;
				if (((previousValue != value) 
							|| (this._WorkflowState.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkflowState.Entity = null;
						previousValue.HtmlTextLogs.Remove(this);
					}
					this._WorkflowState.Entity = value;
					if ((value != null))
					{
						value.HtmlTextLogs.Add(this);
						this._StateID = value.StateID;
					}
					else
					{
						this._StateID = default(int);
					}
					this.SendPropertyChanged("WorkflowState");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HtmlTextUsers")]
	public partial class HtmlTextUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HtmlTextUserID;
		
		private int _ItemID;
		
		private int _StateID;
		
		private int _ModuleID;
		
		private int _TabID;
		
		private int _UserID;
		
		private System.DateTime _CreatedOnDate;
		
		private EntityRef<HtmlText> _HtmlText;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHtmlTextUserIDChanging(int value);
    partial void OnHtmlTextUserIDChanged();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnStateIDChanging(int value);
    partial void OnStateIDChanged();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnTabIDChanging(int value);
    partial void OnTabIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnCreatedOnDateChanging(System.DateTime value);
    partial void OnCreatedOnDateChanged();
    #endregion
		
		public HtmlTextUser()
		{
			this._HtmlText = default(EntityRef<HtmlText>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HtmlTextUserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HtmlTextUserID
		{
			get
			{
				return this._HtmlTextUserID;
			}
			set
			{
				if ((this._HtmlTextUserID != value))
				{
					this.OnHtmlTextUserIDChanging(value);
					this.SendPropertyChanging();
					this._HtmlTextUserID = value;
					this.SendPropertyChanged("HtmlTextUserID");
					this.OnHtmlTextUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="Int NOT NULL")]
		public int ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					if (this._HtmlText.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int NOT NULL")]
		public int StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					this.OnStateIDChanging(value);
					this.SendPropertyChanging();
					this._StateID = value;
					this.SendPropertyChanged("StateID");
					this.OnStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleID", DbType="Int NOT NULL")]
		public int ModuleID
		{
			get
			{
				return this._ModuleID;
			}
			set
			{
				if ((this._ModuleID != value))
				{
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TabID", DbType="Int NOT NULL")]
		public int TabID
		{
			get
			{
				return this._TabID;
			}
			set
			{
				if ((this._TabID != value))
				{
					this.OnTabIDChanging(value);
					this.SendPropertyChanging();
					this._TabID = value;
					this.SendPropertyChanged("TabID");
					this.OnTabIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HtmlText_HtmlTextUser", Storage="_HtmlText", ThisKey="ItemID", OtherKey="ItemID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public HtmlText HtmlText
		{
			get
			{
				return this._HtmlText.Entity;
			}
			set
			{
				HtmlText previousValue = this._HtmlText.Entity;
				if (((previousValue != value) 
							|| (this._HtmlText.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HtmlText.Entity = null;
						previousValue.HtmlTextUsers.Remove(this);
					}
					this._HtmlText.Entity = value;
					if ((value != null))
					{
						value.HtmlTextUsers.Add(this);
						this._ItemID = value.ItemID;
					}
					else
					{
						this._ItemID = default(int);
					}
					this.SendPropertyChanged("HtmlText");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Journal")]
	public partial class Journal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _JournalId;
		
		private int _JournalTypeId;
		
		private System.Nullable<int> _UserId;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateUpdated;
		
		private System.Nullable<int> _PortalId;
		
		private int _ProfileId;
		
		private int _GroupId;
		
		private string _Title;
		
		private string _Summary;
		
		private string _ItemData;
		
		private string _ImageURL;
		
		private string _ObjectKey;
		
		private System.Nullable<System.Guid> _AccessKey;
		
		private System.Nullable<int> _ContentItemId;
		
		private EntitySet<Journal_Comment> _Journal_Comments;
		
		private EntitySet<Journal_Data> _Journal_Datas;
		
		private EntityRef<Journal_Type> _Journal_Type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJournalIdChanging(int value);
    partial void OnJournalIdChanged();
    partial void OnJournalTypeIdChanging(int value);
    partial void OnJournalTypeIdChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateUpdatedChanged();
    partial void OnPortalIdChanging(System.Nullable<int> value);
    partial void OnPortalIdChanged();
    partial void OnProfileIdChanging(int value);
    partial void OnProfileIdChanged();
    partial void OnGroupIdChanging(int value);
    partial void OnGroupIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnItemDataChanging(string value);
    partial void OnItemDataChanged();
    partial void OnImageURLChanging(string value);
    partial void OnImageURLChanged();
    partial void OnObjectKeyChanging(string value);
    partial void OnObjectKeyChanged();
    partial void OnAccessKeyChanging(System.Nullable<System.Guid> value);
    partial void OnAccessKeyChanged();
    partial void OnContentItemIdChanging(System.Nullable<int> value);
    partial void OnContentItemIdChanged();
    #endregion
		
		public Journal()
		{
			this._Journal_Comments = new EntitySet<Journal_Comment>(new Action<Journal_Comment>(this.attach_Journal_Comments), new Action<Journal_Comment>(this.detach_Journal_Comments));
			this._Journal_Datas = new EntitySet<Journal_Data>(new Action<Journal_Data>(this.attach_Journal_Datas), new Action<Journal_Data>(this.detach_Journal_Datas));
			this._Journal_Type = default(EntityRef<Journal_Type>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int JournalId
		{
			get
			{
				return this._JournalId;
			}
			set
			{
				if ((this._JournalId != value))
				{
					this.OnJournalIdChanging(value);
					this.SendPropertyChanging();
					this._JournalId = value;
					this.SendPropertyChanged("JournalId");
					this.OnJournalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalTypeId", DbType="Int NOT NULL")]
		public int JournalTypeId
		{
			get
			{
				return this._JournalTypeId;
			}
			set
			{
				if ((this._JournalTypeId != value))
				{
					if (this._Journal_Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJournalTypeIdChanging(value);
					this.SendPropertyChanging();
					this._JournalTypeId = value;
					this.SendPropertyChanged("JournalTypeId");
					this.OnJournalTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateUpdated
		{
			get
			{
				return this._DateUpdated;
			}
			set
			{
				if ((this._DateUpdated != value))
				{
					this.OnDateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._DateUpdated = value;
					this.SendPropertyChanged("DateUpdated");
					this.OnDateUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalId", DbType="Int")]
		public System.Nullable<int> PortalId
		{
			get
			{
				return this._PortalId;
			}
			set
			{
				if ((this._PortalId != value))
				{
					this.OnPortalIdChanging(value);
					this.SendPropertyChanging();
					this._PortalId = value;
					this.SendPropertyChanged("PortalId");
					this.OnPortalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileId", DbType="Int NOT NULL")]
		public int ProfileId
		{
			get
			{
				return this._ProfileId;
			}
			set
			{
				if ((this._ProfileId != value))
				{
					this.OnProfileIdChanging(value);
					this.SendPropertyChanging();
					this._ProfileId = value;
					this.SendPropertyChanged("ProfileId");
					this.OnProfileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", DbType="Int NOT NULL")]
		public int GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					this.OnGroupIdChanging(value);
					this.SendPropertyChanging();
					this._GroupId = value;
					this.SendPropertyChanged("GroupId");
					this.OnGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(2000)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemData", DbType="NVarChar(2000)")]
		public string ItemData
		{
			get
			{
				return this._ItemData;
			}
			set
			{
				if ((this._ItemData != value))
				{
					this.OnItemDataChanging(value);
					this.SendPropertyChanging();
					this._ItemData = value;
					this.SendPropertyChanged("ItemData");
					this.OnItemDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageURL", DbType="NVarChar(255)")]
		public string ImageURL
		{
			get
			{
				return this._ImageURL;
			}
			set
			{
				if ((this._ImageURL != value))
				{
					this.OnImageURLChanging(value);
					this.SendPropertyChanging();
					this._ImageURL = value;
					this.SendPropertyChanged("ImageURL");
					this.OnImageURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectKey", DbType="NVarChar(255)")]
		public string ObjectKey
		{
			get
			{
				return this._ObjectKey;
			}
			set
			{
				if ((this._ObjectKey != value))
				{
					this.OnObjectKeyChanging(value);
					this.SendPropertyChanging();
					this._ObjectKey = value;
					this.SendPropertyChanged("ObjectKey");
					this.OnObjectKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AccessKey
		{
			get
			{
				return this._AccessKey;
			}
			set
			{
				if ((this._AccessKey != value))
				{
					this.OnAccessKeyChanging(value);
					this.SendPropertyChanging();
					this._AccessKey = value;
					this.SendPropertyChanged("AccessKey");
					this.OnAccessKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentItemId", DbType="Int")]
		public System.Nullable<int> ContentItemId
		{
			get
			{
				return this._ContentItemId;
			}
			set
			{
				if ((this._ContentItemId != value))
				{
					this.OnContentItemIdChanging(value);
					this.SendPropertyChanging();
					this._ContentItemId = value;
					this.SendPropertyChanged("ContentItemId");
					this.OnContentItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Journal_Journal_Comment", Storage="_Journal_Comments", ThisKey="JournalId", OtherKey="JournalId")]
		public EntitySet<Journal_Comment> Journal_Comments
		{
			get
			{
				return this._Journal_Comments;
			}
			set
			{
				this._Journal_Comments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Journal_Journal_Data", Storage="_Journal_Datas", ThisKey="JournalId", OtherKey="JournalId")]
		public EntitySet<Journal_Data> Journal_Datas
		{
			get
			{
				return this._Journal_Datas;
			}
			set
			{
				this._Journal_Datas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Journal_Type_Journal", Storage="_Journal_Type", ThisKey="JournalTypeId", OtherKey="JournalTypeId", IsForeignKey=true)]
		public Journal_Type Journal_Type
		{
			get
			{
				return this._Journal_Type.Entity;
			}
			set
			{
				Journal_Type previousValue = this._Journal_Type.Entity;
				if (((previousValue != value) 
							|| (this._Journal_Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Journal_Type.Entity = null;
						previousValue.Journals.Remove(this);
					}
					this._Journal_Type.Entity = value;
					if ((value != null))
					{
						value.Journals.Add(this);
						this._JournalTypeId = value.JournalTypeId;
					}
					else
					{
						this._JournalTypeId = default(int);
					}
					this.SendPropertyChanged("Journal_Type");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Journal_Comments(Journal_Comment entity)
		{
			this.SendPropertyChanging();
			entity.Journal = this;
		}
		
		private void detach_Journal_Comments(Journal_Comment entity)
		{
			this.SendPropertyChanging();
			entity.Journal = null;
		}
		
		private void attach_Journal_Datas(Journal_Data entity)
		{
			this.SendPropertyChanging();
			entity.Journal = this;
		}
		
		private void detach_Journal_Datas(Journal_Data entity)
		{
			this.SendPropertyChanging();
			entity.Journal = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Journal_Access")]
	public partial class Journal_Access : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _JournalAccessId;
		
		private int _JournalTypeId;
		
		private int _PortalId;
		
		private string _Name;
		
		private System.Guid _AccessKey;
		
		private bool _IsEnabled;
		
		private System.DateTime _DateCreated;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJournalAccessIdChanging(int value);
    partial void OnJournalAccessIdChanged();
    partial void OnJournalTypeIdChanging(int value);
    partial void OnJournalTypeIdChanged();
    partial void OnPortalIdChanging(int value);
    partial void OnPortalIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAccessKeyChanging(System.Guid value);
    partial void OnAccessKeyChanged();
    partial void OnIsEnabledChanging(bool value);
    partial void OnIsEnabledChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public Journal_Access()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalAccessId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int JournalAccessId
		{
			get
			{
				return this._JournalAccessId;
			}
			set
			{
				if ((this._JournalAccessId != value))
				{
					this.OnJournalAccessIdChanging(value);
					this.SendPropertyChanging();
					this._JournalAccessId = value;
					this.SendPropertyChanged("JournalAccessId");
					this.OnJournalAccessIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalTypeId", DbType="Int NOT NULL")]
		public int JournalTypeId
		{
			get
			{
				return this._JournalTypeId;
			}
			set
			{
				if ((this._JournalTypeId != value))
				{
					this.OnJournalTypeIdChanging(value);
					this.SendPropertyChanging();
					this._JournalTypeId = value;
					this.SendPropertyChanged("JournalTypeId");
					this.OnJournalTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalId", DbType="Int NOT NULL")]
		public int PortalId
		{
			get
			{
				return this._PortalId;
			}
			set
			{
				if ((this._PortalId != value))
				{
					this.OnPortalIdChanging(value);
					this.SendPropertyChanging();
					this._PortalId = value;
					this.SendPropertyChanged("PortalId");
					this.OnPortalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AccessKey
		{
			get
			{
				return this._AccessKey;
			}
			set
			{
				if ((this._AccessKey != value))
				{
					this.OnAccessKeyChanging(value);
					this.SendPropertyChanging();
					this._AccessKey = value;
					this.SendPropertyChanged("AccessKey");
					this.OnAccessKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEnabled", DbType="Bit NOT NULL")]
		public bool IsEnabled
		{
			get
			{
				return this._IsEnabled;
			}
			set
			{
				if ((this._IsEnabled != value))
				{
					this.OnIsEnabledChanging(value);
					this.SendPropertyChanging();
					this._IsEnabled = value;
					this.SendPropertyChanged("IsEnabled");
					this.OnIsEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Journal_Comments")]
	public partial class Journal_Comment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CommentId;
		
		private int _JournalId;
		
		private int _UserId;
		
		private string _Comment;
		
		private System.DateTime _DateCreated;
		
		private System.DateTime _DateUpdated;
		
		private System.Xml.Linq.XElement _CommentXML;
		
		private EntityRef<Journal> _Journal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCommentIdChanging(int value);
    partial void OnCommentIdChanged();
    partial void OnJournalIdChanging(int value);
    partial void OnJournalIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateUpdatedChanging(System.DateTime value);
    partial void OnDateUpdatedChanged();
    partial void OnCommentXMLChanging(System.Xml.Linq.XElement value);
    partial void OnCommentXMLChanged();
    #endregion
		
		public Journal_Comment()
		{
			this._Journal = default(EntityRef<Journal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CommentId
		{
			get
			{
				return this._CommentId;
			}
			set
			{
				if ((this._CommentId != value))
				{
					this.OnCommentIdChanging(value);
					this.SendPropertyChanging();
					this._CommentId = value;
					this.SendPropertyChanged("CommentId");
					this.OnCommentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalId", DbType="Int NOT NULL")]
		public int JournalId
		{
			get
			{
				return this._JournalId;
			}
			set
			{
				if ((this._JournalId != value))
				{
					if (this._Journal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJournalIdChanging(value);
					this.SendPropertyChanging();
					this._JournalId = value;
					this.SendPropertyChanged("JournalId");
					this.OnJournalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(2000)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime DateUpdated
		{
			get
			{
				return this._DateUpdated;
			}
			set
			{
				if ((this._DateUpdated != value))
				{
					this.OnDateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._DateUpdated = value;
					this.SendPropertyChanged("DateUpdated");
					this.OnDateUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentXML", DbType="Xml", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement CommentXML
		{
			get
			{
				return this._CommentXML;
			}
			set
			{
				if ((this._CommentXML != value))
				{
					this.OnCommentXMLChanging(value);
					this.SendPropertyChanging();
					this._CommentXML = value;
					this.SendPropertyChanged("CommentXML");
					this.OnCommentXMLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Journal_Journal_Comment", Storage="_Journal", ThisKey="JournalId", OtherKey="JournalId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Journal Journal
		{
			get
			{
				return this._Journal.Entity;
			}
			set
			{
				Journal previousValue = this._Journal.Entity;
				if (((previousValue != value) 
							|| (this._Journal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Journal.Entity = null;
						previousValue.Journal_Comments.Remove(this);
					}
					this._Journal.Entity = value;
					if ((value != null))
					{
						value.Journal_Comments.Add(this);
						this._JournalId = value.JournalId;
					}
					else
					{
						this._JournalId = default(int);
					}
					this.SendPropertyChanged("Journal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Journal_Data")]
	public partial class Journal_Data : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _JournalDataId;
		
		private int _JournalId;
		
		private System.Xml.Linq.XElement _JournalXML;
		
		private EntityRef<Journal> _Journal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJournalDataIdChanging(int value);
    partial void OnJournalDataIdChanged();
    partial void OnJournalIdChanging(int value);
    partial void OnJournalIdChanged();
    partial void OnJournalXMLChanging(System.Xml.Linq.XElement value);
    partial void OnJournalXMLChanged();
    #endregion
		
		public Journal_Data()
		{
			this._Journal = default(EntityRef<Journal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalDataId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int JournalDataId
		{
			get
			{
				return this._JournalDataId;
			}
			set
			{
				if ((this._JournalDataId != value))
				{
					this.OnJournalDataIdChanging(value);
					this.SendPropertyChanging();
					this._JournalDataId = value;
					this.SendPropertyChanged("JournalDataId");
					this.OnJournalDataIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalId", DbType="Int NOT NULL")]
		public int JournalId
		{
			get
			{
				return this._JournalId;
			}
			set
			{
				if ((this._JournalId != value))
				{
					if (this._Journal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJournalIdChanging(value);
					this.SendPropertyChanging();
					this._JournalId = value;
					this.SendPropertyChanged("JournalId");
					this.OnJournalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalXML", DbType="Xml NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement JournalXML
		{
			get
			{
				return this._JournalXML;
			}
			set
			{
				if ((this._JournalXML != value))
				{
					this.OnJournalXMLChanging(value);
					this.SendPropertyChanging();
					this._JournalXML = value;
					this.SendPropertyChanged("JournalXML");
					this.OnJournalXMLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Journal_Journal_Data", Storage="_Journal", ThisKey="JournalId", OtherKey="JournalId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Journal Journal
		{
			get
			{
				return this._Journal.Entity;
			}
			set
			{
				Journal previousValue = this._Journal.Entity;
				if (((previousValue != value) 
							|| (this._Journal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Journal.Entity = null;
						previousValue.Journal_Datas.Remove(this);
					}
					this._Journal.Entity = value;
					if ((value != null))
					{
						value.Journal_Datas.Add(this);
						this._JournalId = value.JournalId;
					}
					else
					{
						this._JournalId = default(int);
					}
					this.SendPropertyChanged("Journal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Journal_Security")]
	public partial class Journal_Security : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _JournalSecurityId;
		
		private int _JournalId;
		
		private string _SecurityKey;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJournalSecurityIdChanging(int value);
    partial void OnJournalSecurityIdChanged();
    partial void OnJournalIdChanging(int value);
    partial void OnJournalIdChanged();
    partial void OnSecurityKeyChanging(string value);
    partial void OnSecurityKeyChanged();
    #endregion
		
		public Journal_Security()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalSecurityId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int JournalSecurityId
		{
			get
			{
				return this._JournalSecurityId;
			}
			set
			{
				if ((this._JournalSecurityId != value))
				{
					this.OnJournalSecurityIdChanging(value);
					this.SendPropertyChanging();
					this._JournalSecurityId = value;
					this.SendPropertyChanged("JournalSecurityId");
					this.OnJournalSecurityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalId", DbType="Int NOT NULL")]
		public int JournalId
		{
			get
			{
				return this._JournalId;
			}
			set
			{
				if ((this._JournalId != value))
				{
					this.OnJournalIdChanging(value);
					this.SendPropertyChanging();
					this._JournalId = value;
					this.SendPropertyChanged("JournalId");
					this.OnJournalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityKey", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SecurityKey
		{
			get
			{
				return this._SecurityKey;
			}
			set
			{
				if ((this._SecurityKey != value))
				{
					this.OnSecurityKeyChanging(value);
					this.SendPropertyChanging();
					this._SecurityKey = value;
					this.SendPropertyChanged("SecurityKey");
					this.OnSecurityKeyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Journal_TypeFilters")]
	public partial class Journal_TypeFilter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _JournalTypeFilterId;
		
		private int _PortalId;
		
		private int _ModuleId;
		
		private int _JournalTypeId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJournalTypeFilterIdChanging(int value);
    partial void OnJournalTypeFilterIdChanged();
    partial void OnPortalIdChanging(int value);
    partial void OnPortalIdChanged();
    partial void OnModuleIdChanging(int value);
    partial void OnModuleIdChanged();
    partial void OnJournalTypeIdChanging(int value);
    partial void OnJournalTypeIdChanged();
    #endregion
		
		public Journal_TypeFilter()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalTypeFilterId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int JournalTypeFilterId
		{
			get
			{
				return this._JournalTypeFilterId;
			}
			set
			{
				if ((this._JournalTypeFilterId != value))
				{
					this.OnJournalTypeFilterIdChanging(value);
					this.SendPropertyChanging();
					this._JournalTypeFilterId = value;
					this.SendPropertyChanged("JournalTypeFilterId");
					this.OnJournalTypeFilterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalId", DbType="Int NOT NULL")]
		public int PortalId
		{
			get
			{
				return this._PortalId;
			}
			set
			{
				if ((this._PortalId != value))
				{
					this.OnPortalIdChanging(value);
					this.SendPropertyChanging();
					this._PortalId = value;
					this.SendPropertyChanged("PortalId");
					this.OnPortalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleId", DbType="Int NOT NULL")]
		public int ModuleId
		{
			get
			{
				return this._ModuleId;
			}
			set
			{
				if ((this._ModuleId != value))
				{
					this.OnModuleIdChanging(value);
					this.SendPropertyChanging();
					this._ModuleId = value;
					this.SendPropertyChanged("ModuleId");
					this.OnModuleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalTypeId", DbType="Int NOT NULL")]
		public int JournalTypeId
		{
			get
			{
				return this._JournalTypeId;
			}
			set
			{
				if ((this._JournalTypeId != value))
				{
					this.OnJournalTypeIdChanging(value);
					this.SendPropertyChanging();
					this._JournalTypeId = value;
					this.SendPropertyChanged("JournalTypeId");
					this.OnJournalTypeIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Journal_Types")]
	public partial class Journal_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _JournalTypeId;
		
		private string _JournalType;
		
		private string _icon;
		
		private int _PortalId;
		
		private bool _IsEnabled;
		
		private bool _AppliesToProfile;
		
		private bool _AppliesToGroup;
		
		private bool _AppliesToStream;
		
		private string _Options;
		
		private bool _SupportsNotify;
		
		private bool _EnableComments;
		
		private EntitySet<Journal> _Journals;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJournalTypeIdChanging(int value);
    partial void OnJournalTypeIdChanged();
    partial void OnJournalTypeChanging(string value);
    partial void OnJournalTypeChanged();
    partial void OniconChanging(string value);
    partial void OniconChanged();
    partial void OnPortalIdChanging(int value);
    partial void OnPortalIdChanged();
    partial void OnIsEnabledChanging(bool value);
    partial void OnIsEnabledChanged();
    partial void OnAppliesToProfileChanging(bool value);
    partial void OnAppliesToProfileChanged();
    partial void OnAppliesToGroupChanging(bool value);
    partial void OnAppliesToGroupChanged();
    partial void OnAppliesToStreamChanging(bool value);
    partial void OnAppliesToStreamChanged();
    partial void OnOptionsChanging(string value);
    partial void OnOptionsChanged();
    partial void OnSupportsNotifyChanging(bool value);
    partial void OnSupportsNotifyChanged();
    partial void OnEnableCommentsChanging(bool value);
    partial void OnEnableCommentsChanged();
    #endregion
		
		public Journal_Type()
		{
			this._Journals = new EntitySet<Journal>(new Action<Journal>(this.attach_Journals), new Action<Journal>(this.detach_Journals));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int JournalTypeId
		{
			get
			{
				return this._JournalTypeId;
			}
			set
			{
				if ((this._JournalTypeId != value))
				{
					this.OnJournalTypeIdChanging(value);
					this.SendPropertyChanging();
					this._JournalTypeId = value;
					this.SendPropertyChanged("JournalTypeId");
					this.OnJournalTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalType", DbType="NVarChar(25)")]
		public string JournalType
		{
			get
			{
				return this._JournalType;
			}
			set
			{
				if ((this._JournalType != value))
				{
					this.OnJournalTypeChanging(value);
					this.SendPropertyChanging();
					this._JournalType = value;
					this.SendPropertyChanged("JournalType");
					this.OnJournalTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_icon", DbType="NVarChar(25)")]
		public string icon
		{
			get
			{
				return this._icon;
			}
			set
			{
				if ((this._icon != value))
				{
					this.OniconChanging(value);
					this.SendPropertyChanging();
					this._icon = value;
					this.SendPropertyChanged("icon");
					this.OniconChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalId", DbType="Int NOT NULL")]
		public int PortalId
		{
			get
			{
				return this._PortalId;
			}
			set
			{
				if ((this._PortalId != value))
				{
					this.OnPortalIdChanging(value);
					this.SendPropertyChanging();
					this._PortalId = value;
					this.SendPropertyChanged("PortalId");
					this.OnPortalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEnabled", DbType="Bit NOT NULL")]
		public bool IsEnabled
		{
			get
			{
				return this._IsEnabled;
			}
			set
			{
				if ((this._IsEnabled != value))
				{
					this.OnIsEnabledChanging(value);
					this.SendPropertyChanging();
					this._IsEnabled = value;
					this.SendPropertyChanged("IsEnabled");
					this.OnIsEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppliesToProfile", DbType="Bit NOT NULL")]
		public bool AppliesToProfile
		{
			get
			{
				return this._AppliesToProfile;
			}
			set
			{
				if ((this._AppliesToProfile != value))
				{
					this.OnAppliesToProfileChanging(value);
					this.SendPropertyChanging();
					this._AppliesToProfile = value;
					this.SendPropertyChanged("AppliesToProfile");
					this.OnAppliesToProfileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppliesToGroup", DbType="Bit NOT NULL")]
		public bool AppliesToGroup
		{
			get
			{
				return this._AppliesToGroup;
			}
			set
			{
				if ((this._AppliesToGroup != value))
				{
					this.OnAppliesToGroupChanging(value);
					this.SendPropertyChanging();
					this._AppliesToGroup = value;
					this.SendPropertyChanged("AppliesToGroup");
					this.OnAppliesToGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppliesToStream", DbType="Bit NOT NULL")]
		public bool AppliesToStream
		{
			get
			{
				return this._AppliesToStream;
			}
			set
			{
				if ((this._AppliesToStream != value))
				{
					this.OnAppliesToStreamChanging(value);
					this.SendPropertyChanging();
					this._AppliesToStream = value;
					this.SendPropertyChanged("AppliesToStream");
					this.OnAppliesToStreamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Options", DbType="NVarChar(MAX)")]
		public string Options
		{
			get
			{
				return this._Options;
			}
			set
			{
				if ((this._Options != value))
				{
					this.OnOptionsChanging(value);
					this.SendPropertyChanging();
					this._Options = value;
					this.SendPropertyChanged("Options");
					this.OnOptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupportsNotify", DbType="Bit NOT NULL")]
		public bool SupportsNotify
		{
			get
			{
				return this._SupportsNotify;
			}
			set
			{
				if ((this._SupportsNotify != value))
				{
					this.OnSupportsNotifyChanging(value);
					this.SendPropertyChanging();
					this._SupportsNotify = value;
					this.SendPropertyChanged("SupportsNotify");
					this.OnSupportsNotifyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnableComments", DbType="Bit NOT NULL")]
		public bool EnableComments
		{
			get
			{
				return this._EnableComments;
			}
			set
			{
				if ((this._EnableComments != value))
				{
					this.OnEnableCommentsChanging(value);
					this.SendPropertyChanging();
					this._EnableComments = value;
					this.SendPropertyChanged("EnableComments");
					this.OnEnableCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Journal_Type_Journal", Storage="_Journals", ThisKey="JournalTypeId", OtherKey="JournalTypeId")]
		public EntitySet<Journal> Journals
		{
			get
			{
				return this._Journals;
			}
			set
			{
				this._Journals.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Journals(Journal entity)
		{
			this.SendPropertyChanging();
			entity.Journal_Type = this;
		}
		
		private void detach_Journals(Journal entity)
		{
			this.SendPropertyChanging();
			entity.Journal_Type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LanguagePacks")]
	public partial class LanguagePack : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LanguagePackID;
		
		private int _PackageID;
		
		private int _DependentPackageID;
		
		private int _LanguageID;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntityRef<Language> _Language;
		
		private EntityRef<Package> _Package;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLanguagePackIDChanging(int value);
    partial void OnLanguagePackIDChanged();
    partial void OnPackageIDChanging(int value);
    partial void OnPackageIDChanged();
    partial void OnDependentPackageIDChanging(int value);
    partial void OnDependentPackageIDChanged();
    partial void OnLanguageIDChanging(int value);
    partial void OnLanguageIDChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public LanguagePack()
		{
			this._Language = default(EntityRef<Language>);
			this._Package = default(EntityRef<Package>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguagePackID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LanguagePackID
		{
			get
			{
				return this._LanguagePackID;
			}
			set
			{
				if ((this._LanguagePackID != value))
				{
					this.OnLanguagePackIDChanging(value);
					this.SendPropertyChanging();
					this._LanguagePackID = value;
					this.SendPropertyChanged("LanguagePackID");
					this.OnLanguagePackIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageID", DbType="Int NOT NULL")]
		public int PackageID
		{
			get
			{
				return this._PackageID;
			}
			set
			{
				if ((this._PackageID != value))
				{
					if (this._Package.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPackageIDChanging(value);
					this.SendPropertyChanging();
					this._PackageID = value;
					this.SendPropertyChanged("PackageID");
					this.OnPackageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DependentPackageID", DbType="Int NOT NULL")]
		public int DependentPackageID
		{
			get
			{
				return this._DependentPackageID;
			}
			set
			{
				if ((this._DependentPackageID != value))
				{
					this.OnDependentPackageIDChanging(value);
					this.SendPropertyChanging();
					this._DependentPackageID = value;
					this.SendPropertyChanged("DependentPackageID");
					this.OnDependentPackageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", DbType="Int NOT NULL")]
		public int LanguageID
		{
			get
			{
				return this._LanguageID;
			}
			set
			{
				if ((this._LanguageID != value))
				{
					if (this._Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._LanguageID = value;
					this.SendPropertyChanged("LanguageID");
					this.OnLanguageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_LanguagePack", Storage="_Language", ThisKey="LanguageID", OtherKey="LanguageID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Language Language
		{
			get
			{
				return this._Language.Entity;
			}
			set
			{
				Language previousValue = this._Language.Entity;
				if (((previousValue != value) 
							|| (this._Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Language.Entity = null;
						previousValue.LanguagePacks.Remove(this);
					}
					this._Language.Entity = value;
					if ((value != null))
					{
						value.LanguagePacks.Add(this);
						this._LanguageID = value.LanguageID;
					}
					else
					{
						this._LanguageID = default(int);
					}
					this.SendPropertyChanged("Language");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Package_LanguagePack", Storage="_Package", ThisKey="PackageID", OtherKey="PackageID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Package Package
		{
			get
			{
				return this._Package.Entity;
			}
			set
			{
				Package previousValue = this._Package.Entity;
				if (((previousValue != value) 
							|| (this._Package.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Package.Entity = null;
						previousValue.LanguagePacks.Remove(this);
					}
					this._Package.Entity = value;
					if ((value != null))
					{
						value.LanguagePacks.Add(this);
						this._PackageID = value.PackageID;
					}
					else
					{
						this._PackageID = default(int);
					}
					this.SendPropertyChanged("Package");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Languages")]
	public partial class Language : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LanguageID;
		
		private string _CultureCode;
		
		private string _CultureName;
		
		private string _FallbackCulture;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntitySet<LanguagePack> _LanguagePacks;
		
		private EntitySet<PortalLanguage> _PortalLanguages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLanguageIDChanging(int value);
    partial void OnLanguageIDChanged();
    partial void OnCultureCodeChanging(string value);
    partial void OnCultureCodeChanged();
    partial void OnCultureNameChanging(string value);
    partial void OnCultureNameChanged();
    partial void OnFallbackCultureChanging(string value);
    partial void OnFallbackCultureChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public Language()
		{
			this._LanguagePacks = new EntitySet<LanguagePack>(new Action<LanguagePack>(this.attach_LanguagePacks), new Action<LanguagePack>(this.detach_LanguagePacks));
			this._PortalLanguages = new EntitySet<PortalLanguage>(new Action<PortalLanguage>(this.attach_PortalLanguages), new Action<PortalLanguage>(this.detach_PortalLanguages));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LanguageID
		{
			get
			{
				return this._LanguageID;
			}
			set
			{
				if ((this._LanguageID != value))
				{
					this.OnLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._LanguageID = value;
					this.SendPropertyChanged("LanguageID");
					this.OnLanguageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CultureCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CultureCode
		{
			get
			{
				return this._CultureCode;
			}
			set
			{
				if ((this._CultureCode != value))
				{
					this.OnCultureCodeChanging(value);
					this.SendPropertyChanging();
					this._CultureCode = value;
					this.SendPropertyChanged("CultureCode");
					this.OnCultureCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CultureName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string CultureName
		{
			get
			{
				return this._CultureName;
			}
			set
			{
				if ((this._CultureName != value))
				{
					this.OnCultureNameChanging(value);
					this.SendPropertyChanging();
					this._CultureName = value;
					this.SendPropertyChanged("CultureName");
					this.OnCultureNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FallbackCulture", DbType="NVarChar(50)")]
		public string FallbackCulture
		{
			get
			{
				return this._FallbackCulture;
			}
			set
			{
				if ((this._FallbackCulture != value))
				{
					this.OnFallbackCultureChanging(value);
					this.SendPropertyChanging();
					this._FallbackCulture = value;
					this.SendPropertyChanged("FallbackCulture");
					this.OnFallbackCultureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_LanguagePack", Storage="_LanguagePacks", ThisKey="LanguageID", OtherKey="LanguageID")]
		public EntitySet<LanguagePack> LanguagePacks
		{
			get
			{
				return this._LanguagePacks;
			}
			set
			{
				this._LanguagePacks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_PortalLanguage", Storage="_PortalLanguages", ThisKey="LanguageID", OtherKey="LanguageID")]
		public EntitySet<PortalLanguage> PortalLanguages
		{
			get
			{
				return this._PortalLanguages;
			}
			set
			{
				this._PortalLanguages.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LanguagePacks(LanguagePack entity)
		{
			this.SendPropertyChanging();
			entity.Language = this;
		}
		
		private void detach_LanguagePacks(LanguagePack entity)
		{
			this.SendPropertyChanging();
			entity.Language = null;
		}
		
		private void attach_PortalLanguages(PortalLanguage entity)
		{
			this.SendPropertyChanging();
			entity.Language = this;
		}
		
		private void detach_PortalLanguages(PortalLanguage entity)
		{
			this.SendPropertyChanging();
			entity.Language = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Links")]
	public partial class Link : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ItemID;
		
		private int _ModuleID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _Title;
		
		private string _Url;
		
		private System.Nullable<int> _ViewOrder;
		
		private string _Description;
		
		private int _CreatedByUser;
		
		private EntityRef<Module> _Module;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnViewOrderChanging(System.Nullable<int> value);
    partial void OnViewOrderChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedByUserChanging(int value);
    partial void OnCreatedByUserChanged();
    #endregion
		
		public Link()
		{
			this._Module = default(EntityRef<Module>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleID", DbType="Int NOT NULL")]
		public int ModuleID
		{
			get
			{
				return this._ModuleID;
			}
			set
			{
				if ((this._ModuleID != value))
				{
					if (this._Module.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(100)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(250)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewOrder", DbType="Int")]
		public System.Nullable<int> ViewOrder
		{
			get
			{
				return this._ViewOrder;
			}
			set
			{
				if ((this._ViewOrder != value))
				{
					this.OnViewOrderChanging(value);
					this.SendPropertyChanging();
					this._ViewOrder = value;
					this.SendPropertyChanged("ViewOrder");
					this.OnViewOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(2000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUser", DbType="Int NOT NULL")]
		public int CreatedByUser
		{
			get
			{
				return this._CreatedByUser;
			}
			set
			{
				if ((this._CreatedByUser != value))
				{
					this.OnCreatedByUserChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUser = value;
					this.SendPropertyChanged("CreatedByUser");
					this.OnCreatedByUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Module_Link", Storage="_Module", ThisKey="ModuleID", OtherKey="ModuleID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Module Module
		{
			get
			{
				return this._Module.Entity;
			}
			set
			{
				Module previousValue = this._Module.Entity;
				if (((previousValue != value) 
							|| (this._Module.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Module.Entity = null;
						previousValue.Links.Remove(this);
					}
					this._Module.Entity = value;
					if ((value != null))
					{
						value.Links.Add(this);
						this._ModuleID = value.ModuleID;
					}
					else
					{
						this._ModuleID = default(int);
					}
					this.SendPropertyChanged("Module");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lists")]
	public partial class List : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EntryID;
		
		private string _ListName;
		
		private string _Value;
		
		private string _Text;
		
		private int _ParentID;
		
		private int _Level;
		
		private int _SortOrder;
		
		private int _DefinitionID;
		
		private string _Description;
		
		private int _PortalID;
		
		private bool _SystemList;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEntryIDChanging(int value);
    partial void OnEntryIDChanged();
    partial void OnListNameChanging(string value);
    partial void OnListNameChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnParentIDChanging(int value);
    partial void OnParentIDChanged();
    partial void OnLevelChanging(int value);
    partial void OnLevelChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    partial void OnDefinitionIDChanging(int value);
    partial void OnDefinitionIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPortalIDChanging(int value);
    partial void OnPortalIDChanged();
    partial void OnSystemListChanging(bool value);
    partial void OnSystemListChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public List()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EntryID
		{
			get
			{
				return this._EntryID;
			}
			set
			{
				if ((this._EntryID != value))
				{
					this.OnEntryIDChanging(value);
					this.SendPropertyChanging();
					this._EntryID = value;
					this.SendPropertyChanged("EntryID");
					this.OnEntryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ListName
		{
			get
			{
				return this._ListName;
			}
			set
			{
				if ((this._ListName != value))
				{
					this.OnListNameChanging(value);
					this.SendPropertyChanging();
					this._ListName = value;
					this.SendPropertyChanged("ListName");
					this.OnListNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int NOT NULL")]
		public int ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="Int NOT NULL")]
		public int Level
		{
			get
			{
				return this._Level;
			}
			set
			{
				if ((this._Level != value))
				{
					this.OnLevelChanging(value);
					this.SendPropertyChanging();
					this._Level = value;
					this.SendPropertyChanged("Level");
					this.OnLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefinitionID", DbType="Int NOT NULL")]
		public int DefinitionID
		{
			get
			{
				return this._DefinitionID;
			}
			set
			{
				if ((this._DefinitionID != value))
				{
					this.OnDefinitionIDChanging(value);
					this.SendPropertyChanging();
					this._DefinitionID = value;
					this.SendPropertyChanged("DefinitionID");
					this.OnDefinitionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int NOT NULL")]
		public int PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemList", DbType="Bit NOT NULL")]
		public bool SystemList
		{
			get
			{
				return this._SystemList;
			}
			set
			{
				if ((this._SystemList != value))
				{
					this.OnSystemListChanging(value);
					this.SendPropertyChanging();
					this._SystemList = value;
					this.SendPropertyChanged("SystemList");
					this.OnSystemListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Messaging_Messages")]
	public partial class Messaging_Message : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _MessageID;
		
		private int _PortalID;
		
		private int _FromUserID;
		
		private string _ToUserName;
		
		private string _FromUserName;
		
		private System.Nullable<int> _ToUserID;
		
		private System.Nullable<int> _ToRoleID;
		
		private byte _Status;
		
		private string _Subject;
		
		private string _Body;
		
		private System.DateTime _Date;
		
		private System.Guid _Conversation;
		
		private System.Nullable<long> _ReplyTo;
		
		private bool _AllowReply;
		
		private bool _SkipPortal;
		
		private bool _EmailSent;
		
		private System.Nullable<System.DateTime> _EmailSentDate;
		
		private System.Nullable<System.Guid> _EmailSchedulerInstance;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMessageIDChanging(long value);
    partial void OnMessageIDChanged();
    partial void OnPortalIDChanging(int value);
    partial void OnPortalIDChanged();
    partial void OnFromUserIDChanging(int value);
    partial void OnFromUserIDChanged();
    partial void OnToUserNameChanging(string value);
    partial void OnToUserNameChanged();
    partial void OnFromUserNameChanging(string value);
    partial void OnFromUserNameChanged();
    partial void OnToUserIDChanging(System.Nullable<int> value);
    partial void OnToUserIDChanged();
    partial void OnToRoleIDChanging(System.Nullable<int> value);
    partial void OnToRoleIDChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnConversationChanging(System.Guid value);
    partial void OnConversationChanged();
    partial void OnReplyToChanging(System.Nullable<long> value);
    partial void OnReplyToChanged();
    partial void OnAllowReplyChanging(bool value);
    partial void OnAllowReplyChanged();
    partial void OnSkipPortalChanging(bool value);
    partial void OnSkipPortalChanged();
    partial void OnEmailSentChanging(bool value);
    partial void OnEmailSentChanged();
    partial void OnEmailSentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEmailSentDateChanged();
    partial void OnEmailSchedulerInstanceChanging(System.Nullable<System.Guid> value);
    partial void OnEmailSchedulerInstanceChanged();
    #endregion
		
		public Messaging_Message()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long MessageID
		{
			get
			{
				return this._MessageID;
			}
			set
			{
				if ((this._MessageID != value))
				{
					this.OnMessageIDChanging(value);
					this.SendPropertyChanging();
					this._MessageID = value;
					this.SendPropertyChanged("MessageID");
					this.OnMessageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int NOT NULL")]
		public int PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromUserID", DbType="Int NOT NULL")]
		public int FromUserID
		{
			get
			{
				return this._FromUserID;
			}
			set
			{
				if ((this._FromUserID != value))
				{
					this.OnFromUserIDChanging(value);
					this.SendPropertyChanging();
					this._FromUserID = value;
					this.SendPropertyChanged("FromUserID");
					this.OnFromUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToUserName", DbType="NVarChar(50)")]
		public string ToUserName
		{
			get
			{
				return this._ToUserName;
			}
			set
			{
				if ((this._ToUserName != value))
				{
					this.OnToUserNameChanging(value);
					this.SendPropertyChanging();
					this._ToUserName = value;
					this.SendPropertyChanged("ToUserName");
					this.OnToUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromUserName", DbType="NVarChar(50)")]
		public string FromUserName
		{
			get
			{
				return this._FromUserName;
			}
			set
			{
				if ((this._FromUserName != value))
				{
					this.OnFromUserNameChanging(value);
					this.SendPropertyChanging();
					this._FromUserName = value;
					this.SendPropertyChanged("FromUserName");
					this.OnFromUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToUserID", DbType="Int")]
		public System.Nullable<int> ToUserID
		{
			get
			{
				return this._ToUserID;
			}
			set
			{
				if ((this._ToUserID != value))
				{
					this.OnToUserIDChanging(value);
					this.SendPropertyChanging();
					this._ToUserID = value;
					this.SendPropertyChanged("ToUserID");
					this.OnToUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToRoleID", DbType="Int")]
		public System.Nullable<int> ToRoleID
		{
			get
			{
				return this._ToRoleID;
			}
			set
			{
				if ((this._ToRoleID != value))
				{
					this.OnToRoleIDChanging(value);
					this.SendPropertyChanging();
					this._ToRoleID = value;
					this.SendPropertyChanged("ToRoleID");
					this.OnToRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(MAX)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Body", DbType="NVarChar(MAX)")]
		public string Body
		{
			get
			{
				return this._Body;
			}
			set
			{
				if ((this._Body != value))
				{
					this.OnBodyChanging(value);
					this.SendPropertyChanging();
					this._Body = value;
					this.SendPropertyChanged("Body");
					this.OnBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Conversation", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Conversation
		{
			get
			{
				return this._Conversation;
			}
			set
			{
				if ((this._Conversation != value))
				{
					this.OnConversationChanging(value);
					this.SendPropertyChanging();
					this._Conversation = value;
					this.SendPropertyChanged("Conversation");
					this.OnConversationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplyTo", DbType="BigInt")]
		public System.Nullable<long> ReplyTo
		{
			get
			{
				return this._ReplyTo;
			}
			set
			{
				if ((this._ReplyTo != value))
				{
					this.OnReplyToChanging(value);
					this.SendPropertyChanging();
					this._ReplyTo = value;
					this.SendPropertyChanged("ReplyTo");
					this.OnReplyToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowReply", DbType="Bit NOT NULL")]
		public bool AllowReply
		{
			get
			{
				return this._AllowReply;
			}
			set
			{
				if ((this._AllowReply != value))
				{
					this.OnAllowReplyChanging(value);
					this.SendPropertyChanging();
					this._AllowReply = value;
					this.SendPropertyChanged("AllowReply");
					this.OnAllowReplyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkipPortal", DbType="Bit NOT NULL")]
		public bool SkipPortal
		{
			get
			{
				return this._SkipPortal;
			}
			set
			{
				if ((this._SkipPortal != value))
				{
					this.OnSkipPortalChanging(value);
					this.SendPropertyChanging();
					this._SkipPortal = value;
					this.SendPropertyChanged("SkipPortal");
					this.OnSkipPortalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailSent", DbType="Bit NOT NULL")]
		public bool EmailSent
		{
			get
			{
				return this._EmailSent;
			}
			set
			{
				if ((this._EmailSent != value))
				{
					this.OnEmailSentChanging(value);
					this.SendPropertyChanging();
					this._EmailSent = value;
					this.SendPropertyChanged("EmailSent");
					this.OnEmailSentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailSentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EmailSentDate
		{
			get
			{
				return this._EmailSentDate;
			}
			set
			{
				if ((this._EmailSentDate != value))
				{
					this.OnEmailSentDateChanging(value);
					this.SendPropertyChanging();
					this._EmailSentDate = value;
					this.SendPropertyChanged("EmailSentDate");
					this.OnEmailSentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailSchedulerInstance", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> EmailSchedulerInstance
		{
			get
			{
				return this._EmailSchedulerInstance;
			}
			set
			{
				if ((this._EmailSchedulerInstance != value))
				{
					this.OnEmailSchedulerInstanceChanging(value);
					this.SendPropertyChanging();
					this._EmailSchedulerInstance = value;
					this.SendPropertyChanged("EmailSchedulerInstance");
					this.OnEmailSchedulerInstanceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MetaData")]
	public partial class MetaData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MetaDataID;
		
		private string _MetaDataName;
		
		private string _MetaDataDescription;
		
		private EntitySet<ContentItems_MetaData> _ContentItems_MetaDatas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMetaDataIDChanging(int value);
    partial void OnMetaDataIDChanged();
    partial void OnMetaDataNameChanging(string value);
    partial void OnMetaDataNameChanged();
    partial void OnMetaDataDescriptionChanging(string value);
    partial void OnMetaDataDescriptionChanged();
    #endregion
		
		public MetaData()
		{
			this._ContentItems_MetaDatas = new EntitySet<ContentItems_MetaData>(new Action<ContentItems_MetaData>(this.attach_ContentItems_MetaDatas), new Action<ContentItems_MetaData>(this.detach_ContentItems_MetaDatas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaDataID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MetaDataID
		{
			get
			{
				return this._MetaDataID;
			}
			set
			{
				if ((this._MetaDataID != value))
				{
					this.OnMetaDataIDChanging(value);
					this.SendPropertyChanging();
					this._MetaDataID = value;
					this.SendPropertyChanged("MetaDataID");
					this.OnMetaDataIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaDataName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string MetaDataName
		{
			get
			{
				return this._MetaDataName;
			}
			set
			{
				if ((this._MetaDataName != value))
				{
					this.OnMetaDataNameChanging(value);
					this.SendPropertyChanging();
					this._MetaDataName = value;
					this.SendPropertyChanged("MetaDataName");
					this.OnMetaDataNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaDataDescription", DbType="NVarChar(2500)")]
		public string MetaDataDescription
		{
			get
			{
				return this._MetaDataDescription;
			}
			set
			{
				if ((this._MetaDataDescription != value))
				{
					this.OnMetaDataDescriptionChanging(value);
					this.SendPropertyChanging();
					this._MetaDataDescription = value;
					this.SendPropertyChanged("MetaDataDescription");
					this.OnMetaDataDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MetaData_ContentItems_MetaData", Storage="_ContentItems_MetaDatas", ThisKey="MetaDataID", OtherKey="MetaDataID")]
		public EntitySet<ContentItems_MetaData> ContentItems_MetaDatas
		{
			get
			{
				return this._ContentItems_MetaDatas;
			}
			set
			{
				this._ContentItems_MetaDatas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ContentItems_MetaDatas(ContentItems_MetaData entity)
		{
			this.SendPropertyChanging();
			entity.MetaData = this;
		}
		
		private void detach_ContentItems_MetaDatas(ContentItems_MetaData entity)
		{
			this.SendPropertyChanging();
			entity.MetaData = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Mobile_PreviewProfiles")]
	public partial class Mobile_PreviewProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _PortalId;
		
		private string _Name;
		
		private int _Width;
		
		private int _Height;
		
		private string _UserAgent;
		
		private int _SortOrder;
		
		private int _CreatedByUserID;
		
		private System.DateTime _CreatedOnDate;
		
		private int _LastModifiedByUserID;
		
		private System.DateTime _LastModifiedOnDate;
		
		private EntityRef<Portal> _Portal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPortalIdChanging(int value);
    partial void OnPortalIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnWidthChanging(int value);
    partial void OnWidthChanged();
    partial void OnHeightChanging(int value);
    partial void OnHeightChanged();
    partial void OnUserAgentChanging(string value);
    partial void OnUserAgentChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    partial void OnCreatedByUserIDChanging(int value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.DateTime value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(int value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.DateTime value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public Mobile_PreviewProfile()
		{
			this._Portal = default(EntityRef<Portal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalId", DbType="Int NOT NULL")]
		public int PortalId
		{
			get
			{
				return this._PortalId;
			}
			set
			{
				if ((this._PortalId != value))
				{
					if (this._Portal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalIdChanging(value);
					this.SendPropertyChanging();
					this._PortalId = value;
					this.SendPropertyChanged("PortalId");
					this.OnPortalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Width", DbType="Int NOT NULL")]
		public int Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Int NOT NULL")]
		public int Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAgent", DbType="NVarChar(260) NOT NULL", CanBeNull=false)]
		public string UserAgent
		{
			get
			{
				return this._UserAgent;
			}
			set
			{
				if ((this._UserAgent != value))
				{
					this.OnUserAgentChanging(value);
					this.SendPropertyChanging();
					this._UserAgent = value;
					this.SendPropertyChanged("UserAgent");
					this.OnUserAgentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int NOT NULL")]
		public int CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int NOT NULL")]
		public int LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Portal_Mobile_PreviewProfile", Storage="_Portal", ThisKey="PortalId", OtherKey="PortalID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Portal Portal
		{
			get
			{
				return this._Portal.Entity;
			}
			set
			{
				Portal previousValue = this._Portal.Entity;
				if (((previousValue != value) 
							|| (this._Portal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Portal.Entity = null;
						previousValue.Mobile_PreviewProfiles.Remove(this);
					}
					this._Portal.Entity = value;
					if ((value != null))
					{
						value.Mobile_PreviewProfiles.Add(this);
						this._PortalId = value.PortalID;
					}
					else
					{
						this._PortalId = default(int);
					}
					this.SendPropertyChanged("Portal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Mobile_RedirectionRules")]
	public partial class Mobile_RedirectionRule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _RedirectionId;
		
		private string _Capability;
		
		private string _Expression;
		
		private EntityRef<Mobile_Redirection> _Mobile_Redirection;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRedirectionIdChanging(int value);
    partial void OnRedirectionIdChanged();
    partial void OnCapabilityChanging(string value);
    partial void OnCapabilityChanged();
    partial void OnExpressionChanging(string value);
    partial void OnExpressionChanged();
    #endregion
		
		public Mobile_RedirectionRule()
		{
			this._Mobile_Redirection = default(EntityRef<Mobile_Redirection>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RedirectionId", DbType="Int NOT NULL")]
		public int RedirectionId
		{
			get
			{
				return this._RedirectionId;
			}
			set
			{
				if ((this._RedirectionId != value))
				{
					if (this._Mobile_Redirection.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRedirectionIdChanging(value);
					this.SendPropertyChanging();
					this._RedirectionId = value;
					this.SendPropertyChanged("RedirectionId");
					this.OnRedirectionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capability", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Capability
		{
			get
			{
				return this._Capability;
			}
			set
			{
				if ((this._Capability != value))
				{
					this.OnCapabilityChanging(value);
					this.SendPropertyChanging();
					this._Capability = value;
					this.SendPropertyChanged("Capability");
					this.OnCapabilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expression", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Expression
		{
			get
			{
				return this._Expression;
			}
			set
			{
				if ((this._Expression != value))
				{
					this.OnExpressionChanging(value);
					this.SendPropertyChanging();
					this._Expression = value;
					this.SendPropertyChanged("Expression");
					this.OnExpressionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mobile_Redirection_Mobile_RedirectionRule", Storage="_Mobile_Redirection", ThisKey="RedirectionId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Mobile_Redirection Mobile_Redirection
		{
			get
			{
				return this._Mobile_Redirection.Entity;
			}
			set
			{
				Mobile_Redirection previousValue = this._Mobile_Redirection.Entity;
				if (((previousValue != value) 
							|| (this._Mobile_Redirection.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mobile_Redirection.Entity = null;
						previousValue.Mobile_RedirectionRules.Remove(this);
					}
					this._Mobile_Redirection.Entity = value;
					if ((value != null))
					{
						value.Mobile_RedirectionRules.Add(this);
						this._RedirectionId = value.Id;
					}
					else
					{
						this._RedirectionId = default(int);
					}
					this.SendPropertyChanged("Mobile_Redirection");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Mobile_Redirections")]
	public partial class Mobile_Redirection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _PortalId;
		
		private string _Name;
		
		private int _Type;
		
		private int _SortOrder;
		
		private int _SourceTabId;
		
		private bool _IncludeChildTabs;
		
		private int _TargetType;
		
		private string _TargetValue;
		
		private bool _Enabled;
		
		private int _CreatedByUserID;
		
		private System.DateTime _CreatedOnDate;
		
		private int _LastModifiedByUserID;
		
		private System.DateTime _LastModifiedOnDate;
		
		private EntitySet<Mobile_RedirectionRule> _Mobile_RedirectionRules;
		
		private EntityRef<Portal> _Portal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPortalIdChanging(int value);
    partial void OnPortalIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    partial void OnSourceTabIdChanging(int value);
    partial void OnSourceTabIdChanged();
    partial void OnIncludeChildTabsChanging(bool value);
    partial void OnIncludeChildTabsChanged();
    partial void OnTargetTypeChanging(int value);
    partial void OnTargetTypeChanged();
    partial void OnTargetValueChanging(string value);
    partial void OnTargetValueChanged();
    partial void OnEnabledChanging(bool value);
    partial void OnEnabledChanged();
    partial void OnCreatedByUserIDChanging(int value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.DateTime value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(int value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.DateTime value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public Mobile_Redirection()
		{
			this._Mobile_RedirectionRules = new EntitySet<Mobile_RedirectionRule>(new Action<Mobile_RedirectionRule>(this.attach_Mobile_RedirectionRules), new Action<Mobile_RedirectionRule>(this.detach_Mobile_RedirectionRules));
			this._Portal = default(EntityRef<Portal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalId", DbType="Int NOT NULL")]
		public int PortalId
		{
			get
			{
				return this._PortalId;
			}
			set
			{
				if ((this._PortalId != value))
				{
					if (this._Portal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalIdChanging(value);
					this.SendPropertyChanging();
					this._PortalId = value;
					this.SendPropertyChanged("PortalId");
					this.OnPortalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceTabId", DbType="Int NOT NULL")]
		public int SourceTabId
		{
			get
			{
				return this._SourceTabId;
			}
			set
			{
				if ((this._SourceTabId != value))
				{
					this.OnSourceTabIdChanging(value);
					this.SendPropertyChanging();
					this._SourceTabId = value;
					this.SendPropertyChanged("SourceTabId");
					this.OnSourceTabIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncludeChildTabs", DbType="Bit NOT NULL")]
		public bool IncludeChildTabs
		{
			get
			{
				return this._IncludeChildTabs;
			}
			set
			{
				if ((this._IncludeChildTabs != value))
				{
					this.OnIncludeChildTabsChanging(value);
					this.SendPropertyChanging();
					this._IncludeChildTabs = value;
					this.SendPropertyChanged("IncludeChildTabs");
					this.OnIncludeChildTabsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetType", DbType="Int NOT NULL")]
		public int TargetType
		{
			get
			{
				return this._TargetType;
			}
			set
			{
				if ((this._TargetType != value))
				{
					this.OnTargetTypeChanging(value);
					this.SendPropertyChanging();
					this._TargetType = value;
					this.SendPropertyChanged("TargetType");
					this.OnTargetTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetValue", DbType="NVarChar(260) NOT NULL", CanBeNull=false)]
		public string TargetValue
		{
			get
			{
				return this._TargetValue;
			}
			set
			{
				if ((this._TargetValue != value))
				{
					this.OnTargetValueChanging(value);
					this.SendPropertyChanging();
					this._TargetValue = value;
					this.SendPropertyChanged("TargetValue");
					this.OnTargetValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", DbType="Bit NOT NULL")]
		public bool Enabled
		{
			get
			{
				return this._Enabled;
			}
			set
			{
				if ((this._Enabled != value))
				{
					this.OnEnabledChanging(value);
					this.SendPropertyChanging();
					this._Enabled = value;
					this.SendPropertyChanged("Enabled");
					this.OnEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int NOT NULL")]
		public int CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int NOT NULL")]
		public int LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mobile_Redirection_Mobile_RedirectionRule", Storage="_Mobile_RedirectionRules", ThisKey="Id", OtherKey="RedirectionId")]
		public EntitySet<Mobile_RedirectionRule> Mobile_RedirectionRules
		{
			get
			{
				return this._Mobile_RedirectionRules;
			}
			set
			{
				this._Mobile_RedirectionRules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Portal_Mobile_Redirection", Storage="_Portal", ThisKey="PortalId", OtherKey="PortalID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Portal Portal
		{
			get
			{
				return this._Portal.Entity;
			}
			set
			{
				Portal previousValue = this._Portal.Entity;
				if (((previousValue != value) 
							|| (this._Portal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Portal.Entity = null;
						previousValue.Mobile_Redirections.Remove(this);
					}
					this._Portal.Entity = value;
					if ((value != null))
					{
						value.Mobile_Redirections.Add(this);
						this._PortalId = value.PortalID;
					}
					else
					{
						this._PortalId = default(int);
					}
					this.SendPropertyChanged("Portal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Mobile_RedirectionRules(Mobile_RedirectionRule entity)
		{
			this.SendPropertyChanging();
			entity.Mobile_Redirection = this;
		}
		
		private void detach_Mobile_RedirectionRules(Mobile_RedirectionRule entity)
		{
			this.SendPropertyChanging();
			entity.Mobile_Redirection = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ModuleControls")]
	public partial class ModuleControl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ModuleControlID;
		
		private System.Nullable<int> _ModuleDefID;
		
		private string _ControlKey;
		
		private string _ControlTitle;
		
		private string _ControlSrc;
		
		private string _IconFile;
		
		private int _ControlType;
		
		private System.Nullable<int> _ViewOrder;
		
		private string _HelpUrl;
		
		private bool _SupportsPartialRendering;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private bool _SupportsPopUps;
		
		private EntityRef<ModuleDefinition> _ModuleDefinition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModuleControlIDChanging(int value);
    partial void OnModuleControlIDChanged();
    partial void OnModuleDefIDChanging(System.Nullable<int> value);
    partial void OnModuleDefIDChanged();
    partial void OnControlKeyChanging(string value);
    partial void OnControlKeyChanged();
    partial void OnControlTitleChanging(string value);
    partial void OnControlTitleChanged();
    partial void OnControlSrcChanging(string value);
    partial void OnControlSrcChanged();
    partial void OnIconFileChanging(string value);
    partial void OnIconFileChanged();
    partial void OnControlTypeChanging(int value);
    partial void OnControlTypeChanged();
    partial void OnViewOrderChanging(System.Nullable<int> value);
    partial void OnViewOrderChanged();
    partial void OnHelpUrlChanging(string value);
    partial void OnHelpUrlChanged();
    partial void OnSupportsPartialRenderingChanging(bool value);
    partial void OnSupportsPartialRenderingChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    partial void OnSupportsPopUpsChanging(bool value);
    partial void OnSupportsPopUpsChanged();
    #endregion
		
		public ModuleControl()
		{
			this._ModuleDefinition = default(EntityRef<ModuleDefinition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleControlID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ModuleControlID
		{
			get
			{
				return this._ModuleControlID;
			}
			set
			{
				if ((this._ModuleControlID != value))
				{
					this.OnModuleControlIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleControlID = value;
					this.SendPropertyChanged("ModuleControlID");
					this.OnModuleControlIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleDefID", DbType="Int")]
		public System.Nullable<int> ModuleDefID
		{
			get
			{
				return this._ModuleDefID;
			}
			set
			{
				if ((this._ModuleDefID != value))
				{
					if (this._ModuleDefinition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleDefIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleDefID = value;
					this.SendPropertyChanged("ModuleDefID");
					this.OnModuleDefIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlKey", DbType="NVarChar(50)")]
		public string ControlKey
		{
			get
			{
				return this._ControlKey;
			}
			set
			{
				if ((this._ControlKey != value))
				{
					this.OnControlKeyChanging(value);
					this.SendPropertyChanging();
					this._ControlKey = value;
					this.SendPropertyChanged("ControlKey");
					this.OnControlKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlTitle", DbType="NVarChar(50)")]
		public string ControlTitle
		{
			get
			{
				return this._ControlTitle;
			}
			set
			{
				if ((this._ControlTitle != value))
				{
					this.OnControlTitleChanging(value);
					this.SendPropertyChanging();
					this._ControlTitle = value;
					this.SendPropertyChanged("ControlTitle");
					this.OnControlTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlSrc", DbType="NVarChar(256)")]
		public string ControlSrc
		{
			get
			{
				return this._ControlSrc;
			}
			set
			{
				if ((this._ControlSrc != value))
				{
					this.OnControlSrcChanging(value);
					this.SendPropertyChanging();
					this._ControlSrc = value;
					this.SendPropertyChanged("ControlSrc");
					this.OnControlSrcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IconFile", DbType="NVarChar(100)")]
		public string IconFile
		{
			get
			{
				return this._IconFile;
			}
			set
			{
				if ((this._IconFile != value))
				{
					this.OnIconFileChanging(value);
					this.SendPropertyChanging();
					this._IconFile = value;
					this.SendPropertyChanged("IconFile");
					this.OnIconFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlType", DbType="Int NOT NULL")]
		public int ControlType
		{
			get
			{
				return this._ControlType;
			}
			set
			{
				if ((this._ControlType != value))
				{
					this.OnControlTypeChanging(value);
					this.SendPropertyChanging();
					this._ControlType = value;
					this.SendPropertyChanged("ControlType");
					this.OnControlTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewOrder", DbType="Int")]
		public System.Nullable<int> ViewOrder
		{
			get
			{
				return this._ViewOrder;
			}
			set
			{
				if ((this._ViewOrder != value))
				{
					this.OnViewOrderChanging(value);
					this.SendPropertyChanging();
					this._ViewOrder = value;
					this.SendPropertyChanged("ViewOrder");
					this.OnViewOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HelpUrl", DbType="NVarChar(200)")]
		public string HelpUrl
		{
			get
			{
				return this._HelpUrl;
			}
			set
			{
				if ((this._HelpUrl != value))
				{
					this.OnHelpUrlChanging(value);
					this.SendPropertyChanging();
					this._HelpUrl = value;
					this.SendPropertyChanged("HelpUrl");
					this.OnHelpUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupportsPartialRendering", DbType="Bit NOT NULL")]
		public bool SupportsPartialRendering
		{
			get
			{
				return this._SupportsPartialRendering;
			}
			set
			{
				if ((this._SupportsPartialRendering != value))
				{
					this.OnSupportsPartialRenderingChanging(value);
					this.SendPropertyChanging();
					this._SupportsPartialRendering = value;
					this.SendPropertyChanged("SupportsPartialRendering");
					this.OnSupportsPartialRenderingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupportsPopUps", DbType="Bit NOT NULL")]
		public bool SupportsPopUps
		{
			get
			{
				return this._SupportsPopUps;
			}
			set
			{
				if ((this._SupportsPopUps != value))
				{
					this.OnSupportsPopUpsChanging(value);
					this.SendPropertyChanging();
					this._SupportsPopUps = value;
					this.SendPropertyChanged("SupportsPopUps");
					this.OnSupportsPopUpsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ModuleDefinition_ModuleControl", Storage="_ModuleDefinition", ThisKey="ModuleDefID", OtherKey="ModuleDefID", IsForeignKey=true, DeleteRule="CASCADE")]
		public ModuleDefinition ModuleDefinition
		{
			get
			{
				return this._ModuleDefinition.Entity;
			}
			set
			{
				ModuleDefinition previousValue = this._ModuleDefinition.Entity;
				if (((previousValue != value) 
							|| (this._ModuleDefinition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ModuleDefinition.Entity = null;
						previousValue.ModuleControls.Remove(this);
					}
					this._ModuleDefinition.Entity = value;
					if ((value != null))
					{
						value.ModuleControls.Add(this);
						this._ModuleDefID = value.ModuleDefID;
					}
					else
					{
						this._ModuleDefID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ModuleDefinition");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ModuleDefinitions")]
	public partial class ModuleDefinition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ModuleDefID;
		
		private string _FriendlyName;
		
		private int _DesktopModuleID;
		
		private int _DefaultCacheTime;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntitySet<ModuleControl> _ModuleControls;
		
		private EntitySet<Module> _Modules;
		
		private EntityRef<DesktopModule> _DesktopModule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModuleDefIDChanging(int value);
    partial void OnModuleDefIDChanged();
    partial void OnFriendlyNameChanging(string value);
    partial void OnFriendlyNameChanged();
    partial void OnDesktopModuleIDChanging(int value);
    partial void OnDesktopModuleIDChanged();
    partial void OnDefaultCacheTimeChanging(int value);
    partial void OnDefaultCacheTimeChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public ModuleDefinition()
		{
			this._ModuleControls = new EntitySet<ModuleControl>(new Action<ModuleControl>(this.attach_ModuleControls), new Action<ModuleControl>(this.detach_ModuleControls));
			this._Modules = new EntitySet<Module>(new Action<Module>(this.attach_Modules), new Action<Module>(this.detach_Modules));
			this._DesktopModule = default(EntityRef<DesktopModule>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleDefID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ModuleDefID
		{
			get
			{
				return this._ModuleDefID;
			}
			set
			{
				if ((this._ModuleDefID != value))
				{
					this.OnModuleDefIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleDefID = value;
					this.SendPropertyChanged("ModuleDefID");
					this.OnModuleDefIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FriendlyName", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string FriendlyName
		{
			get
			{
				return this._FriendlyName;
			}
			set
			{
				if ((this._FriendlyName != value))
				{
					this.OnFriendlyNameChanging(value);
					this.SendPropertyChanging();
					this._FriendlyName = value;
					this.SendPropertyChanged("FriendlyName");
					this.OnFriendlyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesktopModuleID", DbType="Int NOT NULL")]
		public int DesktopModuleID
		{
			get
			{
				return this._DesktopModuleID;
			}
			set
			{
				if ((this._DesktopModuleID != value))
				{
					if (this._DesktopModule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDesktopModuleIDChanging(value);
					this.SendPropertyChanging();
					this._DesktopModuleID = value;
					this.SendPropertyChanged("DesktopModuleID");
					this.OnDesktopModuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultCacheTime", DbType="Int NOT NULL")]
		public int DefaultCacheTime
		{
			get
			{
				return this._DefaultCacheTime;
			}
			set
			{
				if ((this._DefaultCacheTime != value))
				{
					this.OnDefaultCacheTimeChanging(value);
					this.SendPropertyChanging();
					this._DefaultCacheTime = value;
					this.SendPropertyChanged("DefaultCacheTime");
					this.OnDefaultCacheTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ModuleDefinition_ModuleControl", Storage="_ModuleControls", ThisKey="ModuleDefID", OtherKey="ModuleDefID")]
		public EntitySet<ModuleControl> ModuleControls
		{
			get
			{
				return this._ModuleControls;
			}
			set
			{
				this._ModuleControls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ModuleDefinition_Module", Storage="_Modules", ThisKey="ModuleDefID", OtherKey="ModuleDefID")]
		public EntitySet<Module> Modules
		{
			get
			{
				return this._Modules;
			}
			set
			{
				this._Modules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DesktopModule_ModuleDefinition", Storage="_DesktopModule", ThisKey="DesktopModuleID", OtherKey="DesktopModuleID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public DesktopModule DesktopModule
		{
			get
			{
				return this._DesktopModule.Entity;
			}
			set
			{
				DesktopModule previousValue = this._DesktopModule.Entity;
				if (((previousValue != value) 
							|| (this._DesktopModule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DesktopModule.Entity = null;
						previousValue.ModuleDefinitions.Remove(this);
					}
					this._DesktopModule.Entity = value;
					if ((value != null))
					{
						value.ModuleDefinitions.Add(this);
						this._DesktopModuleID = value.DesktopModuleID;
					}
					else
					{
						this._DesktopModuleID = default(int);
					}
					this.SendPropertyChanged("DesktopModule");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ModuleControls(ModuleControl entity)
		{
			this.SendPropertyChanging();
			entity.ModuleDefinition = this;
		}
		
		private void detach_ModuleControls(ModuleControl entity)
		{
			this.SendPropertyChanging();
			entity.ModuleDefinition = null;
		}
		
		private void attach_Modules(Module entity)
		{
			this.SendPropertyChanging();
			entity.ModuleDefinition = this;
		}
		
		private void detach_Modules(Module entity)
		{
			this.SendPropertyChanging();
			entity.ModuleDefinition = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ModulePermission")]
	public partial class ModulePermission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ModulePermissionID;
		
		private int _ModuleID;
		
		private int _PermissionID;
		
		private bool _AllowAccess;
		
		private System.Nullable<int> _RoleID;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntityRef<Module> _Module;
		
		private EntityRef<Permission> _Permission;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModulePermissionIDChanging(int value);
    partial void OnModulePermissionIDChanged();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnPermissionIDChanging(int value);
    partial void OnPermissionIDChanged();
    partial void OnAllowAccessChanging(bool value);
    partial void OnAllowAccessChanged();
    partial void OnRoleIDChanging(System.Nullable<int> value);
    partial void OnRoleIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public ModulePermission()
		{
			this._Module = default(EntityRef<Module>);
			this._Permission = default(EntityRef<Permission>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModulePermissionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ModulePermissionID
		{
			get
			{
				return this._ModulePermissionID;
			}
			set
			{
				if ((this._ModulePermissionID != value))
				{
					this.OnModulePermissionIDChanging(value);
					this.SendPropertyChanging();
					this._ModulePermissionID = value;
					this.SendPropertyChanged("ModulePermissionID");
					this.OnModulePermissionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleID", DbType="Int NOT NULL")]
		public int ModuleID
		{
			get
			{
				return this._ModuleID;
			}
			set
			{
				if ((this._ModuleID != value))
				{
					if (this._Module.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionID", DbType="Int NOT NULL")]
		public int PermissionID
		{
			get
			{
				return this._PermissionID;
			}
			set
			{
				if ((this._PermissionID != value))
				{
					if (this._Permission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPermissionIDChanging(value);
					this.SendPropertyChanging();
					this._PermissionID = value;
					this.SendPropertyChanged("PermissionID");
					this.OnPermissionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowAccess", DbType="Bit NOT NULL")]
		public bool AllowAccess
		{
			get
			{
				return this._AllowAccess;
			}
			set
			{
				if ((this._AllowAccess != value))
				{
					this.OnAllowAccessChanging(value);
					this.SendPropertyChanging();
					this._AllowAccess = value;
					this.SendPropertyChanged("AllowAccess");
					this.OnAllowAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int")]
		public System.Nullable<int> RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Module_ModulePermission", Storage="_Module", ThisKey="ModuleID", OtherKey="ModuleID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Module Module
		{
			get
			{
				return this._Module.Entity;
			}
			set
			{
				Module previousValue = this._Module.Entity;
				if (((previousValue != value) 
							|| (this._Module.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Module.Entity = null;
						previousValue.ModulePermissions.Remove(this);
					}
					this._Module.Entity = value;
					if ((value != null))
					{
						value.ModulePermissions.Add(this);
						this._ModuleID = value.ModuleID;
					}
					else
					{
						this._ModuleID = default(int);
					}
					this.SendPropertyChanged("Module");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permission_ModulePermission", Storage="_Permission", ThisKey="PermissionID", OtherKey="PermissionID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Permission Permission
		{
			get
			{
				return this._Permission.Entity;
			}
			set
			{
				Permission previousValue = this._Permission.Entity;
				if (((previousValue != value) 
							|| (this._Permission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Permission.Entity = null;
						previousValue.ModulePermissions.Remove(this);
					}
					this._Permission.Entity = value;
					if ((value != null))
					{
						value.ModulePermissions.Add(this);
						this._PermissionID = value.PermissionID;
					}
					else
					{
						this._PermissionID = default(int);
					}
					this.SendPropertyChanged("Permission");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ModulePermission", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ModulePermissions.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ModulePermissions.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Modules")]
	public partial class Module : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ModuleID;
		
		private int _ModuleDefID;
		
		private bool _AllTabs;
		
		private bool _IsDeleted;
		
		private System.Nullable<bool> _InheritViewPermissions;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<int> _PortalID;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private System.DateTime _LastContentModifiedOnDate;
		
		private System.Nullable<int> _ContentItemID;
		
		private EntitySet<HtmlText> _HtmlTexts;
		
		private EntitySet<Link> _Links;
		
		private EntitySet<ModulePermission> _ModulePermissions;
		
		private EntitySet<ModuleSetting> _ModuleSettings;
		
		private EntitySet<SearchItem> _SearchItems;
		
		private EntitySet<TabModule> _TabModules;
		
		private EntityRef<ContentItem> _ContentItem;
		
		private EntityRef<ModuleDefinition> _ModuleDefinition;
		
		private EntityRef<Portal> _Portal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnModuleDefIDChanging(int value);
    partial void OnModuleDefIDChanged();
    partial void OnAllTabsChanging(bool value);
    partial void OnAllTabsChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnInheritViewPermissionsChanging(System.Nullable<bool> value);
    partial void OnInheritViewPermissionsChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnPortalIDChanging(System.Nullable<int> value);
    partial void OnPortalIDChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    partial void OnLastContentModifiedOnDateChanging(System.DateTime value);
    partial void OnLastContentModifiedOnDateChanged();
    partial void OnContentItemIDChanging(System.Nullable<int> value);
    partial void OnContentItemIDChanged();
    #endregion
		
		public Module()
		{
			this._HtmlTexts = new EntitySet<HtmlText>(new Action<HtmlText>(this.attach_HtmlTexts), new Action<HtmlText>(this.detach_HtmlTexts));
			this._Links = new EntitySet<Link>(new Action<Link>(this.attach_Links), new Action<Link>(this.detach_Links));
			this._ModulePermissions = new EntitySet<ModulePermission>(new Action<ModulePermission>(this.attach_ModulePermissions), new Action<ModulePermission>(this.detach_ModulePermissions));
			this._ModuleSettings = new EntitySet<ModuleSetting>(new Action<ModuleSetting>(this.attach_ModuleSettings), new Action<ModuleSetting>(this.detach_ModuleSettings));
			this._SearchItems = new EntitySet<SearchItem>(new Action<SearchItem>(this.attach_SearchItems), new Action<SearchItem>(this.detach_SearchItems));
			this._TabModules = new EntitySet<TabModule>(new Action<TabModule>(this.attach_TabModules), new Action<TabModule>(this.detach_TabModules));
			this._ContentItem = default(EntityRef<ContentItem>);
			this._ModuleDefinition = default(EntityRef<ModuleDefinition>);
			this._Portal = default(EntityRef<Portal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ModuleID
		{
			get
			{
				return this._ModuleID;
			}
			set
			{
				if ((this._ModuleID != value))
				{
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleDefID", DbType="Int NOT NULL")]
		public int ModuleDefID
		{
			get
			{
				return this._ModuleDefID;
			}
			set
			{
				if ((this._ModuleDefID != value))
				{
					if (this._ModuleDefinition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleDefIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleDefID = value;
					this.SendPropertyChanged("ModuleDefID");
					this.OnModuleDefIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllTabs", DbType="Bit NOT NULL")]
		public bool AllTabs
		{
			get
			{
				return this._AllTabs;
			}
			set
			{
				if ((this._AllTabs != value))
				{
					this.OnAllTabsChanging(value);
					this.SendPropertyChanging();
					this._AllTabs = value;
					this.SendPropertyChanged("AllTabs");
					this.OnAllTabsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InheritViewPermissions", DbType="Bit")]
		public System.Nullable<bool> InheritViewPermissions
		{
			get
			{
				return this._InheritViewPermissions;
			}
			set
			{
				if ((this._InheritViewPermissions != value))
				{
					this.OnInheritViewPermissionsChanging(value);
					this.SendPropertyChanging();
					this._InheritViewPermissions = value;
					this.SendPropertyChanged("InheritViewPermissions");
					this.OnInheritViewPermissionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int")]
		public System.Nullable<int> PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					if (this._Portal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastContentModifiedOnDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastContentModifiedOnDate
		{
			get
			{
				return this._LastContentModifiedOnDate;
			}
			set
			{
				if ((this._LastContentModifiedOnDate != value))
				{
					this.OnLastContentModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastContentModifiedOnDate = value;
					this.SendPropertyChanged("LastContentModifiedOnDate");
					this.OnLastContentModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentItemID", DbType="Int")]
		public System.Nullable<int> ContentItemID
		{
			get
			{
				return this._ContentItemID;
			}
			set
			{
				if ((this._ContentItemID != value))
				{
					if (this._ContentItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContentItemIDChanging(value);
					this.SendPropertyChanging();
					this._ContentItemID = value;
					this.SendPropertyChanged("ContentItemID");
					this.OnContentItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Module_HtmlText", Storage="_HtmlTexts", ThisKey="ModuleID", OtherKey="ModuleID")]
		public EntitySet<HtmlText> HtmlTexts
		{
			get
			{
				return this._HtmlTexts;
			}
			set
			{
				this._HtmlTexts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Module_Link", Storage="_Links", ThisKey="ModuleID", OtherKey="ModuleID")]
		public EntitySet<Link> Links
		{
			get
			{
				return this._Links;
			}
			set
			{
				this._Links.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Module_ModulePermission", Storage="_ModulePermissions", ThisKey="ModuleID", OtherKey="ModuleID")]
		public EntitySet<ModulePermission> ModulePermissions
		{
			get
			{
				return this._ModulePermissions;
			}
			set
			{
				this._ModulePermissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Module_ModuleSetting", Storage="_ModuleSettings", ThisKey="ModuleID", OtherKey="ModuleID")]
		public EntitySet<ModuleSetting> ModuleSettings
		{
			get
			{
				return this._ModuleSettings;
			}
			set
			{
				this._ModuleSettings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Module_SearchItem", Storage="_SearchItems", ThisKey="ModuleID", OtherKey="ModuleId")]
		public EntitySet<SearchItem> SearchItems
		{
			get
			{
				return this._SearchItems;
			}
			set
			{
				this._SearchItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Module_TabModule", Storage="_TabModules", ThisKey="ModuleID", OtherKey="ModuleID")]
		public EntitySet<TabModule> TabModules
		{
			get
			{
				return this._TabModules;
			}
			set
			{
				this._TabModules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContentItem_Module", Storage="_ContentItem", ThisKey="ContentItemID", OtherKey="ContentItemID", IsForeignKey=true)]
		public ContentItem ContentItem
		{
			get
			{
				return this._ContentItem.Entity;
			}
			set
			{
				ContentItem previousValue = this._ContentItem.Entity;
				if (((previousValue != value) 
							|| (this._ContentItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContentItem.Entity = null;
						previousValue.Modules.Remove(this);
					}
					this._ContentItem.Entity = value;
					if ((value != null))
					{
						value.Modules.Add(this);
						this._ContentItemID = value.ContentItemID;
					}
					else
					{
						this._ContentItemID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ContentItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ModuleDefinition_Module", Storage="_ModuleDefinition", ThisKey="ModuleDefID", OtherKey="ModuleDefID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ModuleDefinition ModuleDefinition
		{
			get
			{
				return this._ModuleDefinition.Entity;
			}
			set
			{
				ModuleDefinition previousValue = this._ModuleDefinition.Entity;
				if (((previousValue != value) 
							|| (this._ModuleDefinition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ModuleDefinition.Entity = null;
						previousValue.Modules.Remove(this);
					}
					this._ModuleDefinition.Entity = value;
					if ((value != null))
					{
						value.Modules.Add(this);
						this._ModuleDefID = value.ModuleDefID;
					}
					else
					{
						this._ModuleDefID = default(int);
					}
					this.SendPropertyChanged("ModuleDefinition");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Portal_Module", Storage="_Portal", ThisKey="PortalID", OtherKey="PortalID", IsForeignKey=true)]
		public Portal Portal
		{
			get
			{
				return this._Portal.Entity;
			}
			set
			{
				Portal previousValue = this._Portal.Entity;
				if (((previousValue != value) 
							|| (this._Portal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Portal.Entity = null;
						previousValue.Modules.Remove(this);
					}
					this._Portal.Entity = value;
					if ((value != null))
					{
						value.Modules.Add(this);
						this._PortalID = value.PortalID;
					}
					else
					{
						this._PortalID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Portal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HtmlTexts(HtmlText entity)
		{
			this.SendPropertyChanging();
			entity.Module = this;
		}
		
		private void detach_HtmlTexts(HtmlText entity)
		{
			this.SendPropertyChanging();
			entity.Module = null;
		}
		
		private void attach_Links(Link entity)
		{
			this.SendPropertyChanging();
			entity.Module = this;
		}
		
		private void detach_Links(Link entity)
		{
			this.SendPropertyChanging();
			entity.Module = null;
		}
		
		private void attach_ModulePermissions(ModulePermission entity)
		{
			this.SendPropertyChanging();
			entity.Module = this;
		}
		
		private void detach_ModulePermissions(ModulePermission entity)
		{
			this.SendPropertyChanging();
			entity.Module = null;
		}
		
		private void attach_ModuleSettings(ModuleSetting entity)
		{
			this.SendPropertyChanging();
			entity.Module = this;
		}
		
		private void detach_ModuleSettings(ModuleSetting entity)
		{
			this.SendPropertyChanging();
			entity.Module = null;
		}
		
		private void attach_SearchItems(SearchItem entity)
		{
			this.SendPropertyChanging();
			entity.Module = this;
		}
		
		private void detach_SearchItems(SearchItem entity)
		{
			this.SendPropertyChanging();
			entity.Module = null;
		}
		
		private void attach_TabModules(TabModule entity)
		{
			this.SendPropertyChanging();
			entity.Module = this;
		}
		
		private void detach_TabModules(TabModule entity)
		{
			this.SendPropertyChanging();
			entity.Module = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ModuleSettings")]
	public partial class ModuleSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ModuleID;
		
		private string _SettingName;
		
		private string _SettingValue;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntityRef<Module> _Module;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnSettingNameChanging(string value);
    partial void OnSettingNameChanged();
    partial void OnSettingValueChanging(string value);
    partial void OnSettingValueChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public ModuleSetting()
		{
			this._Module = default(EntityRef<Module>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ModuleID
		{
			get
			{
				return this._ModuleID;
			}
			set
			{
				if ((this._ModuleID != value))
				{
					if (this._Module.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SettingName
		{
			get
			{
				return this._SettingName;
			}
			set
			{
				if ((this._SettingName != value))
				{
					this.OnSettingNameChanging(value);
					this.SendPropertyChanging();
					this._SettingName = value;
					this.SendPropertyChanged("SettingName");
					this.OnSettingNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingValue", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string SettingValue
		{
			get
			{
				return this._SettingValue;
			}
			set
			{
				if ((this._SettingValue != value))
				{
					this.OnSettingValueChanging(value);
					this.SendPropertyChanging();
					this._SettingValue = value;
					this.SendPropertyChanged("SettingValue");
					this.OnSettingValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Module_ModuleSetting", Storage="_Module", ThisKey="ModuleID", OtherKey="ModuleID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Module Module
		{
			get
			{
				return this._Module.Entity;
			}
			set
			{
				Module previousValue = this._Module.Entity;
				if (((previousValue != value) 
							|| (this._Module.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Module.Entity = null;
						previousValue.ModuleSettings.Remove(this);
					}
					this._Module.Entity = value;
					if ((value != null))
					{
						value.ModuleSettings.Add(this);
						this._ModuleID = value.ModuleID;
					}
					else
					{
						this._ModuleID = default(int);
					}
					this.SendPropertyChanged("Module");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Packages")]
	public partial class Package : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PackageID;
		
		private System.Nullable<int> _PortalID;
		
		private string _Name;
		
		private string _FriendlyName;
		
		private string _Description;
		
		private string _PackageType;
		
		private string _Version;
		
		private string _License;
		
		private string _Manifest;
		
		private string _Owner;
		
		private string _Organization;
		
		private string _Url;
		
		private string _Email;
		
		private string _ReleaseNotes;
		
		private bool _IsSystemPackage;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private string _FolderName;
		
		private string _IconFile;
		
		private EntitySet<Assembly> _Assemblies;
		
		private EntitySet<Authentication> _Authentications;
		
		private EntitySet<Dashboard_Control> _Dashboard_Controls;
		
		private EntitySet<DesktopModule> _DesktopModules;
		
		private EntitySet<LanguagePack> _LanguagePacks;
		
		private EntitySet<SkinControl> _SkinControls;
		
		private EntitySet<SkinPackage> _SkinPackages;
		
		private EntityRef<PackageType> _PackageType1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPackageIDChanging(int value);
    partial void OnPackageIDChanged();
    partial void OnPortalIDChanging(System.Nullable<int> value);
    partial void OnPortalIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFriendlyNameChanging(string value);
    partial void OnFriendlyNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPackageTypeChanging(string value);
    partial void OnPackageTypeChanged();
    partial void OnVersionChanging(string value);
    partial void OnVersionChanged();
    partial void OnLicenseChanging(string value);
    partial void OnLicenseChanged();
    partial void OnManifestChanging(string value);
    partial void OnManifestChanged();
    partial void OnOwnerChanging(string value);
    partial void OnOwnerChanged();
    partial void OnOrganizationChanging(string value);
    partial void OnOrganizationChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnReleaseNotesChanging(string value);
    partial void OnReleaseNotesChanged();
    partial void OnIsSystemPackageChanging(bool value);
    partial void OnIsSystemPackageChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    partial void OnFolderNameChanging(string value);
    partial void OnFolderNameChanged();
    partial void OnIconFileChanging(string value);
    partial void OnIconFileChanged();
    #endregion
		
		public Package()
		{
			this._Assemblies = new EntitySet<Assembly>(new Action<Assembly>(this.attach_Assemblies), new Action<Assembly>(this.detach_Assemblies));
			this._Authentications = new EntitySet<Authentication>(new Action<Authentication>(this.attach_Authentications), new Action<Authentication>(this.detach_Authentications));
			this._Dashboard_Controls = new EntitySet<Dashboard_Control>(new Action<Dashboard_Control>(this.attach_Dashboard_Controls), new Action<Dashboard_Control>(this.detach_Dashboard_Controls));
			this._DesktopModules = new EntitySet<DesktopModule>(new Action<DesktopModule>(this.attach_DesktopModules), new Action<DesktopModule>(this.detach_DesktopModules));
			this._LanguagePacks = new EntitySet<LanguagePack>(new Action<LanguagePack>(this.attach_LanguagePacks), new Action<LanguagePack>(this.detach_LanguagePacks));
			this._SkinControls = new EntitySet<SkinControl>(new Action<SkinControl>(this.attach_SkinControls), new Action<SkinControl>(this.detach_SkinControls));
			this._SkinPackages = new EntitySet<SkinPackage>(new Action<SkinPackage>(this.attach_SkinPackages), new Action<SkinPackage>(this.detach_SkinPackages));
			this._PackageType1 = default(EntityRef<PackageType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PackageID
		{
			get
			{
				return this._PackageID;
			}
			set
			{
				if ((this._PackageID != value))
				{
					this.OnPackageIDChanging(value);
					this.SendPropertyChanging();
					this._PackageID = value;
					this.SendPropertyChanged("PackageID");
					this.OnPackageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int")]
		public System.Nullable<int> PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FriendlyName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string FriendlyName
		{
			get
			{
				return this._FriendlyName;
			}
			set
			{
				if ((this._FriendlyName != value))
				{
					this.OnFriendlyNameChanging(value);
					this.SendPropertyChanging();
					this._FriendlyName = value;
					this.SendPropertyChanged("FriendlyName");
					this.OnFriendlyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(2000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageType", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string PackageType
		{
			get
			{
				return this._PackageType;
			}
			set
			{
				if ((this._PackageType != value))
				{
					if (this._PackageType1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPackageTypeChanging(value);
					this.SendPropertyChanging();
					this._PackageType = value;
					this.SendPropertyChanged("PackageType");
					this.OnPackageTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_License", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string License
		{
			get
			{
				return this._License;
			}
			set
			{
				if ((this._License != value))
				{
					this.OnLicenseChanging(value);
					this.SendPropertyChanging();
					this._License = value;
					this.SendPropertyChanged("License");
					this.OnLicenseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manifest", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Manifest
		{
			get
			{
				return this._Manifest;
			}
			set
			{
				if ((this._Manifest != value))
				{
					this.OnManifestChanging(value);
					this.SendPropertyChanging();
					this._Manifest = value;
					this.SendPropertyChanged("Manifest");
					this.OnManifestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="NVarChar(100)")]
		public string Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Organization", DbType="NVarChar(100)")]
		public string Organization
		{
			get
			{
				return this._Organization;
			}
			set
			{
				if ((this._Organization != value))
				{
					this.OnOrganizationChanging(value);
					this.SendPropertyChanging();
					this._Organization = value;
					this.SendPropertyChanged("Organization");
					this.OnOrganizationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(250)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReleaseNotes", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ReleaseNotes
		{
			get
			{
				return this._ReleaseNotes;
			}
			set
			{
				if ((this._ReleaseNotes != value))
				{
					this.OnReleaseNotesChanging(value);
					this.SendPropertyChanging();
					this._ReleaseNotes = value;
					this.SendPropertyChanged("ReleaseNotes");
					this.OnReleaseNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSystemPackage", DbType="Bit NOT NULL")]
		public bool IsSystemPackage
		{
			get
			{
				return this._IsSystemPackage;
			}
			set
			{
				if ((this._IsSystemPackage != value))
				{
					this.OnIsSystemPackageChanging(value);
					this.SendPropertyChanging();
					this._IsSystemPackage = value;
					this.SendPropertyChanged("IsSystemPackage");
					this.OnIsSystemPackageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FolderName", DbType="NVarChar(128)")]
		public string FolderName
		{
			get
			{
				return this._FolderName;
			}
			set
			{
				if ((this._FolderName != value))
				{
					this.OnFolderNameChanging(value);
					this.SendPropertyChanging();
					this._FolderName = value;
					this.SendPropertyChanged("FolderName");
					this.OnFolderNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IconFile", DbType="NVarChar(100)")]
		public string IconFile
		{
			get
			{
				return this._IconFile;
			}
			set
			{
				if ((this._IconFile != value))
				{
					this.OnIconFileChanging(value);
					this.SendPropertyChanging();
					this._IconFile = value;
					this.SendPropertyChanged("IconFile");
					this.OnIconFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Package_Assembly", Storage="_Assemblies", ThisKey="PackageID", OtherKey="PackageID")]
		public EntitySet<Assembly> Assemblies
		{
			get
			{
				return this._Assemblies;
			}
			set
			{
				this._Assemblies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Package_Authentication", Storage="_Authentications", ThisKey="PackageID", OtherKey="PackageID")]
		public EntitySet<Authentication> Authentications
		{
			get
			{
				return this._Authentications;
			}
			set
			{
				this._Authentications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Package_Dashboard_Control", Storage="_Dashboard_Controls", ThisKey="PackageID", OtherKey="PackageID")]
		public EntitySet<Dashboard_Control> Dashboard_Controls
		{
			get
			{
				return this._Dashboard_Controls;
			}
			set
			{
				this._Dashboard_Controls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Package_DesktopModule", Storage="_DesktopModules", ThisKey="PackageID", OtherKey="PackageID")]
		public EntitySet<DesktopModule> DesktopModules
		{
			get
			{
				return this._DesktopModules;
			}
			set
			{
				this._DesktopModules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Package_LanguagePack", Storage="_LanguagePacks", ThisKey="PackageID", OtherKey="PackageID")]
		public EntitySet<LanguagePack> LanguagePacks
		{
			get
			{
				return this._LanguagePacks;
			}
			set
			{
				this._LanguagePacks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Package_SkinControl", Storage="_SkinControls", ThisKey="PackageID", OtherKey="PackageID")]
		public EntitySet<SkinControl> SkinControls
		{
			get
			{
				return this._SkinControls;
			}
			set
			{
				this._SkinControls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Package_SkinPackage", Storage="_SkinPackages", ThisKey="PackageID", OtherKey="PackageID")]
		public EntitySet<SkinPackage> SkinPackages
		{
			get
			{
				return this._SkinPackages;
			}
			set
			{
				this._SkinPackages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PackageType_Package", Storage="_PackageType1", ThisKey="PackageType", OtherKey="PackageType1", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PackageType PackageType1
		{
			get
			{
				return this._PackageType1.Entity;
			}
			set
			{
				PackageType previousValue = this._PackageType1.Entity;
				if (((previousValue != value) 
							|| (this._PackageType1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PackageType1.Entity = null;
						previousValue.Packages.Remove(this);
					}
					this._PackageType1.Entity = value;
					if ((value != null))
					{
						value.Packages.Add(this);
						this._PackageType = value.PackageType1;
					}
					else
					{
						this._PackageType = default(string);
					}
					this.SendPropertyChanged("PackageType1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Assemblies(Assembly entity)
		{
			this.SendPropertyChanging();
			entity.Package = this;
		}
		
		private void detach_Assemblies(Assembly entity)
		{
			this.SendPropertyChanging();
			entity.Package = null;
		}
		
		private void attach_Authentications(Authentication entity)
		{
			this.SendPropertyChanging();
			entity.Package = this;
		}
		
		private void detach_Authentications(Authentication entity)
		{
			this.SendPropertyChanging();
			entity.Package = null;
		}
		
		private void attach_Dashboard_Controls(Dashboard_Control entity)
		{
			this.SendPropertyChanging();
			entity.Package = this;
		}
		
		private void detach_Dashboard_Controls(Dashboard_Control entity)
		{
			this.SendPropertyChanging();
			entity.Package = null;
		}
		
		private void attach_DesktopModules(DesktopModule entity)
		{
			this.SendPropertyChanging();
			entity.Package = this;
		}
		
		private void detach_DesktopModules(DesktopModule entity)
		{
			this.SendPropertyChanging();
			entity.Package = null;
		}
		
		private void attach_LanguagePacks(LanguagePack entity)
		{
			this.SendPropertyChanging();
			entity.Package = this;
		}
		
		private void detach_LanguagePacks(LanguagePack entity)
		{
			this.SendPropertyChanging();
			entity.Package = null;
		}
		
		private void attach_SkinControls(SkinControl entity)
		{
			this.SendPropertyChanging();
			entity.Package = this;
		}
		
		private void detach_SkinControls(SkinControl entity)
		{
			this.SendPropertyChanging();
			entity.Package = null;
		}
		
		private void attach_SkinPackages(SkinPackage entity)
		{
			this.SendPropertyChanging();
			entity.Package = this;
		}
		
		private void detach_SkinPackages(SkinPackage entity)
		{
			this.SendPropertyChanging();
			entity.Package = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PackageTypes")]
	public partial class PackageType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PackageType1;
		
		private string _Description;
		
		private int _SecurityAccessLevel;
		
		private string _EditorControlSrc;
		
		private EntitySet<Package> _Packages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPackageType1Changing(string value);
    partial void OnPackageType1Changed();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnSecurityAccessLevelChanging(int value);
    partial void OnSecurityAccessLevelChanged();
    partial void OnEditorControlSrcChanging(string value);
    partial void OnEditorControlSrcChanged();
    #endregion
		
		public PackageType()
		{
			this._Packages = new EntitySet<Package>(new Action<Package>(this.attach_Packages), new Action<Package>(this.detach_Packages));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="PackageType", Storage="_PackageType1", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PackageType1
		{
			get
			{
				return this._PackageType1;
			}
			set
			{
				if ((this._PackageType1 != value))
				{
					this.OnPackageType1Changing(value);
					this.SendPropertyChanging();
					this._PackageType1 = value;
					this.SendPropertyChanged("PackageType1");
					this.OnPackageType1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityAccessLevel", DbType="Int NOT NULL")]
		public int SecurityAccessLevel
		{
			get
			{
				return this._SecurityAccessLevel;
			}
			set
			{
				if ((this._SecurityAccessLevel != value))
				{
					this.OnSecurityAccessLevelChanging(value);
					this.SendPropertyChanging();
					this._SecurityAccessLevel = value;
					this.SendPropertyChanged("SecurityAccessLevel");
					this.OnSecurityAccessLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditorControlSrc", DbType="NVarChar(250)")]
		public string EditorControlSrc
		{
			get
			{
				return this._EditorControlSrc;
			}
			set
			{
				if ((this._EditorControlSrc != value))
				{
					this.OnEditorControlSrcChanging(value);
					this.SendPropertyChanging();
					this._EditorControlSrc = value;
					this.SendPropertyChanged("EditorControlSrc");
					this.OnEditorControlSrcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PackageType_Package", Storage="_Packages", ThisKey="PackageType1", OtherKey="PackageType")]
		public EntitySet<Package> Packages
		{
			get
			{
				return this._Packages;
			}
			set
			{
				this._Packages.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Packages(Package entity)
		{
			this.SendPropertyChanging();
			entity.PackageType1 = this;
		}
		
		private void detach_Packages(Package entity)
		{
			this.SendPropertyChanging();
			entity.PackageType1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Permission")]
	public partial class Permission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PermissionID;
		
		private string _PermissionCode;
		
		private int _ModuleDefID;
		
		private string _PermissionKey;
		
		private string _PermissionName;
		
		private int _ViewOrder;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntitySet<DesktopModulePermission> _DesktopModulePermissions;
		
		private EntitySet<FolderPermission> _FolderPermissions;
		
		private EntitySet<ModulePermission> _ModulePermissions;
		
		private EntitySet<TabPermission> _TabPermissions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPermissionIDChanging(int value);
    partial void OnPermissionIDChanged();
    partial void OnPermissionCodeChanging(string value);
    partial void OnPermissionCodeChanged();
    partial void OnModuleDefIDChanging(int value);
    partial void OnModuleDefIDChanged();
    partial void OnPermissionKeyChanging(string value);
    partial void OnPermissionKeyChanged();
    partial void OnPermissionNameChanging(string value);
    partial void OnPermissionNameChanged();
    partial void OnViewOrderChanging(int value);
    partial void OnViewOrderChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public Permission()
		{
			this._DesktopModulePermissions = new EntitySet<DesktopModulePermission>(new Action<DesktopModulePermission>(this.attach_DesktopModulePermissions), new Action<DesktopModulePermission>(this.detach_DesktopModulePermissions));
			this._FolderPermissions = new EntitySet<FolderPermission>(new Action<FolderPermission>(this.attach_FolderPermissions), new Action<FolderPermission>(this.detach_FolderPermissions));
			this._ModulePermissions = new EntitySet<ModulePermission>(new Action<ModulePermission>(this.attach_ModulePermissions), new Action<ModulePermission>(this.detach_ModulePermissions));
			this._TabPermissions = new EntitySet<TabPermission>(new Action<TabPermission>(this.attach_TabPermissions), new Action<TabPermission>(this.detach_TabPermissions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PermissionID
		{
			get
			{
				return this._PermissionID;
			}
			set
			{
				if ((this._PermissionID != value))
				{
					this.OnPermissionIDChanging(value);
					this.SendPropertyChanging();
					this._PermissionID = value;
					this.SendPropertyChanged("PermissionID");
					this.OnPermissionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PermissionCode
		{
			get
			{
				return this._PermissionCode;
			}
			set
			{
				if ((this._PermissionCode != value))
				{
					this.OnPermissionCodeChanging(value);
					this.SendPropertyChanging();
					this._PermissionCode = value;
					this.SendPropertyChanged("PermissionCode");
					this.OnPermissionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleDefID", DbType="Int NOT NULL")]
		public int ModuleDefID
		{
			get
			{
				return this._ModuleDefID;
			}
			set
			{
				if ((this._ModuleDefID != value))
				{
					this.OnModuleDefIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleDefID = value;
					this.SendPropertyChanged("ModuleDefID");
					this.OnModuleDefIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionKey", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PermissionKey
		{
			get
			{
				return this._PermissionKey;
			}
			set
			{
				if ((this._PermissionKey != value))
				{
					this.OnPermissionKeyChanging(value);
					this.SendPropertyChanging();
					this._PermissionKey = value;
					this.SendPropertyChanged("PermissionKey");
					this.OnPermissionKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PermissionName
		{
			get
			{
				return this._PermissionName;
			}
			set
			{
				if ((this._PermissionName != value))
				{
					this.OnPermissionNameChanging(value);
					this.SendPropertyChanging();
					this._PermissionName = value;
					this.SendPropertyChanged("PermissionName");
					this.OnPermissionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewOrder", DbType="Int NOT NULL")]
		public int ViewOrder
		{
			get
			{
				return this._ViewOrder;
			}
			set
			{
				if ((this._ViewOrder != value))
				{
					this.OnViewOrderChanging(value);
					this.SendPropertyChanging();
					this._ViewOrder = value;
					this.SendPropertyChanged("ViewOrder");
					this.OnViewOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permission_DesktopModulePermission", Storage="_DesktopModulePermissions", ThisKey="PermissionID", OtherKey="PermissionID")]
		public EntitySet<DesktopModulePermission> DesktopModulePermissions
		{
			get
			{
				return this._DesktopModulePermissions;
			}
			set
			{
				this._DesktopModulePermissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permission_FolderPermission", Storage="_FolderPermissions", ThisKey="PermissionID", OtherKey="PermissionID")]
		public EntitySet<FolderPermission> FolderPermissions
		{
			get
			{
				return this._FolderPermissions;
			}
			set
			{
				this._FolderPermissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permission_ModulePermission", Storage="_ModulePermissions", ThisKey="PermissionID", OtherKey="PermissionID")]
		public EntitySet<ModulePermission> ModulePermissions
		{
			get
			{
				return this._ModulePermissions;
			}
			set
			{
				this._ModulePermissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permission_TabPermission", Storage="_TabPermissions", ThisKey="PermissionID", OtherKey="PermissionID")]
		public EntitySet<TabPermission> TabPermissions
		{
			get
			{
				return this._TabPermissions;
			}
			set
			{
				this._TabPermissions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DesktopModulePermissions(DesktopModulePermission entity)
		{
			this.SendPropertyChanging();
			entity.Permission = this;
		}
		
		private void detach_DesktopModulePermissions(DesktopModulePermission entity)
		{
			this.SendPropertyChanging();
			entity.Permission = null;
		}
		
		private void attach_FolderPermissions(FolderPermission entity)
		{
			this.SendPropertyChanging();
			entity.Permission = this;
		}
		
		private void detach_FolderPermissions(FolderPermission entity)
		{
			this.SendPropertyChanging();
			entity.Permission = null;
		}
		
		private void attach_ModulePermissions(ModulePermission entity)
		{
			this.SendPropertyChanging();
			entity.Permission = this;
		}
		
		private void detach_ModulePermissions(ModulePermission entity)
		{
			this.SendPropertyChanging();
			entity.Permission = null;
		}
		
		private void attach_TabPermissions(TabPermission entity)
		{
			this.SendPropertyChanging();
			entity.Permission = this;
		}
		
		private void detach_TabPermissions(TabPermission entity)
		{
			this.SendPropertyChanging();
			entity.Permission = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PortalAlias")]
	public partial class PortalAlia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PortalAliasID;
		
		private int _PortalID;
		
		private string _HTTPAlias;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntityRef<Portal> _Portal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPortalAliasIDChanging(int value);
    partial void OnPortalAliasIDChanged();
    partial void OnPortalIDChanging(int value);
    partial void OnPortalIDChanged();
    partial void OnHTTPAliasChanging(string value);
    partial void OnHTTPAliasChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public PortalAlia()
		{
			this._Portal = default(EntityRef<Portal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalAliasID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PortalAliasID
		{
			get
			{
				return this._PortalAliasID;
			}
			set
			{
				if ((this._PortalAliasID != value))
				{
					this.OnPortalAliasIDChanging(value);
					this.SendPropertyChanging();
					this._PortalAliasID = value;
					this.SendPropertyChanged("PortalAliasID");
					this.OnPortalAliasIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int NOT NULL")]
		public int PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					if (this._Portal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HTTPAlias", DbType="NVarChar(200)")]
		public string HTTPAlias
		{
			get
			{
				return this._HTTPAlias;
			}
			set
			{
				if ((this._HTTPAlias != value))
				{
					this.OnHTTPAliasChanging(value);
					this.SendPropertyChanging();
					this._HTTPAlias = value;
					this.SendPropertyChanged("HTTPAlias");
					this.OnHTTPAliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Portal_PortalAlia", Storage="_Portal", ThisKey="PortalID", OtherKey="PortalID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Portal Portal
		{
			get
			{
				return this._Portal.Entity;
			}
			set
			{
				Portal previousValue = this._Portal.Entity;
				if (((previousValue != value) 
							|| (this._Portal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Portal.Entity = null;
						previousValue.PortalAlias.Remove(this);
					}
					this._Portal.Entity = value;
					if ((value != null))
					{
						value.PortalAlias.Add(this);
						this._PortalID = value.PortalID;
					}
					else
					{
						this._PortalID = default(int);
					}
					this.SendPropertyChanged("Portal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PortalDesktopModules")]
	public partial class PortalDesktopModule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PortalDesktopModuleID;
		
		private int _PortalID;
		
		private int _DesktopModuleID;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntitySet<DesktopModulePermission> _DesktopModulePermissions;
		
		private EntityRef<DesktopModule> _DesktopModule;
		
		private EntityRef<Portal> _Portal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPortalDesktopModuleIDChanging(int value);
    partial void OnPortalDesktopModuleIDChanged();
    partial void OnPortalIDChanging(int value);
    partial void OnPortalIDChanged();
    partial void OnDesktopModuleIDChanging(int value);
    partial void OnDesktopModuleIDChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public PortalDesktopModule()
		{
			this._DesktopModulePermissions = new EntitySet<DesktopModulePermission>(new Action<DesktopModulePermission>(this.attach_DesktopModulePermissions), new Action<DesktopModulePermission>(this.detach_DesktopModulePermissions));
			this._DesktopModule = default(EntityRef<DesktopModule>);
			this._Portal = default(EntityRef<Portal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalDesktopModuleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PortalDesktopModuleID
		{
			get
			{
				return this._PortalDesktopModuleID;
			}
			set
			{
				if ((this._PortalDesktopModuleID != value))
				{
					this.OnPortalDesktopModuleIDChanging(value);
					this.SendPropertyChanging();
					this._PortalDesktopModuleID = value;
					this.SendPropertyChanged("PortalDesktopModuleID");
					this.OnPortalDesktopModuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int NOT NULL")]
		public int PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					if (this._Portal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesktopModuleID", DbType="Int NOT NULL")]
		public int DesktopModuleID
		{
			get
			{
				return this._DesktopModuleID;
			}
			set
			{
				if ((this._DesktopModuleID != value))
				{
					if (this._DesktopModule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDesktopModuleIDChanging(value);
					this.SendPropertyChanging();
					this._DesktopModuleID = value;
					this.SendPropertyChanged("DesktopModuleID");
					this.OnDesktopModuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PortalDesktopModule_DesktopModulePermission", Storage="_DesktopModulePermissions", ThisKey="PortalDesktopModuleID", OtherKey="PortalDesktopModuleID")]
		public EntitySet<DesktopModulePermission> DesktopModulePermissions
		{
			get
			{
				return this._DesktopModulePermissions;
			}
			set
			{
				this._DesktopModulePermissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DesktopModule_PortalDesktopModule", Storage="_DesktopModule", ThisKey="DesktopModuleID", OtherKey="DesktopModuleID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public DesktopModule DesktopModule
		{
			get
			{
				return this._DesktopModule.Entity;
			}
			set
			{
				DesktopModule previousValue = this._DesktopModule.Entity;
				if (((previousValue != value) 
							|| (this._DesktopModule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DesktopModule.Entity = null;
						previousValue.PortalDesktopModules.Remove(this);
					}
					this._DesktopModule.Entity = value;
					if ((value != null))
					{
						value.PortalDesktopModules.Add(this);
						this._DesktopModuleID = value.DesktopModuleID;
					}
					else
					{
						this._DesktopModuleID = default(int);
					}
					this.SendPropertyChanged("DesktopModule");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Portal_PortalDesktopModule", Storage="_Portal", ThisKey="PortalID", OtherKey="PortalID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Portal Portal
		{
			get
			{
				return this._Portal.Entity;
			}
			set
			{
				Portal previousValue = this._Portal.Entity;
				if (((previousValue != value) 
							|| (this._Portal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Portal.Entity = null;
						previousValue.PortalDesktopModules.Remove(this);
					}
					this._Portal.Entity = value;
					if ((value != null))
					{
						value.PortalDesktopModules.Add(this);
						this._PortalID = value.PortalID;
					}
					else
					{
						this._PortalID = default(int);
					}
					this.SendPropertyChanged("Portal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DesktopModulePermissions(DesktopModulePermission entity)
		{
			this.SendPropertyChanging();
			entity.PortalDesktopModule = this;
		}
		
		private void detach_DesktopModulePermissions(DesktopModulePermission entity)
		{
			this.SendPropertyChanging();
			entity.PortalDesktopModule = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PortalGroups")]
	public partial class PortalGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PortalGroupID;
		
		private System.Nullable<int> _MasterPortalID;
		
		private string _PortalGroupName;
		
		private string _PortalGroupDescription;
		
		private string _AuthenticationDomain;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPortalGroupIDChanging(int value);
    partial void OnPortalGroupIDChanged();
    partial void OnMasterPortalIDChanging(System.Nullable<int> value);
    partial void OnMasterPortalIDChanged();
    partial void OnPortalGroupNameChanging(string value);
    partial void OnPortalGroupNameChanged();
    partial void OnPortalGroupDescriptionChanging(string value);
    partial void OnPortalGroupDescriptionChanged();
    partial void OnAuthenticationDomainChanging(string value);
    partial void OnAuthenticationDomainChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public PortalGroup()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalGroupID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PortalGroupID
		{
			get
			{
				return this._PortalGroupID;
			}
			set
			{
				if ((this._PortalGroupID != value))
				{
					this.OnPortalGroupIDChanging(value);
					this.SendPropertyChanging();
					this._PortalGroupID = value;
					this.SendPropertyChanged("PortalGroupID");
					this.OnPortalGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MasterPortalID", DbType="Int")]
		public System.Nullable<int> MasterPortalID
		{
			get
			{
				return this._MasterPortalID;
			}
			set
			{
				if ((this._MasterPortalID != value))
				{
					this.OnMasterPortalIDChanging(value);
					this.SendPropertyChanging();
					this._MasterPortalID = value;
					this.SendPropertyChanged("MasterPortalID");
					this.OnMasterPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalGroupName", DbType="NVarChar(100)")]
		public string PortalGroupName
		{
			get
			{
				return this._PortalGroupName;
			}
			set
			{
				if ((this._PortalGroupName != value))
				{
					this.OnPortalGroupNameChanging(value);
					this.SendPropertyChanging();
					this._PortalGroupName = value;
					this.SendPropertyChanged("PortalGroupName");
					this.OnPortalGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalGroupDescription", DbType="NVarChar(2000)")]
		public string PortalGroupDescription
		{
			get
			{
				return this._PortalGroupDescription;
			}
			set
			{
				if ((this._PortalGroupDescription != value))
				{
					this.OnPortalGroupDescriptionChanging(value);
					this.SendPropertyChanging();
					this._PortalGroupDescription = value;
					this.SendPropertyChanged("PortalGroupDescription");
					this.OnPortalGroupDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthenticationDomain", DbType="NVarChar(200)")]
		public string AuthenticationDomain
		{
			get
			{
				return this._AuthenticationDomain;
			}
			set
			{
				if ((this._AuthenticationDomain != value))
				{
					this.OnAuthenticationDomainChanging(value);
					this.SendPropertyChanging();
					this._AuthenticationDomain = value;
					this.SendPropertyChanged("AuthenticationDomain");
					this.OnAuthenticationDomainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PortalLanguages")]
	public partial class PortalLanguage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PortalLanguageID;
		
		private int _PortalID;
		
		private int _LanguageID;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private bool _IsPublished;
		
		private EntityRef<Language> _Language;
		
		private EntityRef<Portal> _Portal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPortalLanguageIDChanging(int value);
    partial void OnPortalLanguageIDChanged();
    partial void OnPortalIDChanging(int value);
    partial void OnPortalIDChanged();
    partial void OnLanguageIDChanging(int value);
    partial void OnLanguageIDChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    partial void OnIsPublishedChanging(bool value);
    partial void OnIsPublishedChanged();
    #endregion
		
		public PortalLanguage()
		{
			this._Language = default(EntityRef<Language>);
			this._Portal = default(EntityRef<Portal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalLanguageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PortalLanguageID
		{
			get
			{
				return this._PortalLanguageID;
			}
			set
			{
				if ((this._PortalLanguageID != value))
				{
					this.OnPortalLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._PortalLanguageID = value;
					this.SendPropertyChanged("PortalLanguageID");
					this.OnPortalLanguageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int NOT NULL")]
		public int PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					if (this._Portal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", DbType="Int NOT NULL")]
		public int LanguageID
		{
			get
			{
				return this._LanguageID;
			}
			set
			{
				if ((this._LanguageID != value))
				{
					if (this._Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._LanguageID = value;
					this.SendPropertyChanged("LanguageID");
					this.OnLanguageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPublished", DbType="Bit NOT NULL")]
		public bool IsPublished
		{
			get
			{
				return this._IsPublished;
			}
			set
			{
				if ((this._IsPublished != value))
				{
					this.OnIsPublishedChanging(value);
					this.SendPropertyChanging();
					this._IsPublished = value;
					this.SendPropertyChanged("IsPublished");
					this.OnIsPublishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_PortalLanguage", Storage="_Language", ThisKey="LanguageID", OtherKey="LanguageID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Language Language
		{
			get
			{
				return this._Language.Entity;
			}
			set
			{
				Language previousValue = this._Language.Entity;
				if (((previousValue != value) 
							|| (this._Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Language.Entity = null;
						previousValue.PortalLanguages.Remove(this);
					}
					this._Language.Entity = value;
					if ((value != null))
					{
						value.PortalLanguages.Add(this);
						this._LanguageID = value.LanguageID;
					}
					else
					{
						this._LanguageID = default(int);
					}
					this.SendPropertyChanged("Language");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Portal_PortalLanguage", Storage="_Portal", ThisKey="PortalID", OtherKey="PortalID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Portal Portal
		{
			get
			{
				return this._Portal.Entity;
			}
			set
			{
				Portal previousValue = this._Portal.Entity;
				if (((previousValue != value) 
							|| (this._Portal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Portal.Entity = null;
						previousValue.PortalLanguages.Remove(this);
					}
					this._Portal.Entity = value;
					if ((value != null))
					{
						value.PortalLanguages.Add(this);
						this._PortalID = value.PortalID;
					}
					else
					{
						this._PortalID = default(int);
					}
					this.SendPropertyChanged("Portal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PortalLocalization")]
	public partial class PortalLocalization : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PortalID;
		
		private string _CultureCode;
		
		private string _PortalName;
		
		private string _LogoFile;
		
		private string _FooterText;
		
		private string _Description;
		
		private string _KeyWords;
		
		private string _BackgroundFile;
		
		private System.Nullable<int> _HomeTabId;
		
		private System.Nullable<int> _LoginTabId;
		
		private System.Nullable<int> _UserTabId;
		
		private System.Nullable<int> _AdminTabId;
		
		private System.Nullable<int> _SplashTabId;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private System.Nullable<int> _RegisterTabId;
		
		private System.Nullable<int> _SearchTabId;
		
		private EntityRef<Portal> _Portal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPortalIDChanging(int value);
    partial void OnPortalIDChanged();
    partial void OnCultureCodeChanging(string value);
    partial void OnCultureCodeChanged();
    partial void OnPortalNameChanging(string value);
    partial void OnPortalNameChanged();
    partial void OnLogoFileChanging(string value);
    partial void OnLogoFileChanged();
    partial void OnFooterTextChanging(string value);
    partial void OnFooterTextChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnKeyWordsChanging(string value);
    partial void OnKeyWordsChanged();
    partial void OnBackgroundFileChanging(string value);
    partial void OnBackgroundFileChanged();
    partial void OnHomeTabIdChanging(System.Nullable<int> value);
    partial void OnHomeTabIdChanged();
    partial void OnLoginTabIdChanging(System.Nullable<int> value);
    partial void OnLoginTabIdChanged();
    partial void OnUserTabIdChanging(System.Nullable<int> value);
    partial void OnUserTabIdChanged();
    partial void OnAdminTabIdChanging(System.Nullable<int> value);
    partial void OnAdminTabIdChanged();
    partial void OnSplashTabIdChanging(System.Nullable<int> value);
    partial void OnSplashTabIdChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    partial void OnRegisterTabIdChanging(System.Nullable<int> value);
    partial void OnRegisterTabIdChanged();
    partial void OnSearchTabIdChanging(System.Nullable<int> value);
    partial void OnSearchTabIdChanged();
    #endregion
		
		public PortalLocalization()
		{
			this._Portal = default(EntityRef<Portal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					if (this._Portal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CultureCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CultureCode
		{
			get
			{
				return this._CultureCode;
			}
			set
			{
				if ((this._CultureCode != value))
				{
					this.OnCultureCodeChanging(value);
					this.SendPropertyChanging();
					this._CultureCode = value;
					this.SendPropertyChanged("CultureCode");
					this.OnCultureCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalName", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string PortalName
		{
			get
			{
				return this._PortalName;
			}
			set
			{
				if ((this._PortalName != value))
				{
					this.OnPortalNameChanging(value);
					this.SendPropertyChanging();
					this._PortalName = value;
					this.SendPropertyChanged("PortalName");
					this.OnPortalNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogoFile", DbType="NVarChar(50)")]
		public string LogoFile
		{
			get
			{
				return this._LogoFile;
			}
			set
			{
				if ((this._LogoFile != value))
				{
					this.OnLogoFileChanging(value);
					this.SendPropertyChanging();
					this._LogoFile = value;
					this.SendPropertyChanged("LogoFile");
					this.OnLogoFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FooterText", DbType="NVarChar(100)")]
		public string FooterText
		{
			get
			{
				return this._FooterText;
			}
			set
			{
				if ((this._FooterText != value))
				{
					this.OnFooterTextChanging(value);
					this.SendPropertyChanging();
					this._FooterText = value;
					this.SendPropertyChanged("FooterText");
					this.OnFooterTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyWords", DbType="NVarChar(500)")]
		public string KeyWords
		{
			get
			{
				return this._KeyWords;
			}
			set
			{
				if ((this._KeyWords != value))
				{
					this.OnKeyWordsChanging(value);
					this.SendPropertyChanging();
					this._KeyWords = value;
					this.SendPropertyChanged("KeyWords");
					this.OnKeyWordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackgroundFile", DbType="NVarChar(50)")]
		public string BackgroundFile
		{
			get
			{
				return this._BackgroundFile;
			}
			set
			{
				if ((this._BackgroundFile != value))
				{
					this.OnBackgroundFileChanging(value);
					this.SendPropertyChanging();
					this._BackgroundFile = value;
					this.SendPropertyChanged("BackgroundFile");
					this.OnBackgroundFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeTabId", DbType="Int")]
		public System.Nullable<int> HomeTabId
		{
			get
			{
				return this._HomeTabId;
			}
			set
			{
				if ((this._HomeTabId != value))
				{
					this.OnHomeTabIdChanging(value);
					this.SendPropertyChanging();
					this._HomeTabId = value;
					this.SendPropertyChanged("HomeTabId");
					this.OnHomeTabIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginTabId", DbType="Int")]
		public System.Nullable<int> LoginTabId
		{
			get
			{
				return this._LoginTabId;
			}
			set
			{
				if ((this._LoginTabId != value))
				{
					this.OnLoginTabIdChanging(value);
					this.SendPropertyChanging();
					this._LoginTabId = value;
					this.SendPropertyChanged("LoginTabId");
					this.OnLoginTabIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserTabId", DbType="Int")]
		public System.Nullable<int> UserTabId
		{
			get
			{
				return this._UserTabId;
			}
			set
			{
				if ((this._UserTabId != value))
				{
					this.OnUserTabIdChanging(value);
					this.SendPropertyChanging();
					this._UserTabId = value;
					this.SendPropertyChanged("UserTabId");
					this.OnUserTabIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminTabId", DbType="Int")]
		public System.Nullable<int> AdminTabId
		{
			get
			{
				return this._AdminTabId;
			}
			set
			{
				if ((this._AdminTabId != value))
				{
					this.OnAdminTabIdChanging(value);
					this.SendPropertyChanging();
					this._AdminTabId = value;
					this.SendPropertyChanged("AdminTabId");
					this.OnAdminTabIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SplashTabId", DbType="Int")]
		public System.Nullable<int> SplashTabId
		{
			get
			{
				return this._SplashTabId;
			}
			set
			{
				if ((this._SplashTabId != value))
				{
					this.OnSplashTabIdChanging(value);
					this.SendPropertyChanging();
					this._SplashTabId = value;
					this.SendPropertyChanged("SplashTabId");
					this.OnSplashTabIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisterTabId", DbType="Int")]
		public System.Nullable<int> RegisterTabId
		{
			get
			{
				return this._RegisterTabId;
			}
			set
			{
				if ((this._RegisterTabId != value))
				{
					this.OnRegisterTabIdChanging(value);
					this.SendPropertyChanging();
					this._RegisterTabId = value;
					this.SendPropertyChanged("RegisterTabId");
					this.OnRegisterTabIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchTabId", DbType="Int")]
		public System.Nullable<int> SearchTabId
		{
			get
			{
				return this._SearchTabId;
			}
			set
			{
				if ((this._SearchTabId != value))
				{
					this.OnSearchTabIdChanging(value);
					this.SendPropertyChanging();
					this._SearchTabId = value;
					this.SendPropertyChanged("SearchTabId");
					this.OnSearchTabIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Portal_PortalLocalization", Storage="_Portal", ThisKey="PortalID", OtherKey="PortalID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Portal Portal
		{
			get
			{
				return this._Portal.Entity;
			}
			set
			{
				Portal previousValue = this._Portal.Entity;
				if (((previousValue != value) 
							|| (this._Portal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Portal.Entity = null;
						previousValue.PortalLocalizations.Remove(this);
					}
					this._Portal.Entity = value;
					if ((value != null))
					{
						value.PortalLocalizations.Add(this);
						this._PortalID = value.PortalID;
					}
					else
					{
						this._PortalID = default(int);
					}
					this.SendPropertyChanged("Portal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Portals")]
	public partial class Portal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PortalID;
		
		private System.Nullable<System.DateTime> _ExpiryDate;
		
		private int _UserRegistration;
		
		private int _BannerAdvertising;
		
		private System.Nullable<int> _AdministratorId;
		
		private string _Currency;
		
		private decimal _HostFee;
		
		private int _HostSpace;
		
		private System.Nullable<int> _AdministratorRoleId;
		
		private System.Nullable<int> _RegisteredRoleId;
		
		private System.Guid _GUID;
		
		private string _PaymentProcessor;
		
		private string _ProcessorUserId;
		
		private string _ProcessorPassword;
		
		private System.Nullable<int> _SiteLogHistory;
		
		private string _DefaultLanguage;
		
		private int _TimezoneOffset;
		
		private string _HomeDirectory;
		
		private int _PageQuota;
		
		private int _UserQuota;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private System.Nullable<int> _PortalGroupID;
		
		private EntitySet<AnonymousUser> _AnonymousUsers;
		
		private EntitySet<File> _Files;
		
		private EntitySet<FolderMapping> _FolderMappings;
		
		private EntitySet<Folder> _Folders;
		
		private EntitySet<Mobile_PreviewProfile> _Mobile_PreviewProfiles;
		
		private EntitySet<Mobile_Redirection> _Mobile_Redirections;
		
		private EntitySet<Module> _Modules;
		
		private EntitySet<PortalAlia> _PortalAlias;
		
		private EntitySet<PortalDesktopModule> _PortalDesktopModules;
		
		private EntitySet<PortalLanguage> _PortalLanguages;
		
		private EntitySet<PortalLocalization> _PortalLocalizations;
		
		private EntitySet<PortalSetting> _PortalSettings;
		
		private EntitySet<Profile> _Profiles;
		
		private EntitySet<ProfilePropertyDefinition> _ProfilePropertyDefinitions;
		
		private EntitySet<Relationship> _Relationships;
		
		private EntitySet<RoleGroup> _RoleGroups;
		
		private EntitySet<Role> _Roles;
		
		private EntitySet<SiteLog> _SiteLogs;
		
		private EntitySet<SystemMessage> _SystemMessages;
		
		private EntitySet<Tab> _Tabs;
		
		private EntitySet<Url> _Urls;
		
		private EntitySet<UrlTracking> _UrlTrackings;
		
		private EntitySet<UserPortal> _UserPortals;
		
		private EntitySet<UsersOnline> _UsersOnlines;
		
		private EntitySet<Vendor> _Vendors;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPortalIDChanging(int value);
    partial void OnPortalIDChanged();
    partial void OnExpiryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpiryDateChanged();
    partial void OnUserRegistrationChanging(int value);
    partial void OnUserRegistrationChanged();
    partial void OnBannerAdvertisingChanging(int value);
    partial void OnBannerAdvertisingChanged();
    partial void OnAdministratorIdChanging(System.Nullable<int> value);
    partial void OnAdministratorIdChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnHostFeeChanging(decimal value);
    partial void OnHostFeeChanged();
    partial void OnHostSpaceChanging(int value);
    partial void OnHostSpaceChanged();
    partial void OnAdministratorRoleIdChanging(System.Nullable<int> value);
    partial void OnAdministratorRoleIdChanged();
    partial void OnRegisteredRoleIdChanging(System.Nullable<int> value);
    partial void OnRegisteredRoleIdChanged();
    partial void OnGUIDChanging(System.Guid value);
    partial void OnGUIDChanged();
    partial void OnPaymentProcessorChanging(string value);
    partial void OnPaymentProcessorChanged();
    partial void OnProcessorUserIdChanging(string value);
    partial void OnProcessorUserIdChanged();
    partial void OnProcessorPasswordChanging(string value);
    partial void OnProcessorPasswordChanged();
    partial void OnSiteLogHistoryChanging(System.Nullable<int> value);
    partial void OnSiteLogHistoryChanged();
    partial void OnDefaultLanguageChanging(string value);
    partial void OnDefaultLanguageChanged();
    partial void OnTimezoneOffsetChanging(int value);
    partial void OnTimezoneOffsetChanged();
    partial void OnHomeDirectoryChanging(string value);
    partial void OnHomeDirectoryChanged();
    partial void OnPageQuotaChanging(int value);
    partial void OnPageQuotaChanged();
    partial void OnUserQuotaChanging(int value);
    partial void OnUserQuotaChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    partial void OnPortalGroupIDChanging(System.Nullable<int> value);
    partial void OnPortalGroupIDChanged();
    #endregion
		
		public Portal()
		{
			this._AnonymousUsers = new EntitySet<AnonymousUser>(new Action<AnonymousUser>(this.attach_AnonymousUsers), new Action<AnonymousUser>(this.detach_AnonymousUsers));
			this._Files = new EntitySet<File>(new Action<File>(this.attach_Files), new Action<File>(this.detach_Files));
			this._FolderMappings = new EntitySet<FolderMapping>(new Action<FolderMapping>(this.attach_FolderMappings), new Action<FolderMapping>(this.detach_FolderMappings));
			this._Folders = new EntitySet<Folder>(new Action<Folder>(this.attach_Folders), new Action<Folder>(this.detach_Folders));
			this._Mobile_PreviewProfiles = new EntitySet<Mobile_PreviewProfile>(new Action<Mobile_PreviewProfile>(this.attach_Mobile_PreviewProfiles), new Action<Mobile_PreviewProfile>(this.detach_Mobile_PreviewProfiles));
			this._Mobile_Redirections = new EntitySet<Mobile_Redirection>(new Action<Mobile_Redirection>(this.attach_Mobile_Redirections), new Action<Mobile_Redirection>(this.detach_Mobile_Redirections));
			this._Modules = new EntitySet<Module>(new Action<Module>(this.attach_Modules), new Action<Module>(this.detach_Modules));
			this._PortalAlias = new EntitySet<PortalAlia>(new Action<PortalAlia>(this.attach_PortalAlias), new Action<PortalAlia>(this.detach_PortalAlias));
			this._PortalDesktopModules = new EntitySet<PortalDesktopModule>(new Action<PortalDesktopModule>(this.attach_PortalDesktopModules), new Action<PortalDesktopModule>(this.detach_PortalDesktopModules));
			this._PortalLanguages = new EntitySet<PortalLanguage>(new Action<PortalLanguage>(this.attach_PortalLanguages), new Action<PortalLanguage>(this.detach_PortalLanguages));
			this._PortalLocalizations = new EntitySet<PortalLocalization>(new Action<PortalLocalization>(this.attach_PortalLocalizations), new Action<PortalLocalization>(this.detach_PortalLocalizations));
			this._PortalSettings = new EntitySet<PortalSetting>(new Action<PortalSetting>(this.attach_PortalSettings), new Action<PortalSetting>(this.detach_PortalSettings));
			this._Profiles = new EntitySet<Profile>(new Action<Profile>(this.attach_Profiles), new Action<Profile>(this.detach_Profiles));
			this._ProfilePropertyDefinitions = new EntitySet<ProfilePropertyDefinition>(new Action<ProfilePropertyDefinition>(this.attach_ProfilePropertyDefinitions), new Action<ProfilePropertyDefinition>(this.detach_ProfilePropertyDefinitions));
			this._Relationships = new EntitySet<Relationship>(new Action<Relationship>(this.attach_Relationships), new Action<Relationship>(this.detach_Relationships));
			this._RoleGroups = new EntitySet<RoleGroup>(new Action<RoleGroup>(this.attach_RoleGroups), new Action<RoleGroup>(this.detach_RoleGroups));
			this._Roles = new EntitySet<Role>(new Action<Role>(this.attach_Roles), new Action<Role>(this.detach_Roles));
			this._SiteLogs = new EntitySet<SiteLog>(new Action<SiteLog>(this.attach_SiteLogs), new Action<SiteLog>(this.detach_SiteLogs));
			this._SystemMessages = new EntitySet<SystemMessage>(new Action<SystemMessage>(this.attach_SystemMessages), new Action<SystemMessage>(this.detach_SystemMessages));
			this._Tabs = new EntitySet<Tab>(new Action<Tab>(this.attach_Tabs), new Action<Tab>(this.detach_Tabs));
			this._Urls = new EntitySet<Url>(new Action<Url>(this.attach_Urls), new Action<Url>(this.detach_Urls));
			this._UrlTrackings = new EntitySet<UrlTracking>(new Action<UrlTracking>(this.attach_UrlTrackings), new Action<UrlTracking>(this.detach_UrlTrackings));
			this._UserPortals = new EntitySet<UserPortal>(new Action<UserPortal>(this.attach_UserPortals), new Action<UserPortal>(this.detach_UserPortals));
			this._UsersOnlines = new EntitySet<UsersOnline>(new Action<UsersOnline>(this.attach_UsersOnlines), new Action<UsersOnline>(this.detach_UsersOnlines));
			this._Vendors = new EntitySet<Vendor>(new Action<Vendor>(this.attach_Vendors), new Action<Vendor>(this.detach_Vendors));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpiryDate
		{
			get
			{
				return this._ExpiryDate;
			}
			set
			{
				if ((this._ExpiryDate != value))
				{
					this.OnExpiryDateChanging(value);
					this.SendPropertyChanging();
					this._ExpiryDate = value;
					this.SendPropertyChanged("ExpiryDate");
					this.OnExpiryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserRegistration", DbType="Int NOT NULL")]
		public int UserRegistration
		{
			get
			{
				return this._UserRegistration;
			}
			set
			{
				if ((this._UserRegistration != value))
				{
					this.OnUserRegistrationChanging(value);
					this.SendPropertyChanging();
					this._UserRegistration = value;
					this.SendPropertyChanged("UserRegistration");
					this.OnUserRegistrationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BannerAdvertising", DbType="Int NOT NULL")]
		public int BannerAdvertising
		{
			get
			{
				return this._BannerAdvertising;
			}
			set
			{
				if ((this._BannerAdvertising != value))
				{
					this.OnBannerAdvertisingChanging(value);
					this.SendPropertyChanging();
					this._BannerAdvertising = value;
					this.SendPropertyChanged("BannerAdvertising");
					this.OnBannerAdvertisingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdministratorId", DbType="Int")]
		public System.Nullable<int> AdministratorId
		{
			get
			{
				return this._AdministratorId;
			}
			set
			{
				if ((this._AdministratorId != value))
				{
					this.OnAdministratorIdChanging(value);
					this.SendPropertyChanging();
					this._AdministratorId = value;
					this.SendPropertyChanged("AdministratorId");
					this.OnAdministratorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Char(3)")]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostFee", DbType="Money NOT NULL")]
		public decimal HostFee
		{
			get
			{
				return this._HostFee;
			}
			set
			{
				if ((this._HostFee != value))
				{
					this.OnHostFeeChanging(value);
					this.SendPropertyChanging();
					this._HostFee = value;
					this.SendPropertyChanged("HostFee");
					this.OnHostFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostSpace", DbType="Int NOT NULL")]
		public int HostSpace
		{
			get
			{
				return this._HostSpace;
			}
			set
			{
				if ((this._HostSpace != value))
				{
					this.OnHostSpaceChanging(value);
					this.SendPropertyChanging();
					this._HostSpace = value;
					this.SendPropertyChanged("HostSpace");
					this.OnHostSpaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdministratorRoleId", DbType="Int")]
		public System.Nullable<int> AdministratorRoleId
		{
			get
			{
				return this._AdministratorRoleId;
			}
			set
			{
				if ((this._AdministratorRoleId != value))
				{
					this.OnAdministratorRoleIdChanging(value);
					this.SendPropertyChanging();
					this._AdministratorRoleId = value;
					this.SendPropertyChanged("AdministratorRoleId");
					this.OnAdministratorRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisteredRoleId", DbType="Int")]
		public System.Nullable<int> RegisteredRoleId
		{
			get
			{
				return this._RegisteredRoleId;
			}
			set
			{
				if ((this._RegisteredRoleId != value))
				{
					this.OnRegisteredRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RegisteredRoleId = value;
					this.SendPropertyChanged("RegisteredRoleId");
					this.OnRegisteredRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid GUID
		{
			get
			{
				return this._GUID;
			}
			set
			{
				if ((this._GUID != value))
				{
					this.OnGUIDChanging(value);
					this.SendPropertyChanging();
					this._GUID = value;
					this.SendPropertyChanged("GUID");
					this.OnGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentProcessor", DbType="NVarChar(50)")]
		public string PaymentProcessor
		{
			get
			{
				return this._PaymentProcessor;
			}
			set
			{
				if ((this._PaymentProcessor != value))
				{
					this.OnPaymentProcessorChanging(value);
					this.SendPropertyChanging();
					this._PaymentProcessor = value;
					this.SendPropertyChanged("PaymentProcessor");
					this.OnPaymentProcessorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessorUserId", DbType="NVarChar(50)")]
		public string ProcessorUserId
		{
			get
			{
				return this._ProcessorUserId;
			}
			set
			{
				if ((this._ProcessorUserId != value))
				{
					this.OnProcessorUserIdChanging(value);
					this.SendPropertyChanging();
					this._ProcessorUserId = value;
					this.SendPropertyChanged("ProcessorUserId");
					this.OnProcessorUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessorPassword", DbType="NVarChar(50)")]
		public string ProcessorPassword
		{
			get
			{
				return this._ProcessorPassword;
			}
			set
			{
				if ((this._ProcessorPassword != value))
				{
					this.OnProcessorPasswordChanging(value);
					this.SendPropertyChanging();
					this._ProcessorPassword = value;
					this.SendPropertyChanged("ProcessorPassword");
					this.OnProcessorPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteLogHistory", DbType="Int")]
		public System.Nullable<int> SiteLogHistory
		{
			get
			{
				return this._SiteLogHistory;
			}
			set
			{
				if ((this._SiteLogHistory != value))
				{
					this.OnSiteLogHistoryChanging(value);
					this.SendPropertyChanging();
					this._SiteLogHistory = value;
					this.SendPropertyChanged("SiteLogHistory");
					this.OnSiteLogHistoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultLanguage", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string DefaultLanguage
		{
			get
			{
				return this._DefaultLanguage;
			}
			set
			{
				if ((this._DefaultLanguage != value))
				{
					this.OnDefaultLanguageChanging(value);
					this.SendPropertyChanging();
					this._DefaultLanguage = value;
					this.SendPropertyChanged("DefaultLanguage");
					this.OnDefaultLanguageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimezoneOffset", DbType="Int NOT NULL")]
		public int TimezoneOffset
		{
			get
			{
				return this._TimezoneOffset;
			}
			set
			{
				if ((this._TimezoneOffset != value))
				{
					this.OnTimezoneOffsetChanging(value);
					this.SendPropertyChanging();
					this._TimezoneOffset = value;
					this.SendPropertyChanged("TimezoneOffset");
					this.OnTimezoneOffsetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeDirectory", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string HomeDirectory
		{
			get
			{
				return this._HomeDirectory;
			}
			set
			{
				if ((this._HomeDirectory != value))
				{
					this.OnHomeDirectoryChanging(value);
					this.SendPropertyChanging();
					this._HomeDirectory = value;
					this.SendPropertyChanged("HomeDirectory");
					this.OnHomeDirectoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageQuota", DbType="Int NOT NULL")]
		public int PageQuota
		{
			get
			{
				return this._PageQuota;
			}
			set
			{
				if ((this._PageQuota != value))
				{
					this.OnPageQuotaChanging(value);
					this.SendPropertyChanging();
					this._PageQuota = value;
					this.SendPropertyChanged("PageQuota");
					this.OnPageQuotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserQuota", DbType="Int NOT NULL")]
		public int UserQuota
		{
			get
			{
				return this._UserQuota;
			}
			set
			{
				if ((this._UserQuota != value))
				{
					this.OnUserQuotaChanging(value);
					this.SendPropertyChanging();
					this._UserQuota = value;
					this.SendPropertyChanged("UserQuota");
					this.OnUserQuotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalGroupID", DbType="Int")]
		public System.Nullable<int> PortalGroupID
		{
			get
			{
				return this._PortalGroupID;
			}
			set
			{
				if ((this._PortalGroupID != value))
				{
					this.OnPortalGroupIDChanging(value);
					this.SendPropertyChanging();
					this._PortalGroupID = value;
					this.SendPropertyChanged("PortalGroupID");
					this.OnPortalGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Portal_AnonymousUser", Storage="_AnonymousUsers", ThisKey="PortalID", OtherKey="PortalID")]
		public EntitySet<AnonymousUser> AnonymousUsers
		{
			get
			{
				return this._AnonymousUsers;
			}
			set
			{
				this._AnonymousUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Portal_File", Storage="_Files", ThisKey="PortalID", OtherKey="PortalId")]
		public EntitySet<File> Files
		{
			get
			{
				return this._Files;
			}
			set
			{
				this._Files.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Portal_FolderMapping", Storage="_FolderMappings", ThisKey="PortalID", OtherKey="PortalID")]
		public EntitySet<FolderMapping> FolderMappings
		{
			get
			{
				return this._FolderMappings;
			}
			set
			{
				this._FolderMappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Portal_Folder", Storage="_Folders", ThisKey="PortalID", OtherKey="PortalID")]
		public EntitySet<Folder> Folders
		{
			get
			{
				return this._Folders;
			}
			set
			{
				this._Folders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Portal_Mobile_PreviewProfile", Storage="_Mobile_PreviewProfiles", ThisKey="PortalID", OtherKey="PortalId")]
		public EntitySet<Mobile_PreviewProfile> Mobile_PreviewProfiles
		{
			get
			{
				return this._Mobile_PreviewProfiles;
			}
			set
			{
				this._Mobile_PreviewProfiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Portal_Mobile_Redirection", Storage="_Mobile_Redirections", ThisKey="PortalID", OtherKey="PortalId")]
		public EntitySet<Mobile_Redirection> Mobile_Redirections
		{
			get
			{
				return this._Mobile_Redirections;
			}
			set
			{
				this._Mobile_Redirections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Portal_Module", Storage="_Modules", ThisKey="PortalID", OtherKey="PortalID")]
		public EntitySet<Module> Modules
		{
			get
			{
				return this._Modules;
			}
			set
			{
				this._Modules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Portal_PortalAlia", Storage="_PortalAlias", ThisKey="PortalID", OtherKey="PortalID")]
		public EntitySet<PortalAlia> PortalAlias
		{
			get
			{
				return this._PortalAlias;
			}
			set
			{
				this._PortalAlias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Portal_PortalDesktopModule", Storage="_PortalDesktopModules", ThisKey="PortalID", OtherKey="PortalID")]
		public EntitySet<PortalDesktopModule> PortalDesktopModules
		{
			get
			{
				return this._PortalDesktopModules;
			}
			set
			{
				this._PortalDesktopModules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Portal_PortalLanguage", Storage="_PortalLanguages", ThisKey="PortalID", OtherKey="PortalID")]
		public EntitySet<PortalLanguage> PortalLanguages
		{
			get
			{
				return this._PortalLanguages;
			}
			set
			{
				this._PortalLanguages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Portal_PortalLocalization", Storage="_PortalLocalizations", ThisKey="PortalID", OtherKey="PortalID")]
		public EntitySet<PortalLocalization> PortalLocalizations
		{
			get
			{
				return this._PortalLocalizations;
			}
			set
			{
				this._PortalLocalizations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Portal_PortalSetting", Storage="_PortalSettings", ThisKey="PortalID", OtherKey="PortalID")]
		public EntitySet<PortalSetting> PortalSettings
		{
			get
			{
				return this._PortalSettings;
			}
			set
			{
				this._PortalSettings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Portal_Profile", Storage="_Profiles", ThisKey="PortalID", OtherKey="PortalId")]
		public EntitySet<Profile> Profiles
		{
			get
			{
				return this._Profiles;
			}
			set
			{
				this._Profiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Portal_ProfilePropertyDefinition", Storage="_ProfilePropertyDefinitions", ThisKey="PortalID", OtherKey="PortalID")]
		public EntitySet<ProfilePropertyDefinition> ProfilePropertyDefinitions
		{
			get
			{
				return this._ProfilePropertyDefinitions;
			}
			set
			{
				this._ProfilePropertyDefinitions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Portal_Relationship", Storage="_Relationships", ThisKey="PortalID", OtherKey="PortalID")]
		public EntitySet<Relationship> Relationships
		{
			get
			{
				return this._Relationships;
			}
			set
			{
				this._Relationships.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Portal_RoleGroup", Storage="_RoleGroups", ThisKey="PortalID", OtherKey="PortalID")]
		public EntitySet<RoleGroup> RoleGroups
		{
			get
			{
				return this._RoleGroups;
			}
			set
			{
				this._RoleGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Portal_Role", Storage="_Roles", ThisKey="PortalID", OtherKey="PortalID")]
		public EntitySet<Role> Roles
		{
			get
			{
				return this._Roles;
			}
			set
			{
				this._Roles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Portal_SiteLog", Storage="_SiteLogs", ThisKey="PortalID", OtherKey="PortalId")]
		public EntitySet<SiteLog> SiteLogs
		{
			get
			{
				return this._SiteLogs;
			}
			set
			{
				this._SiteLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Portal_SystemMessage", Storage="_SystemMessages", ThisKey="PortalID", OtherKey="PortalID")]
		public EntitySet<SystemMessage> SystemMessages
		{
			get
			{
				return this._SystemMessages;
			}
			set
			{
				this._SystemMessages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Portal_Tab", Storage="_Tabs", ThisKey="PortalID", OtherKey="PortalID")]
		public EntitySet<Tab> Tabs
		{
			get
			{
				return this._Tabs;
			}
			set
			{
				this._Tabs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Portal_Url", Storage="_Urls", ThisKey="PortalID", OtherKey="PortalID")]
		public EntitySet<Url> Urls
		{
			get
			{
				return this._Urls;
			}
			set
			{
				this._Urls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Portal_UrlTracking", Storage="_UrlTrackings", ThisKey="PortalID", OtherKey="PortalID")]
		public EntitySet<UrlTracking> UrlTrackings
		{
			get
			{
				return this._UrlTrackings;
			}
			set
			{
				this._UrlTrackings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Portal_UserPortal", Storage="_UserPortals", ThisKey="PortalID", OtherKey="PortalId")]
		public EntitySet<UserPortal> UserPortals
		{
			get
			{
				return this._UserPortals;
			}
			set
			{
				this._UserPortals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Portal_UsersOnline", Storage="_UsersOnlines", ThisKey="PortalID", OtherKey="PortalID")]
		public EntitySet<UsersOnline> UsersOnlines
		{
			get
			{
				return this._UsersOnlines;
			}
			set
			{
				this._UsersOnlines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Portal_Vendor", Storage="_Vendors", ThisKey="PortalID", OtherKey="PortalId")]
		public EntitySet<Vendor> Vendors
		{
			get
			{
				return this._Vendors;
			}
			set
			{
				this._Vendors.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AnonymousUsers(AnonymousUser entity)
		{
			this.SendPropertyChanging();
			entity.Portal = this;
		}
		
		private void detach_AnonymousUsers(AnonymousUser entity)
		{
			this.SendPropertyChanging();
			entity.Portal = null;
		}
		
		private void attach_Files(File entity)
		{
			this.SendPropertyChanging();
			entity.Portal = this;
		}
		
		private void detach_Files(File entity)
		{
			this.SendPropertyChanging();
			entity.Portal = null;
		}
		
		private void attach_FolderMappings(FolderMapping entity)
		{
			this.SendPropertyChanging();
			entity.Portal = this;
		}
		
		private void detach_FolderMappings(FolderMapping entity)
		{
			this.SendPropertyChanging();
			entity.Portal = null;
		}
		
		private void attach_Folders(Folder entity)
		{
			this.SendPropertyChanging();
			entity.Portal = this;
		}
		
		private void detach_Folders(Folder entity)
		{
			this.SendPropertyChanging();
			entity.Portal = null;
		}
		
		private void attach_Mobile_PreviewProfiles(Mobile_PreviewProfile entity)
		{
			this.SendPropertyChanging();
			entity.Portal = this;
		}
		
		private void detach_Mobile_PreviewProfiles(Mobile_PreviewProfile entity)
		{
			this.SendPropertyChanging();
			entity.Portal = null;
		}
		
		private void attach_Mobile_Redirections(Mobile_Redirection entity)
		{
			this.SendPropertyChanging();
			entity.Portal = this;
		}
		
		private void detach_Mobile_Redirections(Mobile_Redirection entity)
		{
			this.SendPropertyChanging();
			entity.Portal = null;
		}
		
		private void attach_Modules(Module entity)
		{
			this.SendPropertyChanging();
			entity.Portal = this;
		}
		
		private void detach_Modules(Module entity)
		{
			this.SendPropertyChanging();
			entity.Portal = null;
		}
		
		private void attach_PortalAlias(PortalAlia entity)
		{
			this.SendPropertyChanging();
			entity.Portal = this;
		}
		
		private void detach_PortalAlias(PortalAlia entity)
		{
			this.SendPropertyChanging();
			entity.Portal = null;
		}
		
		private void attach_PortalDesktopModules(PortalDesktopModule entity)
		{
			this.SendPropertyChanging();
			entity.Portal = this;
		}
		
		private void detach_PortalDesktopModules(PortalDesktopModule entity)
		{
			this.SendPropertyChanging();
			entity.Portal = null;
		}
		
		private void attach_PortalLanguages(PortalLanguage entity)
		{
			this.SendPropertyChanging();
			entity.Portal = this;
		}
		
		private void detach_PortalLanguages(PortalLanguage entity)
		{
			this.SendPropertyChanging();
			entity.Portal = null;
		}
		
		private void attach_PortalLocalizations(PortalLocalization entity)
		{
			this.SendPropertyChanging();
			entity.Portal = this;
		}
		
		private void detach_PortalLocalizations(PortalLocalization entity)
		{
			this.SendPropertyChanging();
			entity.Portal = null;
		}
		
		private void attach_PortalSettings(PortalSetting entity)
		{
			this.SendPropertyChanging();
			entity.Portal = this;
		}
		
		private void detach_PortalSettings(PortalSetting entity)
		{
			this.SendPropertyChanging();
			entity.Portal = null;
		}
		
		private void attach_Profiles(Profile entity)
		{
			this.SendPropertyChanging();
			entity.Portal = this;
		}
		
		private void detach_Profiles(Profile entity)
		{
			this.SendPropertyChanging();
			entity.Portal = null;
		}
		
		private void attach_ProfilePropertyDefinitions(ProfilePropertyDefinition entity)
		{
			this.SendPropertyChanging();
			entity.Portal = this;
		}
		
		private void detach_ProfilePropertyDefinitions(ProfilePropertyDefinition entity)
		{
			this.SendPropertyChanging();
			entity.Portal = null;
		}
		
		private void attach_Relationships(Relationship entity)
		{
			this.SendPropertyChanging();
			entity.Portal = this;
		}
		
		private void detach_Relationships(Relationship entity)
		{
			this.SendPropertyChanging();
			entity.Portal = null;
		}
		
		private void attach_RoleGroups(RoleGroup entity)
		{
			this.SendPropertyChanging();
			entity.Portal = this;
		}
		
		private void detach_RoleGroups(RoleGroup entity)
		{
			this.SendPropertyChanging();
			entity.Portal = null;
		}
		
		private void attach_Roles(Role entity)
		{
			this.SendPropertyChanging();
			entity.Portal = this;
		}
		
		private void detach_Roles(Role entity)
		{
			this.SendPropertyChanging();
			entity.Portal = null;
		}
		
		private void attach_SiteLogs(SiteLog entity)
		{
			this.SendPropertyChanging();
			entity.Portal = this;
		}
		
		private void detach_SiteLogs(SiteLog entity)
		{
			this.SendPropertyChanging();
			entity.Portal = null;
		}
		
		private void attach_SystemMessages(SystemMessage entity)
		{
			this.SendPropertyChanging();
			entity.Portal = this;
		}
		
		private void detach_SystemMessages(SystemMessage entity)
		{
			this.SendPropertyChanging();
			entity.Portal = null;
		}
		
		private void attach_Tabs(Tab entity)
		{
			this.SendPropertyChanging();
			entity.Portal = this;
		}
		
		private void detach_Tabs(Tab entity)
		{
			this.SendPropertyChanging();
			entity.Portal = null;
		}
		
		private void attach_Urls(Url entity)
		{
			this.SendPropertyChanging();
			entity.Portal = this;
		}
		
		private void detach_Urls(Url entity)
		{
			this.SendPropertyChanging();
			entity.Portal = null;
		}
		
		private void attach_UrlTrackings(UrlTracking entity)
		{
			this.SendPropertyChanging();
			entity.Portal = this;
		}
		
		private void detach_UrlTrackings(UrlTracking entity)
		{
			this.SendPropertyChanging();
			entity.Portal = null;
		}
		
		private void attach_UserPortals(UserPortal entity)
		{
			this.SendPropertyChanging();
			entity.Portal = this;
		}
		
		private void detach_UserPortals(UserPortal entity)
		{
			this.SendPropertyChanging();
			entity.Portal = null;
		}
		
		private void attach_UsersOnlines(UsersOnline entity)
		{
			this.SendPropertyChanging();
			entity.Portal = this;
		}
		
		private void detach_UsersOnlines(UsersOnline entity)
		{
			this.SendPropertyChanging();
			entity.Portal = null;
		}
		
		private void attach_Vendors(Vendor entity)
		{
			this.SendPropertyChanging();
			entity.Portal = this;
		}
		
		private void detach_Vendors(Vendor entity)
		{
			this.SendPropertyChanging();
			entity.Portal = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PortalSettings")]
	public partial class PortalSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PortalID;
		
		private string _SettingName;
		
		private string _SettingValue;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private string _CultureCode;
		
		private EntityRef<Portal> _Portal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPortalIDChanging(int value);
    partial void OnPortalIDChanged();
    partial void OnSettingNameChanging(string value);
    partial void OnSettingNameChanged();
    partial void OnSettingValueChanging(string value);
    partial void OnSettingValueChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    partial void OnCultureCodeChanging(string value);
    partial void OnCultureCodeChanged();
    #endregion
		
		public PortalSetting()
		{
			this._Portal = default(EntityRef<Portal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					if (this._Portal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SettingName
		{
			get
			{
				return this._SettingName;
			}
			set
			{
				if ((this._SettingName != value))
				{
					this.OnSettingNameChanging(value);
					this.SendPropertyChanging();
					this._SettingName = value;
					this.SendPropertyChanged("SettingName");
					this.OnSettingNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingValue", DbType="NVarChar(2000)")]
		public string SettingValue
		{
			get
			{
				return this._SettingValue;
			}
			set
			{
				if ((this._SettingValue != value))
				{
					this.OnSettingValueChanging(value);
					this.SendPropertyChanging();
					this._SettingValue = value;
					this.SendPropertyChanged("SettingValue");
					this.OnSettingValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CultureCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CultureCode
		{
			get
			{
				return this._CultureCode;
			}
			set
			{
				if ((this._CultureCode != value))
				{
					this.OnCultureCodeChanging(value);
					this.SendPropertyChanging();
					this._CultureCode = value;
					this.SendPropertyChanged("CultureCode");
					this.OnCultureCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Portal_PortalSetting", Storage="_Portal", ThisKey="PortalID", OtherKey="PortalID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Portal Portal
		{
			get
			{
				return this._Portal.Entity;
			}
			set
			{
				Portal previousValue = this._Portal.Entity;
				if (((previousValue != value) 
							|| (this._Portal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Portal.Entity = null;
						previousValue.PortalSettings.Remove(this);
					}
					this._Portal.Entity = value;
					if ((value != null))
					{
						value.PortalSettings.Add(this);
						this._PortalID = value.PortalID;
					}
					else
					{
						this._PortalID = default(int);
					}
					this.SendPropertyChanged("Portal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Profile")]
	public partial class Profile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProfileId;
		
		private int _UserId;
		
		private int _PortalId;
		
		private string _ProfileData;
		
		private System.DateTime _CreatedDate;
		
		private EntityRef<Portal> _Portal;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProfileIdChanging(int value);
    partial void OnProfileIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnPortalIdChanging(int value);
    partial void OnPortalIdChanged();
    partial void OnProfileDataChanging(string value);
    partial void OnProfileDataChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    #endregion
		
		public Profile()
		{
			this._Portal = default(EntityRef<Portal>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProfileId
		{
			get
			{
				return this._ProfileId;
			}
			set
			{
				if ((this._ProfileId != value))
				{
					this.OnProfileIdChanging(value);
					this.SendPropertyChanging();
					this._ProfileId = value;
					this.SendPropertyChanged("ProfileId");
					this.OnProfileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalId", DbType="Int NOT NULL")]
		public int PortalId
		{
			get
			{
				return this._PortalId;
			}
			set
			{
				if ((this._PortalId != value))
				{
					if (this._Portal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalIdChanging(value);
					this.SendPropertyChanging();
					this._PortalId = value;
					this.SendPropertyChanged("PortalId");
					this.OnPortalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileData", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ProfileData
		{
			get
			{
				return this._ProfileData;
			}
			set
			{
				if ((this._ProfileData != value))
				{
					this.OnProfileDataChanging(value);
					this.SendPropertyChanging();
					this._ProfileData = value;
					this.SendPropertyChanged("ProfileData");
					this.OnProfileDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Portal_Profile", Storage="_Portal", ThisKey="PortalId", OtherKey="PortalID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Portal Portal
		{
			get
			{
				return this._Portal.Entity;
			}
			set
			{
				Portal previousValue = this._Portal.Entity;
				if (((previousValue != value) 
							|| (this._Portal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Portal.Entity = null;
						previousValue.Profiles.Remove(this);
					}
					this._Portal.Entity = value;
					if ((value != null))
					{
						value.Profiles.Add(this);
						this._PortalId = value.PortalID;
					}
					else
					{
						this._PortalId = default(int);
					}
					this.SendPropertyChanged("Portal");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Profile", Storage="_User", ThisKey="UserId", OtherKey="UserID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Profiles.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Profiles.Add(this);
						this._UserId = value.UserID;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProfilePropertyDefinition")]
	public partial class ProfilePropertyDefinition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PropertyDefinitionID;
		
		private System.Nullable<int> _PortalID;
		
		private System.Nullable<int> _ModuleDefID;
		
		private bool _Deleted;
		
		private int _DataType;
		
		private string _DefaultValue;
		
		private string _PropertyCategory;
		
		private string _PropertyName;
		
		private int _Length;
		
		private bool _Required;
		
		private string _ValidationExpression;
		
		private int _ViewOrder;
		
		private bool _Visible;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private System.Nullable<int> _DefaultVisibility;
		
		private bool _ReadOnly;
		
		private EntitySet<UserProfile> _UserProfiles;
		
		private EntityRef<Portal> _Portal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPropertyDefinitionIDChanging(int value);
    partial void OnPropertyDefinitionIDChanged();
    partial void OnPortalIDChanging(System.Nullable<int> value);
    partial void OnPortalIDChanged();
    partial void OnModuleDefIDChanging(System.Nullable<int> value);
    partial void OnModuleDefIDChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnDataTypeChanging(int value);
    partial void OnDataTypeChanged();
    partial void OnDefaultValueChanging(string value);
    partial void OnDefaultValueChanged();
    partial void OnPropertyCategoryChanging(string value);
    partial void OnPropertyCategoryChanged();
    partial void OnPropertyNameChanging(string value);
    partial void OnPropertyNameChanged();
    partial void OnLengthChanging(int value);
    partial void OnLengthChanged();
    partial void OnRequiredChanging(bool value);
    partial void OnRequiredChanged();
    partial void OnValidationExpressionChanging(string value);
    partial void OnValidationExpressionChanged();
    partial void OnViewOrderChanging(int value);
    partial void OnViewOrderChanged();
    partial void OnVisibleChanging(bool value);
    partial void OnVisibleChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    partial void OnDefaultVisibilityChanging(System.Nullable<int> value);
    partial void OnDefaultVisibilityChanged();
    partial void OnReadOnlyChanging(bool value);
    partial void OnReadOnlyChanged();
    #endregion
		
		public ProfilePropertyDefinition()
		{
			this._UserProfiles = new EntitySet<UserProfile>(new Action<UserProfile>(this.attach_UserProfiles), new Action<UserProfile>(this.detach_UserProfiles));
			this._Portal = default(EntityRef<Portal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyDefinitionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PropertyDefinitionID
		{
			get
			{
				return this._PropertyDefinitionID;
			}
			set
			{
				if ((this._PropertyDefinitionID != value))
				{
					this.OnPropertyDefinitionIDChanging(value);
					this.SendPropertyChanging();
					this._PropertyDefinitionID = value;
					this.SendPropertyChanged("PropertyDefinitionID");
					this.OnPropertyDefinitionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int")]
		public System.Nullable<int> PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					if (this._Portal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleDefID", DbType="Int")]
		public System.Nullable<int> ModuleDefID
		{
			get
			{
				return this._ModuleDefID;
			}
			set
			{
				if ((this._ModuleDefID != value))
				{
					this.OnModuleDefIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleDefID = value;
					this.SendPropertyChanged("ModuleDefID");
					this.OnModuleDefIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataType", DbType="Int NOT NULL")]
		public int DataType
		{
			get
			{
				return this._DataType;
			}
			set
			{
				if ((this._DataType != value))
				{
					this.OnDataTypeChanging(value);
					this.SendPropertyChanging();
					this._DataType = value;
					this.SendPropertyChanged("DataType");
					this.OnDataTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultValue", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string DefaultValue
		{
			get
			{
				return this._DefaultValue;
			}
			set
			{
				if ((this._DefaultValue != value))
				{
					this.OnDefaultValueChanging(value);
					this.SendPropertyChanging();
					this._DefaultValue = value;
					this.SendPropertyChanged("DefaultValue");
					this.OnDefaultValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyCategory", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PropertyCategory
		{
			get
			{
				return this._PropertyCategory;
			}
			set
			{
				if ((this._PropertyCategory != value))
				{
					this.OnPropertyCategoryChanging(value);
					this.SendPropertyChanging();
					this._PropertyCategory = value;
					this.SendPropertyChanged("PropertyCategory");
					this.OnPropertyCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PropertyName
		{
			get
			{
				return this._PropertyName;
			}
			set
			{
				if ((this._PropertyName != value))
				{
					this.OnPropertyNameChanging(value);
					this.SendPropertyChanging();
					this._PropertyName = value;
					this.SendPropertyChanged("PropertyName");
					this.OnPropertyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Length", DbType="Int NOT NULL")]
		public int Length
		{
			get
			{
				return this._Length;
			}
			set
			{
				if ((this._Length != value))
				{
					this.OnLengthChanging(value);
					this.SendPropertyChanging();
					this._Length = value;
					this.SendPropertyChanged("Length");
					this.OnLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Required", DbType="Bit NOT NULL")]
		public bool Required
		{
			get
			{
				return this._Required;
			}
			set
			{
				if ((this._Required != value))
				{
					this.OnRequiredChanging(value);
					this.SendPropertyChanging();
					this._Required = value;
					this.SendPropertyChanged("Required");
					this.OnRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidationExpression", DbType="NVarChar(2000)")]
		public string ValidationExpression
		{
			get
			{
				return this._ValidationExpression;
			}
			set
			{
				if ((this._ValidationExpression != value))
				{
					this.OnValidationExpressionChanging(value);
					this.SendPropertyChanging();
					this._ValidationExpression = value;
					this.SendPropertyChanged("ValidationExpression");
					this.OnValidationExpressionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewOrder", DbType="Int NOT NULL")]
		public int ViewOrder
		{
			get
			{
				return this._ViewOrder;
			}
			set
			{
				if ((this._ViewOrder != value))
				{
					this.OnViewOrderChanging(value);
					this.SendPropertyChanging();
					this._ViewOrder = value;
					this.SendPropertyChanged("ViewOrder");
					this.OnViewOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visible", DbType="Bit NOT NULL")]
		public bool Visible
		{
			get
			{
				return this._Visible;
			}
			set
			{
				if ((this._Visible != value))
				{
					this.OnVisibleChanging(value);
					this.SendPropertyChanging();
					this._Visible = value;
					this.SendPropertyChanged("Visible");
					this.OnVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultVisibility", DbType="Int")]
		public System.Nullable<int> DefaultVisibility
		{
			get
			{
				return this._DefaultVisibility;
			}
			set
			{
				if ((this._DefaultVisibility != value))
				{
					this.OnDefaultVisibilityChanging(value);
					this.SendPropertyChanging();
					this._DefaultVisibility = value;
					this.SendPropertyChanged("DefaultVisibility");
					this.OnDefaultVisibilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReadOnly", DbType="Bit NOT NULL")]
		public bool ReadOnly
		{
			get
			{
				return this._ReadOnly;
			}
			set
			{
				if ((this._ReadOnly != value))
				{
					this.OnReadOnlyChanging(value);
					this.SendPropertyChanging();
					this._ReadOnly = value;
					this.SendPropertyChanged("ReadOnly");
					this.OnReadOnlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProfilePropertyDefinition_UserProfile", Storage="_UserProfiles", ThisKey="PropertyDefinitionID", OtherKey="PropertyDefinitionID")]
		public EntitySet<UserProfile> UserProfiles
		{
			get
			{
				return this._UserProfiles;
			}
			set
			{
				this._UserProfiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Portal_ProfilePropertyDefinition", Storage="_Portal", ThisKey="PortalID", OtherKey="PortalID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Portal Portal
		{
			get
			{
				return this._Portal.Entity;
			}
			set
			{
				Portal previousValue = this._Portal.Entity;
				if (((previousValue != value) 
							|| (this._Portal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Portal.Entity = null;
						previousValue.ProfilePropertyDefinitions.Remove(this);
					}
					this._Portal.Entity = value;
					if ((value != null))
					{
						value.ProfilePropertyDefinitions.Add(this);
						this._PortalID = value.PortalID;
					}
					else
					{
						this._PortalID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Portal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserProfiles(UserProfile entity)
		{
			this.SendPropertyChanging();
			entity.ProfilePropertyDefinition = this;
		}
		
		private void detach_UserProfiles(UserProfile entity)
		{
			this.SendPropertyChanging();
			entity.ProfilePropertyDefinition = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Relationships")]
	public partial class Relationship : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RelationshipID;
		
		private int _RelationshipTypeID;
		
		private string _Name;
		
		private string _Description;
		
		private System.Nullable<int> _PortalID;
		
		private System.Nullable<int> _UserID;
		
		private int _DefaultResponse;
		
		private int _CreatedByUserID;
		
		private System.DateTime _CreatedOnDate;
		
		private int _LastModifiedByUserID;
		
		private System.DateTime _LastModifiedOnDate;
		
		private EntitySet<UserRelationshipPreference> _UserRelationshipPreferences;
		
		private EntitySet<UserRelationship> _UserRelationships;
		
		private EntityRef<Portal> _Portal;
		
		private EntityRef<RelationshipType> _RelationshipType;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRelationshipIDChanging(int value);
    partial void OnRelationshipIDChanged();
    partial void OnRelationshipTypeIDChanging(int value);
    partial void OnRelationshipTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPortalIDChanging(System.Nullable<int> value);
    partial void OnPortalIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnDefaultResponseChanging(int value);
    partial void OnDefaultResponseChanged();
    partial void OnCreatedByUserIDChanging(int value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.DateTime value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(int value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.DateTime value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public Relationship()
		{
			this._UserRelationshipPreferences = new EntitySet<UserRelationshipPreference>(new Action<UserRelationshipPreference>(this.attach_UserRelationshipPreferences), new Action<UserRelationshipPreference>(this.detach_UserRelationshipPreferences));
			this._UserRelationships = new EntitySet<UserRelationship>(new Action<UserRelationship>(this.attach_UserRelationships), new Action<UserRelationship>(this.detach_UserRelationships));
			this._Portal = default(EntityRef<Portal>);
			this._RelationshipType = default(EntityRef<RelationshipType>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelationshipID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RelationshipID
		{
			get
			{
				return this._RelationshipID;
			}
			set
			{
				if ((this._RelationshipID != value))
				{
					this.OnRelationshipIDChanging(value);
					this.SendPropertyChanging();
					this._RelationshipID = value;
					this.SendPropertyChanged("RelationshipID");
					this.OnRelationshipIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelationshipTypeID", DbType="Int NOT NULL")]
		public int RelationshipTypeID
		{
			get
			{
				return this._RelationshipTypeID;
			}
			set
			{
				if ((this._RelationshipTypeID != value))
				{
					if (this._RelationshipType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRelationshipTypeIDChanging(value);
					this.SendPropertyChanging();
					this._RelationshipTypeID = value;
					this.SendPropertyChanged("RelationshipTypeID");
					this.OnRelationshipTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int")]
		public System.Nullable<int> PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					if (this._Portal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultResponse", DbType="Int NOT NULL")]
		public int DefaultResponse
		{
			get
			{
				return this._DefaultResponse;
			}
			set
			{
				if ((this._DefaultResponse != value))
				{
					this.OnDefaultResponseChanging(value);
					this.SendPropertyChanging();
					this._DefaultResponse = value;
					this.SendPropertyChanged("DefaultResponse");
					this.OnDefaultResponseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int NOT NULL")]
		public int CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int NOT NULL")]
		public int LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Relationship_UserRelationshipPreference", Storage="_UserRelationshipPreferences", ThisKey="RelationshipID", OtherKey="RelationshipID")]
		public EntitySet<UserRelationshipPreference> UserRelationshipPreferences
		{
			get
			{
				return this._UserRelationshipPreferences;
			}
			set
			{
				this._UserRelationshipPreferences.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Relationship_UserRelationship", Storage="_UserRelationships", ThisKey="RelationshipID", OtherKey="RelationshipID")]
		public EntitySet<UserRelationship> UserRelationships
		{
			get
			{
				return this._UserRelationships;
			}
			set
			{
				this._UserRelationships.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Portal_Relationship", Storage="_Portal", ThisKey="PortalID", OtherKey="PortalID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Portal Portal
		{
			get
			{
				return this._Portal.Entity;
			}
			set
			{
				Portal previousValue = this._Portal.Entity;
				if (((previousValue != value) 
							|| (this._Portal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Portal.Entity = null;
						previousValue.Relationships.Remove(this);
					}
					this._Portal.Entity = value;
					if ((value != null))
					{
						value.Relationships.Add(this);
						this._PortalID = value.PortalID;
					}
					else
					{
						this._PortalID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Portal");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RelationshipType_Relationship", Storage="_RelationshipType", ThisKey="RelationshipTypeID", OtherKey="RelationshipTypeID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public RelationshipType RelationshipType
		{
			get
			{
				return this._RelationshipType.Entity;
			}
			set
			{
				RelationshipType previousValue = this._RelationshipType.Entity;
				if (((previousValue != value) 
							|| (this._RelationshipType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RelationshipType.Entity = null;
						previousValue.Relationships.Remove(this);
					}
					this._RelationshipType.Entity = value;
					if ((value != null))
					{
						value.Relationships.Add(this);
						this._RelationshipTypeID = value.RelationshipTypeID;
					}
					else
					{
						this._RelationshipTypeID = default(int);
					}
					this.SendPropertyChanged("RelationshipType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Relationship", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Relationships.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Relationships.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserRelationshipPreferences(UserRelationshipPreference entity)
		{
			this.SendPropertyChanging();
			entity.Relationship = this;
		}
		
		private void detach_UserRelationshipPreferences(UserRelationshipPreference entity)
		{
			this.SendPropertyChanging();
			entity.Relationship = null;
		}
		
		private void attach_UserRelationships(UserRelationship entity)
		{
			this.SendPropertyChanging();
			entity.Relationship = this;
		}
		
		private void detach_UserRelationships(UserRelationship entity)
		{
			this.SendPropertyChanging();
			entity.Relationship = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RelationshipTypes")]
	public partial class RelationshipType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RelationshipTypeID;
		
		private int _Direction;
		
		private string _Name;
		
		private string _Description;
		
		private int _CreatedByUserID;
		
		private System.DateTime _CreatedOnDate;
		
		private int _LastModifiedByUserID;
		
		private System.DateTime _LastModifiedOnDate;
		
		private EntitySet<Relationship> _Relationships;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRelationshipTypeIDChanging(int value);
    partial void OnRelationshipTypeIDChanged();
    partial void OnDirectionChanging(int value);
    partial void OnDirectionChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedByUserIDChanging(int value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.DateTime value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(int value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.DateTime value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public RelationshipType()
		{
			this._Relationships = new EntitySet<Relationship>(new Action<Relationship>(this.attach_Relationships), new Action<Relationship>(this.detach_Relationships));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelationshipTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RelationshipTypeID
		{
			get
			{
				return this._RelationshipTypeID;
			}
			set
			{
				if ((this._RelationshipTypeID != value))
				{
					this.OnRelationshipTypeIDChanging(value);
					this.SendPropertyChanging();
					this._RelationshipTypeID = value;
					this.SendPropertyChanged("RelationshipTypeID");
					this.OnRelationshipTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direction", DbType="Int NOT NULL")]
		public int Direction
		{
			get
			{
				return this._Direction;
			}
			set
			{
				if ((this._Direction != value))
				{
					this.OnDirectionChanging(value);
					this.SendPropertyChanging();
					this._Direction = value;
					this.SendPropertyChanged("Direction");
					this.OnDirectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int NOT NULL")]
		public int CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int NOT NULL")]
		public int LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RelationshipType_Relationship", Storage="_Relationships", ThisKey="RelationshipTypeID", OtherKey="RelationshipTypeID")]
		public EntitySet<Relationship> Relationships
		{
			get
			{
				return this._Relationships;
			}
			set
			{
				this._Relationships.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Relationships(Relationship entity)
		{
			this.SendPropertyChanging();
			entity.RelationshipType = this;
		}
		
		private void detach_Relationships(Relationship entity)
		{
			this.SendPropertyChanging();
			entity.RelationshipType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RoleGroups")]
	public partial class RoleGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoleGroupID;
		
		private int _PortalID;
		
		private string _RoleGroupName;
		
		private string _Description;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntitySet<Role> _Roles;
		
		private EntityRef<Portal> _Portal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleGroupIDChanging(int value);
    partial void OnRoleGroupIDChanged();
    partial void OnPortalIDChanging(int value);
    partial void OnPortalIDChanged();
    partial void OnRoleGroupNameChanging(string value);
    partial void OnRoleGroupNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public RoleGroup()
		{
			this._Roles = new EntitySet<Role>(new Action<Role>(this.attach_Roles), new Action<Role>(this.detach_Roles));
			this._Portal = default(EntityRef<Portal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleGroupID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RoleGroupID
		{
			get
			{
				return this._RoleGroupID;
			}
			set
			{
				if ((this._RoleGroupID != value))
				{
					this.OnRoleGroupIDChanging(value);
					this.SendPropertyChanging();
					this._RoleGroupID = value;
					this.SendPropertyChanged("RoleGroupID");
					this.OnRoleGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int NOT NULL")]
		public int PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					if (this._Portal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleGroupName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RoleGroupName
		{
			get
			{
				return this._RoleGroupName;
			}
			set
			{
				if ((this._RoleGroupName != value))
				{
					this.OnRoleGroupNameChanging(value);
					this.SendPropertyChanging();
					this._RoleGroupName = value;
					this.SendPropertyChanged("RoleGroupName");
					this.OnRoleGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(1000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoleGroup_Role", Storage="_Roles", ThisKey="RoleGroupID", OtherKey="RoleGroupID")]
		public EntitySet<Role> Roles
		{
			get
			{
				return this._Roles;
			}
			set
			{
				this._Roles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Portal_RoleGroup", Storage="_Portal", ThisKey="PortalID", OtherKey="PortalID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Portal Portal
		{
			get
			{
				return this._Portal.Entity;
			}
			set
			{
				Portal previousValue = this._Portal.Entity;
				if (((previousValue != value) 
							|| (this._Portal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Portal.Entity = null;
						previousValue.RoleGroups.Remove(this);
					}
					this._Portal.Entity = value;
					if ((value != null))
					{
						value.RoleGroups.Add(this);
						this._PortalID = value.PortalID;
					}
					else
					{
						this._PortalID = default(int);
					}
					this.SendPropertyChanged("Portal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Roles(Role entity)
		{
			this.SendPropertyChanging();
			entity.RoleGroup = this;
		}
		
		private void detach_Roles(Role entity)
		{
			this.SendPropertyChanging();
			entity.RoleGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Roles")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoleID;
		
		private int _PortalID;
		
		private string _RoleName;
		
		private string _Description;
		
		private System.Nullable<decimal> _ServiceFee;
		
		private System.Nullable<char> _BillingFrequency;
		
		private System.Nullable<int> _TrialPeriod;
		
		private System.Nullable<char> _TrialFrequency;
		
		private System.Nullable<int> _BillingPeriod;
		
		private System.Nullable<decimal> _TrialFee;
		
		private bool _IsPublic;
		
		private bool _AutoAssignment;
		
		private System.Nullable<int> _RoleGroupID;
		
		private string _RSVPCode;
		
		private string _IconFile;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private int _Status;
		
		private int _SecurityMode;
		
		private EntitySet<UserRole> _UserRoles;
		
		private EntityRef<Portal> _Portal;
		
		private EntityRef<RoleGroup> _RoleGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnPortalIDChanging(int value);
    partial void OnPortalIDChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnServiceFeeChanging(System.Nullable<decimal> value);
    partial void OnServiceFeeChanged();
    partial void OnBillingFrequencyChanging(System.Nullable<char> value);
    partial void OnBillingFrequencyChanged();
    partial void OnTrialPeriodChanging(System.Nullable<int> value);
    partial void OnTrialPeriodChanged();
    partial void OnTrialFrequencyChanging(System.Nullable<char> value);
    partial void OnTrialFrequencyChanged();
    partial void OnBillingPeriodChanging(System.Nullable<int> value);
    partial void OnBillingPeriodChanged();
    partial void OnTrialFeeChanging(System.Nullable<decimal> value);
    partial void OnTrialFeeChanged();
    partial void OnIsPublicChanging(bool value);
    partial void OnIsPublicChanged();
    partial void OnAutoAssignmentChanging(bool value);
    partial void OnAutoAssignmentChanged();
    partial void OnRoleGroupIDChanging(System.Nullable<int> value);
    partial void OnRoleGroupIDChanged();
    partial void OnRSVPCodeChanging(string value);
    partial void OnRSVPCodeChanged();
    partial void OnIconFileChanging(string value);
    partial void OnIconFileChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnSecurityModeChanging(int value);
    partial void OnSecurityModeChanged();
    #endregion
		
		public Role()
		{
			this._UserRoles = new EntitySet<UserRole>(new Action<UserRole>(this.attach_UserRoles), new Action<UserRole>(this.detach_UserRoles));
			this._Portal = default(EntityRef<Portal>);
			this._RoleGroup = default(EntityRef<RoleGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int NOT NULL")]
		public int PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					if (this._Portal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(1000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceFee", DbType="Money")]
		public System.Nullable<decimal> ServiceFee
		{
			get
			{
				return this._ServiceFee;
			}
			set
			{
				if ((this._ServiceFee != value))
				{
					this.OnServiceFeeChanging(value);
					this.SendPropertyChanging();
					this._ServiceFee = value;
					this.SendPropertyChanged("ServiceFee");
					this.OnServiceFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingFrequency", DbType="Char(1)")]
		public System.Nullable<char> BillingFrequency
		{
			get
			{
				return this._BillingFrequency;
			}
			set
			{
				if ((this._BillingFrequency != value))
				{
					this.OnBillingFrequencyChanging(value);
					this.SendPropertyChanging();
					this._BillingFrequency = value;
					this.SendPropertyChanged("BillingFrequency");
					this.OnBillingFrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrialPeriod", DbType="Int")]
		public System.Nullable<int> TrialPeriod
		{
			get
			{
				return this._TrialPeriod;
			}
			set
			{
				if ((this._TrialPeriod != value))
				{
					this.OnTrialPeriodChanging(value);
					this.SendPropertyChanging();
					this._TrialPeriod = value;
					this.SendPropertyChanged("TrialPeriod");
					this.OnTrialPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrialFrequency", DbType="Char(1)")]
		public System.Nullable<char> TrialFrequency
		{
			get
			{
				return this._TrialFrequency;
			}
			set
			{
				if ((this._TrialFrequency != value))
				{
					this.OnTrialFrequencyChanging(value);
					this.SendPropertyChanging();
					this._TrialFrequency = value;
					this.SendPropertyChanged("TrialFrequency");
					this.OnTrialFrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingPeriod", DbType="Int")]
		public System.Nullable<int> BillingPeriod
		{
			get
			{
				return this._BillingPeriod;
			}
			set
			{
				if ((this._BillingPeriod != value))
				{
					this.OnBillingPeriodChanging(value);
					this.SendPropertyChanging();
					this._BillingPeriod = value;
					this.SendPropertyChanged("BillingPeriod");
					this.OnBillingPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrialFee", DbType="Money")]
		public System.Nullable<decimal> TrialFee
		{
			get
			{
				return this._TrialFee;
			}
			set
			{
				if ((this._TrialFee != value))
				{
					this.OnTrialFeeChanging(value);
					this.SendPropertyChanging();
					this._TrialFee = value;
					this.SendPropertyChanged("TrialFee");
					this.OnTrialFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPublic", DbType="Bit NOT NULL")]
		public bool IsPublic
		{
			get
			{
				return this._IsPublic;
			}
			set
			{
				if ((this._IsPublic != value))
				{
					this.OnIsPublicChanging(value);
					this.SendPropertyChanging();
					this._IsPublic = value;
					this.SendPropertyChanged("IsPublic");
					this.OnIsPublicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoAssignment", DbType="Bit NOT NULL")]
		public bool AutoAssignment
		{
			get
			{
				return this._AutoAssignment;
			}
			set
			{
				if ((this._AutoAssignment != value))
				{
					this.OnAutoAssignmentChanging(value);
					this.SendPropertyChanging();
					this._AutoAssignment = value;
					this.SendPropertyChanged("AutoAssignment");
					this.OnAutoAssignmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleGroupID", DbType="Int")]
		public System.Nullable<int> RoleGroupID
		{
			get
			{
				return this._RoleGroupID;
			}
			set
			{
				if ((this._RoleGroupID != value))
				{
					if (this._RoleGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleGroupIDChanging(value);
					this.SendPropertyChanging();
					this._RoleGroupID = value;
					this.SendPropertyChanged("RoleGroupID");
					this.OnRoleGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RSVPCode", DbType="NVarChar(50)")]
		public string RSVPCode
		{
			get
			{
				return this._RSVPCode;
			}
			set
			{
				if ((this._RSVPCode != value))
				{
					this.OnRSVPCodeChanging(value);
					this.SendPropertyChanging();
					this._RSVPCode = value;
					this.SendPropertyChanged("RSVPCode");
					this.OnRSVPCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IconFile", DbType="NVarChar(100)")]
		public string IconFile
		{
			get
			{
				return this._IconFile;
			}
			set
			{
				if ((this._IconFile != value))
				{
					this.OnIconFileChanging(value);
					this.SendPropertyChanging();
					this._IconFile = value;
					this.SendPropertyChanged("IconFile");
					this.OnIconFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityMode", DbType="Int NOT NULL")]
		public int SecurityMode
		{
			get
			{
				return this._SecurityMode;
			}
			set
			{
				if ((this._SecurityMode != value))
				{
					this.OnSecurityModeChanging(value);
					this.SendPropertyChanging();
					this._SecurityMode = value;
					this.SendPropertyChanged("SecurityMode");
					this.OnSecurityModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_UserRole", Storage="_UserRoles", ThisKey="RoleID", OtherKey="RoleID")]
		public EntitySet<UserRole> UserRoles
		{
			get
			{
				return this._UserRoles;
			}
			set
			{
				this._UserRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Portal_Role", Storage="_Portal", ThisKey="PortalID", OtherKey="PortalID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Portal Portal
		{
			get
			{
				return this._Portal.Entity;
			}
			set
			{
				Portal previousValue = this._Portal.Entity;
				if (((previousValue != value) 
							|| (this._Portal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Portal.Entity = null;
						previousValue.Roles.Remove(this);
					}
					this._Portal.Entity = value;
					if ((value != null))
					{
						value.Roles.Add(this);
						this._PortalID = value.PortalID;
					}
					else
					{
						this._PortalID = default(int);
					}
					this.SendPropertyChanged("Portal");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoleGroup_Role", Storage="_RoleGroup", ThisKey="RoleGroupID", OtherKey="RoleGroupID", IsForeignKey=true)]
		public RoleGroup RoleGroup
		{
			get
			{
				return this._RoleGroup.Entity;
			}
			set
			{
				RoleGroup previousValue = this._RoleGroup.Entity;
				if (((previousValue != value) 
							|| (this._RoleGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RoleGroup.Entity = null;
						previousValue.Roles.Remove(this);
					}
					this._RoleGroup.Entity = value;
					if ((value != null))
					{
						value.Roles.Add(this);
						this._RoleGroupID = value.RoleGroupID;
					}
					else
					{
						this._RoleGroupID = default(Nullable<int>);
					}
					this.SendPropertyChanged("RoleGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserRoles(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_UserRoles(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RoleSettings")]
	public partial class RoleSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoleSettingID;
		
		private int _RoleID;
		
		private string _SettingName;
		
		private string _SettingValue;
		
		private int _CreatedByUserID;
		
		private System.DateTime _CreatedOnDate;
		
		private int _LastModifiedByUserID;
		
		private System.DateTime _LastModifiedOnDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleSettingIDChanging(int value);
    partial void OnRoleSettingIDChanged();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnSettingNameChanging(string value);
    partial void OnSettingNameChanged();
    partial void OnSettingValueChanging(string value);
    partial void OnSettingValueChanged();
    partial void OnCreatedByUserIDChanging(int value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.DateTime value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(int value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.DateTime value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public RoleSetting()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleSettingID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RoleSettingID
		{
			get
			{
				return this._RoleSettingID;
			}
			set
			{
				if ((this._RoleSettingID != value))
				{
					this.OnRoleSettingIDChanging(value);
					this.SendPropertyChanging();
					this._RoleSettingID = value;
					this.SendPropertyChanged("RoleSettingID");
					this.OnRoleSettingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL")]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SettingName
		{
			get
			{
				return this._SettingName;
			}
			set
			{
				if ((this._SettingName != value))
				{
					this.OnSettingNameChanging(value);
					this.SendPropertyChanging();
					this._SettingName = value;
					this.SendPropertyChanged("SettingName");
					this.OnSettingNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingValue", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string SettingValue
		{
			get
			{
				return this._SettingValue;
			}
			set
			{
				if ((this._SettingValue != value))
				{
					this.OnSettingValueChanging(value);
					this.SendPropertyChanging();
					this._SettingValue = value;
					this.SendPropertyChanged("SettingValue");
					this.OnSettingValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int NOT NULL")]
		public int CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int NOT NULL")]
		public int LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Schedule")]
	public partial class Schedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ScheduleID;
		
		private string _TypeFullName;
		
		private int _TimeLapse;
		
		private string _TimeLapseMeasurement;
		
		private int _RetryTimeLapse;
		
		private string _RetryTimeLapseMeasurement;
		
		private int _RetainHistoryNum;
		
		private string _AttachToEvent;
		
		private bool _CatchUpEnabled;
		
		private bool _Enabled;
		
		private string _ObjectDependencies;
		
		private string _Servers;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private string _FriendlyName;
		
		private EntitySet<ScheduleHistory> _ScheduleHistories;
		
		private EntitySet<ScheduleItemSetting> _ScheduleItemSettings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnScheduleIDChanging(int value);
    partial void OnScheduleIDChanged();
    partial void OnTypeFullNameChanging(string value);
    partial void OnTypeFullNameChanged();
    partial void OnTimeLapseChanging(int value);
    partial void OnTimeLapseChanged();
    partial void OnTimeLapseMeasurementChanging(string value);
    partial void OnTimeLapseMeasurementChanged();
    partial void OnRetryTimeLapseChanging(int value);
    partial void OnRetryTimeLapseChanged();
    partial void OnRetryTimeLapseMeasurementChanging(string value);
    partial void OnRetryTimeLapseMeasurementChanged();
    partial void OnRetainHistoryNumChanging(int value);
    partial void OnRetainHistoryNumChanged();
    partial void OnAttachToEventChanging(string value);
    partial void OnAttachToEventChanged();
    partial void OnCatchUpEnabledChanging(bool value);
    partial void OnCatchUpEnabledChanged();
    partial void OnEnabledChanging(bool value);
    partial void OnEnabledChanged();
    partial void OnObjectDependenciesChanging(string value);
    partial void OnObjectDependenciesChanged();
    partial void OnServersChanging(string value);
    partial void OnServersChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    partial void OnFriendlyNameChanging(string value);
    partial void OnFriendlyNameChanged();
    #endregion
		
		public Schedule()
		{
			this._ScheduleHistories = new EntitySet<ScheduleHistory>(new Action<ScheduleHistory>(this.attach_ScheduleHistories), new Action<ScheduleHistory>(this.detach_ScheduleHistories));
			this._ScheduleItemSettings = new EntitySet<ScheduleItemSetting>(new Action<ScheduleItemSetting>(this.attach_ScheduleItemSettings), new Action<ScheduleItemSetting>(this.detach_ScheduleItemSettings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ScheduleID
		{
			get
			{
				return this._ScheduleID;
			}
			set
			{
				if ((this._ScheduleID != value))
				{
					this.OnScheduleIDChanging(value);
					this.SendPropertyChanging();
					this._ScheduleID = value;
					this.SendPropertyChanged("ScheduleID");
					this.OnScheduleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeFullName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string TypeFullName
		{
			get
			{
				return this._TypeFullName;
			}
			set
			{
				if ((this._TypeFullName != value))
				{
					this.OnTypeFullNameChanging(value);
					this.SendPropertyChanging();
					this._TypeFullName = value;
					this.SendPropertyChanged("TypeFullName");
					this.OnTypeFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeLapse", DbType="Int NOT NULL")]
		public int TimeLapse
		{
			get
			{
				return this._TimeLapse;
			}
			set
			{
				if ((this._TimeLapse != value))
				{
					this.OnTimeLapseChanging(value);
					this.SendPropertyChanging();
					this._TimeLapse = value;
					this.SendPropertyChanged("TimeLapse");
					this.OnTimeLapseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeLapseMeasurement", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string TimeLapseMeasurement
		{
			get
			{
				return this._TimeLapseMeasurement;
			}
			set
			{
				if ((this._TimeLapseMeasurement != value))
				{
					this.OnTimeLapseMeasurementChanging(value);
					this.SendPropertyChanging();
					this._TimeLapseMeasurement = value;
					this.SendPropertyChanged("TimeLapseMeasurement");
					this.OnTimeLapseMeasurementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RetryTimeLapse", DbType="Int NOT NULL")]
		public int RetryTimeLapse
		{
			get
			{
				return this._RetryTimeLapse;
			}
			set
			{
				if ((this._RetryTimeLapse != value))
				{
					this.OnRetryTimeLapseChanging(value);
					this.SendPropertyChanging();
					this._RetryTimeLapse = value;
					this.SendPropertyChanged("RetryTimeLapse");
					this.OnRetryTimeLapseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RetryTimeLapseMeasurement", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string RetryTimeLapseMeasurement
		{
			get
			{
				return this._RetryTimeLapseMeasurement;
			}
			set
			{
				if ((this._RetryTimeLapseMeasurement != value))
				{
					this.OnRetryTimeLapseMeasurementChanging(value);
					this.SendPropertyChanging();
					this._RetryTimeLapseMeasurement = value;
					this.SendPropertyChanged("RetryTimeLapseMeasurement");
					this.OnRetryTimeLapseMeasurementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RetainHistoryNum", DbType="Int NOT NULL")]
		public int RetainHistoryNum
		{
			get
			{
				return this._RetainHistoryNum;
			}
			set
			{
				if ((this._RetainHistoryNum != value))
				{
					this.OnRetainHistoryNumChanging(value);
					this.SendPropertyChanging();
					this._RetainHistoryNum = value;
					this.SendPropertyChanged("RetainHistoryNum");
					this.OnRetainHistoryNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachToEvent", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AttachToEvent
		{
			get
			{
				return this._AttachToEvent;
			}
			set
			{
				if ((this._AttachToEvent != value))
				{
					this.OnAttachToEventChanging(value);
					this.SendPropertyChanging();
					this._AttachToEvent = value;
					this.SendPropertyChanged("AttachToEvent");
					this.OnAttachToEventChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatchUpEnabled", DbType="Bit NOT NULL")]
		public bool CatchUpEnabled
		{
			get
			{
				return this._CatchUpEnabled;
			}
			set
			{
				if ((this._CatchUpEnabled != value))
				{
					this.OnCatchUpEnabledChanging(value);
					this.SendPropertyChanging();
					this._CatchUpEnabled = value;
					this.SendPropertyChanged("CatchUpEnabled");
					this.OnCatchUpEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", DbType="Bit NOT NULL")]
		public bool Enabled
		{
			get
			{
				return this._Enabled;
			}
			set
			{
				if ((this._Enabled != value))
				{
					this.OnEnabledChanging(value);
					this.SendPropertyChanging();
					this._Enabled = value;
					this.SendPropertyChanged("Enabled");
					this.OnEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectDependencies", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		public string ObjectDependencies
		{
			get
			{
				return this._ObjectDependencies;
			}
			set
			{
				if ((this._ObjectDependencies != value))
				{
					this.OnObjectDependenciesChanging(value);
					this.SendPropertyChanging();
					this._ObjectDependencies = value;
					this.SendPropertyChanged("ObjectDependencies");
					this.OnObjectDependenciesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Servers", DbType="NVarChar(2000)")]
		public string Servers
		{
			get
			{
				return this._Servers;
			}
			set
			{
				if ((this._Servers != value))
				{
					this.OnServersChanging(value);
					this.SendPropertyChanging();
					this._Servers = value;
					this.SendPropertyChanged("Servers");
					this.OnServersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FriendlyName", DbType="NVarChar(200)")]
		public string FriendlyName
		{
			get
			{
				return this._FriendlyName;
			}
			set
			{
				if ((this._FriendlyName != value))
				{
					this.OnFriendlyNameChanging(value);
					this.SendPropertyChanging();
					this._FriendlyName = value;
					this.SendPropertyChanged("FriendlyName");
					this.OnFriendlyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Schedule_ScheduleHistory", Storage="_ScheduleHistories", ThisKey="ScheduleID", OtherKey="ScheduleID")]
		public EntitySet<ScheduleHistory> ScheduleHistories
		{
			get
			{
				return this._ScheduleHistories;
			}
			set
			{
				this._ScheduleHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Schedule_ScheduleItemSetting", Storage="_ScheduleItemSettings", ThisKey="ScheduleID", OtherKey="ScheduleID")]
		public EntitySet<ScheduleItemSetting> ScheduleItemSettings
		{
			get
			{
				return this._ScheduleItemSettings;
			}
			set
			{
				this._ScheduleItemSettings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ScheduleHistories(ScheduleHistory entity)
		{
			this.SendPropertyChanging();
			entity.Schedule = this;
		}
		
		private void detach_ScheduleHistories(ScheduleHistory entity)
		{
			this.SendPropertyChanging();
			entity.Schedule = null;
		}
		
		private void attach_ScheduleItemSettings(ScheduleItemSetting entity)
		{
			this.SendPropertyChanging();
			entity.Schedule = this;
		}
		
		private void detach_ScheduleItemSettings(ScheduleItemSetting entity)
		{
			this.SendPropertyChanging();
			entity.Schedule = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ScheduleHistory")]
	public partial class ScheduleHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ScheduleHistoryID;
		
		private int _ScheduleID;
		
		private System.DateTime _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<bool> _Succeeded;
		
		private string _LogNotes;
		
		private System.Nullable<System.DateTime> _NextStart;
		
		private string _Server;
		
		private EntityRef<Schedule> _Schedule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnScheduleHistoryIDChanging(int value);
    partial void OnScheduleHistoryIDChanged();
    partial void OnScheduleIDChanging(int value);
    partial void OnScheduleIDChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnSucceededChanging(System.Nullable<bool> value);
    partial void OnSucceededChanged();
    partial void OnLogNotesChanging(string value);
    partial void OnLogNotesChanged();
    partial void OnNextStartChanging(System.Nullable<System.DateTime> value);
    partial void OnNextStartChanged();
    partial void OnServerChanging(string value);
    partial void OnServerChanged();
    #endregion
		
		public ScheduleHistory()
		{
			this._Schedule = default(EntityRef<Schedule>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleHistoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ScheduleHistoryID
		{
			get
			{
				return this._ScheduleHistoryID;
			}
			set
			{
				if ((this._ScheduleHistoryID != value))
				{
					this.OnScheduleHistoryIDChanging(value);
					this.SendPropertyChanging();
					this._ScheduleHistoryID = value;
					this.SendPropertyChanged("ScheduleHistoryID");
					this.OnScheduleHistoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleID", DbType="Int NOT NULL")]
		public int ScheduleID
		{
			get
			{
				return this._ScheduleID;
			}
			set
			{
				if ((this._ScheduleID != value))
				{
					if (this._Schedule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheduleIDChanging(value);
					this.SendPropertyChanging();
					this._ScheduleID = value;
					this.SendPropertyChanged("ScheduleID");
					this.OnScheduleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Succeeded", DbType="Bit")]
		public System.Nullable<bool> Succeeded
		{
			get
			{
				return this._Succeeded;
			}
			set
			{
				if ((this._Succeeded != value))
				{
					this.OnSucceededChanging(value);
					this.SendPropertyChanging();
					this._Succeeded = value;
					this.SendPropertyChanged("Succeeded");
					this.OnSucceededChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogNotes", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string LogNotes
		{
			get
			{
				return this._LogNotes;
			}
			set
			{
				if ((this._LogNotes != value))
				{
					this.OnLogNotesChanging(value);
					this.SendPropertyChanging();
					this._LogNotes = value;
					this.SendPropertyChanged("LogNotes");
					this.OnLogNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextStart", DbType="DateTime")]
		public System.Nullable<System.DateTime> NextStart
		{
			get
			{
				return this._NextStart;
			}
			set
			{
				if ((this._NextStart != value))
				{
					this.OnNextStartChanging(value);
					this.SendPropertyChanging();
					this._NextStart = value;
					this.SendPropertyChanged("NextStart");
					this.OnNextStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Server", DbType="NVarChar(150)")]
		public string Server
		{
			get
			{
				return this._Server;
			}
			set
			{
				if ((this._Server != value))
				{
					this.OnServerChanging(value);
					this.SendPropertyChanging();
					this._Server = value;
					this.SendPropertyChanged("Server");
					this.OnServerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Schedule_ScheduleHistory", Storage="_Schedule", ThisKey="ScheduleID", OtherKey="ScheduleID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Schedule Schedule
		{
			get
			{
				return this._Schedule.Entity;
			}
			set
			{
				Schedule previousValue = this._Schedule.Entity;
				if (((previousValue != value) 
							|| (this._Schedule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Schedule.Entity = null;
						previousValue.ScheduleHistories.Remove(this);
					}
					this._Schedule.Entity = value;
					if ((value != null))
					{
						value.ScheduleHistories.Add(this);
						this._ScheduleID = value.ScheduleID;
					}
					else
					{
						this._ScheduleID = default(int);
					}
					this.SendPropertyChanged("Schedule");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ScheduleItemSettings")]
	public partial class ScheduleItemSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ScheduleID;
		
		private string _SettingName;
		
		private string _SettingValue;
		
		private EntityRef<Schedule> _Schedule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnScheduleIDChanging(int value);
    partial void OnScheduleIDChanged();
    partial void OnSettingNameChanging(string value);
    partial void OnSettingNameChanged();
    partial void OnSettingValueChanging(string value);
    partial void OnSettingValueChanged();
    #endregion
		
		public ScheduleItemSetting()
		{
			this._Schedule = default(EntityRef<Schedule>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ScheduleID
		{
			get
			{
				return this._ScheduleID;
			}
			set
			{
				if ((this._ScheduleID != value))
				{
					if (this._Schedule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheduleIDChanging(value);
					this.SendPropertyChanging();
					this._ScheduleID = value;
					this.SendPropertyChanged("ScheduleID");
					this.OnScheduleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SettingName
		{
			get
			{
				return this._SettingName;
			}
			set
			{
				if ((this._SettingName != value))
				{
					this.OnSettingNameChanging(value);
					this.SendPropertyChanging();
					this._SettingName = value;
					this.SendPropertyChanged("SettingName");
					this.OnSettingNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingValue", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string SettingValue
		{
			get
			{
				return this._SettingValue;
			}
			set
			{
				if ((this._SettingValue != value))
				{
					this.OnSettingValueChanging(value);
					this.SendPropertyChanging();
					this._SettingValue = value;
					this.SendPropertyChanged("SettingValue");
					this.OnSettingValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Schedule_ScheduleItemSetting", Storage="_Schedule", ThisKey="ScheduleID", OtherKey="ScheduleID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Schedule Schedule
		{
			get
			{
				return this._Schedule.Entity;
			}
			set
			{
				Schedule previousValue = this._Schedule.Entity;
				if (((previousValue != value) 
							|| (this._Schedule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Schedule.Entity = null;
						previousValue.ScheduleItemSettings.Remove(this);
					}
					this._Schedule.Entity = value;
					if ((value != null))
					{
						value.ScheduleItemSettings.Add(this);
						this._ScheduleID = value.ScheduleID;
					}
					else
					{
						this._ScheduleID = default(int);
					}
					this.SendPropertyChanged("Schedule");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SearchCommonWords")]
	public partial class SearchCommonWord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CommonWordID;
		
		private string _CommonWord;
		
		private string _Locale;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCommonWordIDChanging(int value);
    partial void OnCommonWordIDChanged();
    partial void OnCommonWordChanging(string value);
    partial void OnCommonWordChanged();
    partial void OnLocaleChanging(string value);
    partial void OnLocaleChanged();
    #endregion
		
		public SearchCommonWord()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommonWordID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CommonWordID
		{
			get
			{
				return this._CommonWordID;
			}
			set
			{
				if ((this._CommonWordID != value))
				{
					this.OnCommonWordIDChanging(value);
					this.SendPropertyChanging();
					this._CommonWordID = value;
					this.SendPropertyChanged("CommonWordID");
					this.OnCommonWordIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommonWord", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string CommonWord
		{
			get
			{
				return this._CommonWord;
			}
			set
			{
				if ((this._CommonWord != value))
				{
					this.OnCommonWordChanging(value);
					this.SendPropertyChanging();
					this._CommonWord = value;
					this.SendPropertyChanged("CommonWord");
					this.OnCommonWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Locale", DbType="NVarChar(10)")]
		public string Locale
		{
			get
			{
				return this._Locale;
			}
			set
			{
				if ((this._Locale != value))
				{
					this.OnLocaleChanging(value);
					this.SendPropertyChanging();
					this._Locale = value;
					this.SendPropertyChanged("Locale");
					this.OnLocaleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SearchIndexer")]
	public partial class SearchIndexer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SearchIndexerID;
		
		private string _SearchIndexerAssemblyQualifiedName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSearchIndexerIDChanging(int value);
    partial void OnSearchIndexerIDChanged();
    partial void OnSearchIndexerAssemblyQualifiedNameChanging(string value);
    partial void OnSearchIndexerAssemblyQualifiedNameChanged();
    #endregion
		
		public SearchIndexer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchIndexerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SearchIndexerID
		{
			get
			{
				return this._SearchIndexerID;
			}
			set
			{
				if ((this._SearchIndexerID != value))
				{
					this.OnSearchIndexerIDChanging(value);
					this.SendPropertyChanging();
					this._SearchIndexerID = value;
					this.SendPropertyChanged("SearchIndexerID");
					this.OnSearchIndexerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchIndexerAssemblyQualifiedName", DbType="Char(200) NOT NULL", CanBeNull=false)]
		public string SearchIndexerAssemblyQualifiedName
		{
			get
			{
				return this._SearchIndexerAssemblyQualifiedName;
			}
			set
			{
				if ((this._SearchIndexerAssemblyQualifiedName != value))
				{
					this.OnSearchIndexerAssemblyQualifiedNameChanging(value);
					this.SendPropertyChanging();
					this._SearchIndexerAssemblyQualifiedName = value;
					this.SendPropertyChanged("SearchIndexerAssemblyQualifiedName");
					this.OnSearchIndexerAssemblyQualifiedNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SearchItem")]
	public partial class SearchItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SearchItemID;
		
		private string _Title;
		
		private string _Description;
		
		private System.Nullable<int> _Author;
		
		private System.DateTime _PubDate;
		
		private int _ModuleId;
		
		private string _SearchKey;
		
		private string _Guid;
		
		private System.Nullable<int> _HitCount;
		
		private System.Nullable<int> _ImageFileId;
		
		private EntitySet<SearchItemWord> _SearchItemWords;
		
		private EntityRef<Module> _Module;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSearchItemIDChanging(int value);
    partial void OnSearchItemIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAuthorChanging(System.Nullable<int> value);
    partial void OnAuthorChanged();
    partial void OnPubDateChanging(System.DateTime value);
    partial void OnPubDateChanged();
    partial void OnModuleIdChanging(int value);
    partial void OnModuleIdChanged();
    partial void OnSearchKeyChanging(string value);
    partial void OnSearchKeyChanged();
    partial void OnGuidChanging(string value);
    partial void OnGuidChanged();
    partial void OnHitCountChanging(System.Nullable<int> value);
    partial void OnHitCountChanged();
    partial void OnImageFileIdChanging(System.Nullable<int> value);
    partial void OnImageFileIdChanged();
    #endregion
		
		public SearchItem()
		{
			this._SearchItemWords = new EntitySet<SearchItemWord>(new Action<SearchItemWord>(this.attach_SearchItemWords), new Action<SearchItemWord>(this.detach_SearchItemWords));
			this._Module = default(EntityRef<Module>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SearchItemID
		{
			get
			{
				return this._SearchItemID;
			}
			set
			{
				if ((this._SearchItemID != value))
				{
					this.OnSearchItemIDChanging(value);
					this.SendPropertyChanging();
					this._SearchItemID = value;
					this.SendPropertyChanged("SearchItemID");
					this.OnSearchItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="Int")]
		public System.Nullable<int> Author
		{
			get
			{
				return this._Author;
			}
			set
			{
				if ((this._Author != value))
				{
					this.OnAuthorChanging(value);
					this.SendPropertyChanging();
					this._Author = value;
					this.SendPropertyChanged("Author");
					this.OnAuthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PubDate", DbType="DateTime NOT NULL")]
		public System.DateTime PubDate
		{
			get
			{
				return this._PubDate;
			}
			set
			{
				if ((this._PubDate != value))
				{
					this.OnPubDateChanging(value);
					this.SendPropertyChanging();
					this._PubDate = value;
					this.SendPropertyChanged("PubDate");
					this.OnPubDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleId", DbType="Int NOT NULL")]
		public int ModuleId
		{
			get
			{
				return this._ModuleId;
			}
			set
			{
				if ((this._ModuleId != value))
				{
					if (this._Module.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleIdChanging(value);
					this.SendPropertyChanging();
					this._ModuleId = value;
					this.SendPropertyChanged("ModuleId");
					this.OnModuleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchKey", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SearchKey
		{
			get
			{
				return this._SearchKey;
			}
			set
			{
				if ((this._SearchKey != value))
				{
					this.OnSearchKeyChanging(value);
					this.SendPropertyChanging();
					this._SearchKey = value;
					this.SendPropertyChanged("SearchKey");
					this.OnSearchKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Guid", DbType="VarChar(200)")]
		public string Guid
		{
			get
			{
				return this._Guid;
			}
			set
			{
				if ((this._Guid != value))
				{
					this.OnGuidChanging(value);
					this.SendPropertyChanging();
					this._Guid = value;
					this.SendPropertyChanged("Guid");
					this.OnGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HitCount", DbType="Int")]
		public System.Nullable<int> HitCount
		{
			get
			{
				return this._HitCount;
			}
			set
			{
				if ((this._HitCount != value))
				{
					this.OnHitCountChanging(value);
					this.SendPropertyChanging();
					this._HitCount = value;
					this.SendPropertyChanged("HitCount");
					this.OnHitCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageFileId", DbType="Int")]
		public System.Nullable<int> ImageFileId
		{
			get
			{
				return this._ImageFileId;
			}
			set
			{
				if ((this._ImageFileId != value))
				{
					this.OnImageFileIdChanging(value);
					this.SendPropertyChanging();
					this._ImageFileId = value;
					this.SendPropertyChanged("ImageFileId");
					this.OnImageFileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SearchItem_SearchItemWord", Storage="_SearchItemWords", ThisKey="SearchItemID", OtherKey="SearchItemID")]
		public EntitySet<SearchItemWord> SearchItemWords
		{
			get
			{
				return this._SearchItemWords;
			}
			set
			{
				this._SearchItemWords.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Module_SearchItem", Storage="_Module", ThisKey="ModuleId", OtherKey="ModuleID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Module Module
		{
			get
			{
				return this._Module.Entity;
			}
			set
			{
				Module previousValue = this._Module.Entity;
				if (((previousValue != value) 
							|| (this._Module.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Module.Entity = null;
						previousValue.SearchItems.Remove(this);
					}
					this._Module.Entity = value;
					if ((value != null))
					{
						value.SearchItems.Add(this);
						this._ModuleId = value.ModuleID;
					}
					else
					{
						this._ModuleId = default(int);
					}
					this.SendPropertyChanged("Module");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SearchItemWords(SearchItemWord entity)
		{
			this.SendPropertyChanging();
			entity.SearchItem = this;
		}
		
		private void detach_SearchItemWords(SearchItemWord entity)
		{
			this.SendPropertyChanging();
			entity.SearchItem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SearchItemWord")]
	public partial class SearchItemWord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SearchItemWordID;
		
		private int _SearchItemID;
		
		private int _SearchWordsID;
		
		private int _Occurrences;
		
		private EntitySet<SearchItemWordPosition> _SearchItemWordPositions;
		
		private EntityRef<SearchItem> _SearchItem;
		
		private EntityRef<SearchWord> _SearchWord;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSearchItemWordIDChanging(int value);
    partial void OnSearchItemWordIDChanged();
    partial void OnSearchItemIDChanging(int value);
    partial void OnSearchItemIDChanged();
    partial void OnSearchWordsIDChanging(int value);
    partial void OnSearchWordsIDChanged();
    partial void OnOccurrencesChanging(int value);
    partial void OnOccurrencesChanged();
    #endregion
		
		public SearchItemWord()
		{
			this._SearchItemWordPositions = new EntitySet<SearchItemWordPosition>(new Action<SearchItemWordPosition>(this.attach_SearchItemWordPositions), new Action<SearchItemWordPosition>(this.detach_SearchItemWordPositions));
			this._SearchItem = default(EntityRef<SearchItem>);
			this._SearchWord = default(EntityRef<SearchWord>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchItemWordID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SearchItemWordID
		{
			get
			{
				return this._SearchItemWordID;
			}
			set
			{
				if ((this._SearchItemWordID != value))
				{
					this.OnSearchItemWordIDChanging(value);
					this.SendPropertyChanging();
					this._SearchItemWordID = value;
					this.SendPropertyChanged("SearchItemWordID");
					this.OnSearchItemWordIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchItemID", DbType="Int NOT NULL")]
		public int SearchItemID
		{
			get
			{
				return this._SearchItemID;
			}
			set
			{
				if ((this._SearchItemID != value))
				{
					if (this._SearchItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSearchItemIDChanging(value);
					this.SendPropertyChanging();
					this._SearchItemID = value;
					this.SendPropertyChanged("SearchItemID");
					this.OnSearchItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWordsID", DbType="Int NOT NULL")]
		public int SearchWordsID
		{
			get
			{
				return this._SearchWordsID;
			}
			set
			{
				if ((this._SearchWordsID != value))
				{
					if (this._SearchWord.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSearchWordsIDChanging(value);
					this.SendPropertyChanging();
					this._SearchWordsID = value;
					this.SendPropertyChanged("SearchWordsID");
					this.OnSearchWordsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Occurrences", DbType="Int NOT NULL")]
		public int Occurrences
		{
			get
			{
				return this._Occurrences;
			}
			set
			{
				if ((this._Occurrences != value))
				{
					this.OnOccurrencesChanging(value);
					this.SendPropertyChanging();
					this._Occurrences = value;
					this.SendPropertyChanged("Occurrences");
					this.OnOccurrencesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SearchItemWord_SearchItemWordPosition", Storage="_SearchItemWordPositions", ThisKey="SearchItemWordID", OtherKey="SearchItemWordID")]
		public EntitySet<SearchItemWordPosition> SearchItemWordPositions
		{
			get
			{
				return this._SearchItemWordPositions;
			}
			set
			{
				this._SearchItemWordPositions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SearchItem_SearchItemWord", Storage="_SearchItem", ThisKey="SearchItemID", OtherKey="SearchItemID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SearchItem SearchItem
		{
			get
			{
				return this._SearchItem.Entity;
			}
			set
			{
				SearchItem previousValue = this._SearchItem.Entity;
				if (((previousValue != value) 
							|| (this._SearchItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SearchItem.Entity = null;
						previousValue.SearchItemWords.Remove(this);
					}
					this._SearchItem.Entity = value;
					if ((value != null))
					{
						value.SearchItemWords.Add(this);
						this._SearchItemID = value.SearchItemID;
					}
					else
					{
						this._SearchItemID = default(int);
					}
					this.SendPropertyChanged("SearchItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SearchWord_SearchItemWord", Storage="_SearchWord", ThisKey="SearchWordsID", OtherKey="SearchWordsID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SearchWord SearchWord
		{
			get
			{
				return this._SearchWord.Entity;
			}
			set
			{
				SearchWord previousValue = this._SearchWord.Entity;
				if (((previousValue != value) 
							|| (this._SearchWord.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SearchWord.Entity = null;
						previousValue.SearchItemWords.Remove(this);
					}
					this._SearchWord.Entity = value;
					if ((value != null))
					{
						value.SearchItemWords.Add(this);
						this._SearchWordsID = value.SearchWordsID;
					}
					else
					{
						this._SearchWordsID = default(int);
					}
					this.SendPropertyChanged("SearchWord");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SearchItemWordPositions(SearchItemWordPosition entity)
		{
			this.SendPropertyChanging();
			entity.SearchItemWord = this;
		}
		
		private void detach_SearchItemWordPositions(SearchItemWordPosition entity)
		{
			this.SendPropertyChanging();
			entity.SearchItemWord = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SearchItemWordPosition")]
	public partial class SearchItemWordPosition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SearchItemWordPositionID;
		
		private int _SearchItemWordID;
		
		private int _ContentPosition;
		
		private EntityRef<SearchItemWord> _SearchItemWord;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSearchItemWordPositionIDChanging(int value);
    partial void OnSearchItemWordPositionIDChanged();
    partial void OnSearchItemWordIDChanging(int value);
    partial void OnSearchItemWordIDChanged();
    partial void OnContentPositionChanging(int value);
    partial void OnContentPositionChanged();
    #endregion
		
		public SearchItemWordPosition()
		{
			this._SearchItemWord = default(EntityRef<SearchItemWord>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchItemWordPositionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SearchItemWordPositionID
		{
			get
			{
				return this._SearchItemWordPositionID;
			}
			set
			{
				if ((this._SearchItemWordPositionID != value))
				{
					this.OnSearchItemWordPositionIDChanging(value);
					this.SendPropertyChanging();
					this._SearchItemWordPositionID = value;
					this.SendPropertyChanged("SearchItemWordPositionID");
					this.OnSearchItemWordPositionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchItemWordID", DbType="Int NOT NULL")]
		public int SearchItemWordID
		{
			get
			{
				return this._SearchItemWordID;
			}
			set
			{
				if ((this._SearchItemWordID != value))
				{
					if (this._SearchItemWord.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSearchItemWordIDChanging(value);
					this.SendPropertyChanging();
					this._SearchItemWordID = value;
					this.SendPropertyChanged("SearchItemWordID");
					this.OnSearchItemWordIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentPosition", DbType="Int NOT NULL")]
		public int ContentPosition
		{
			get
			{
				return this._ContentPosition;
			}
			set
			{
				if ((this._ContentPosition != value))
				{
					this.OnContentPositionChanging(value);
					this.SendPropertyChanging();
					this._ContentPosition = value;
					this.SendPropertyChanged("ContentPosition");
					this.OnContentPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SearchItemWord_SearchItemWordPosition", Storage="_SearchItemWord", ThisKey="SearchItemWordID", OtherKey="SearchItemWordID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SearchItemWord SearchItemWord
		{
			get
			{
				return this._SearchItemWord.Entity;
			}
			set
			{
				SearchItemWord previousValue = this._SearchItemWord.Entity;
				if (((previousValue != value) 
							|| (this._SearchItemWord.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SearchItemWord.Entity = null;
						previousValue.SearchItemWordPositions.Remove(this);
					}
					this._SearchItemWord.Entity = value;
					if ((value != null))
					{
						value.SearchItemWordPositions.Add(this);
						this._SearchItemWordID = value.SearchItemWordID;
					}
					else
					{
						this._SearchItemWordID = default(int);
					}
					this.SendPropertyChanged("SearchItemWord");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SearchWord")]
	public partial class SearchWord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SearchWordsID;
		
		private string _Word;
		
		private System.Nullable<bool> _IsCommon;
		
		private int _HitCount;
		
		private EntitySet<SearchItemWord> _SearchItemWords;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSearchWordsIDChanging(int value);
    partial void OnSearchWordsIDChanged();
    partial void OnWordChanging(string value);
    partial void OnWordChanged();
    partial void OnIsCommonChanging(System.Nullable<bool> value);
    partial void OnIsCommonChanged();
    partial void OnHitCountChanging(int value);
    partial void OnHitCountChanged();
    #endregion
		
		public SearchWord()
		{
			this._SearchItemWords = new EntitySet<SearchItemWord>(new Action<SearchItemWord>(this.attach_SearchItemWords), new Action<SearchItemWord>(this.detach_SearchItemWords));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWordsID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SearchWordsID
		{
			get
			{
				return this._SearchWordsID;
			}
			set
			{
				if ((this._SearchWordsID != value))
				{
					this.OnSearchWordsIDChanging(value);
					this.SendPropertyChanging();
					this._SearchWordsID = value;
					this.SendPropertyChanged("SearchWordsID");
					this.OnSearchWordsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Word", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Word
		{
			get
			{
				return this._Word;
			}
			set
			{
				if ((this._Word != value))
				{
					this.OnWordChanging(value);
					this.SendPropertyChanging();
					this._Word = value;
					this.SendPropertyChanged("Word");
					this.OnWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCommon", DbType="Bit")]
		public System.Nullable<bool> IsCommon
		{
			get
			{
				return this._IsCommon;
			}
			set
			{
				if ((this._IsCommon != value))
				{
					this.OnIsCommonChanging(value);
					this.SendPropertyChanging();
					this._IsCommon = value;
					this.SendPropertyChanged("IsCommon");
					this.OnIsCommonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HitCount", DbType="Int NOT NULL")]
		public int HitCount
		{
			get
			{
				return this._HitCount;
			}
			set
			{
				if ((this._HitCount != value))
				{
					this.OnHitCountChanging(value);
					this.SendPropertyChanging();
					this._HitCount = value;
					this.SendPropertyChanged("HitCount");
					this.OnHitCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SearchWord_SearchItemWord", Storage="_SearchItemWords", ThisKey="SearchWordsID", OtherKey="SearchWordsID")]
		public EntitySet<SearchItemWord> SearchItemWords
		{
			get
			{
				return this._SearchItemWords;
			}
			set
			{
				this._SearchItemWords.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SearchItemWords(SearchItemWord entity)
		{
			this.SendPropertyChanging();
			entity.SearchWord = this;
		}
		
		private void detach_SearchItemWords(SearchItemWord entity)
		{
			this.SendPropertyChanging();
			entity.SearchWord = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SiteLog")]
	public partial class SiteLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SiteLogId;
		
		private System.DateTime _DateTime;
		
		private int _PortalId;
		
		private System.Nullable<int> _UserId;
		
		private string _Referrer;
		
		private string _Url;
		
		private string _UserAgent;
		
		private string _UserHostAddress;
		
		private string _UserHostName;
		
		private System.Nullable<int> _TabId;
		
		private System.Nullable<int> _AffiliateId;
		
		private EntityRef<Portal> _Portal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSiteLogIdChanging(int value);
    partial void OnSiteLogIdChanged();
    partial void OnDateTimeChanging(System.DateTime value);
    partial void OnDateTimeChanged();
    partial void OnPortalIdChanging(int value);
    partial void OnPortalIdChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnReferrerChanging(string value);
    partial void OnReferrerChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnUserAgentChanging(string value);
    partial void OnUserAgentChanged();
    partial void OnUserHostAddressChanging(string value);
    partial void OnUserHostAddressChanged();
    partial void OnUserHostNameChanging(string value);
    partial void OnUserHostNameChanged();
    partial void OnTabIdChanging(System.Nullable<int> value);
    partial void OnTabIdChanged();
    partial void OnAffiliateIdChanging(System.Nullable<int> value);
    partial void OnAffiliateIdChanged();
    #endregion
		
		public SiteLog()
		{
			this._Portal = default(EntityRef<Portal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteLogId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SiteLogId
		{
			get
			{
				return this._SiteLogId;
			}
			set
			{
				if ((this._SiteLogId != value))
				{
					this.OnSiteLogIdChanging(value);
					this.SendPropertyChanging();
					this._SiteLogId = value;
					this.SendPropertyChanged("SiteLogId");
					this.OnSiteLogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="SmallDateTime NOT NULL")]
		public System.DateTime DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this.OnDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DateTime = value;
					this.SendPropertyChanged("DateTime");
					this.OnDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalId", DbType="Int NOT NULL")]
		public int PortalId
		{
			get
			{
				return this._PortalId;
			}
			set
			{
				if ((this._PortalId != value))
				{
					if (this._Portal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalIdChanging(value);
					this.SendPropertyChanging();
					this._PortalId = value;
					this.SendPropertyChanged("PortalId");
					this.OnPortalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Referrer", DbType="NVarChar(255)")]
		public string Referrer
		{
			get
			{
				return this._Referrer;
			}
			set
			{
				if ((this._Referrer != value))
				{
					this.OnReferrerChanging(value);
					this.SendPropertyChanging();
					this._Referrer = value;
					this.SendPropertyChanged("Referrer");
					this.OnReferrerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(255)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAgent", DbType="NVarChar(255)")]
		public string UserAgent
		{
			get
			{
				return this._UserAgent;
			}
			set
			{
				if ((this._UserAgent != value))
				{
					this.OnUserAgentChanging(value);
					this.SendPropertyChanging();
					this._UserAgent = value;
					this.SendPropertyChanged("UserAgent");
					this.OnUserAgentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserHostAddress", DbType="NVarChar(255)")]
		public string UserHostAddress
		{
			get
			{
				return this._UserHostAddress;
			}
			set
			{
				if ((this._UserHostAddress != value))
				{
					this.OnUserHostAddressChanging(value);
					this.SendPropertyChanging();
					this._UserHostAddress = value;
					this.SendPropertyChanged("UserHostAddress");
					this.OnUserHostAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserHostName", DbType="NVarChar(255)")]
		public string UserHostName
		{
			get
			{
				return this._UserHostName;
			}
			set
			{
				if ((this._UserHostName != value))
				{
					this.OnUserHostNameChanging(value);
					this.SendPropertyChanging();
					this._UserHostName = value;
					this.SendPropertyChanged("UserHostName");
					this.OnUserHostNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TabId", DbType="Int")]
		public System.Nullable<int> TabId
		{
			get
			{
				return this._TabId;
			}
			set
			{
				if ((this._TabId != value))
				{
					this.OnTabIdChanging(value);
					this.SendPropertyChanging();
					this._TabId = value;
					this.SendPropertyChanged("TabId");
					this.OnTabIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AffiliateId", DbType="Int")]
		public System.Nullable<int> AffiliateId
		{
			get
			{
				return this._AffiliateId;
			}
			set
			{
				if ((this._AffiliateId != value))
				{
					this.OnAffiliateIdChanging(value);
					this.SendPropertyChanging();
					this._AffiliateId = value;
					this.SendPropertyChanged("AffiliateId");
					this.OnAffiliateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Portal_SiteLog", Storage="_Portal", ThisKey="PortalId", OtherKey="PortalID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Portal Portal
		{
			get
			{
				return this._Portal.Entity;
			}
			set
			{
				Portal previousValue = this._Portal.Entity;
				if (((previousValue != value) 
							|| (this._Portal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Portal.Entity = null;
						previousValue.SiteLogs.Remove(this);
					}
					this._Portal.Entity = value;
					if ((value != null))
					{
						value.SiteLogs.Add(this);
						this._PortalId = value.PortalID;
					}
					else
					{
						this._PortalId = default(int);
					}
					this.SendPropertyChanged("Portal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SkinControls")]
	public partial class SkinControl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SkinControlID;
		
		private int _PackageID;
		
		private string _ControlKey;
		
		private string _ControlSrc;
		
		private string _IconFile;
		
		private string _HelpUrl;
		
		private bool _SupportsPartialRendering;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntityRef<Package> _Package;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSkinControlIDChanging(int value);
    partial void OnSkinControlIDChanged();
    partial void OnPackageIDChanging(int value);
    partial void OnPackageIDChanged();
    partial void OnControlKeyChanging(string value);
    partial void OnControlKeyChanged();
    partial void OnControlSrcChanging(string value);
    partial void OnControlSrcChanged();
    partial void OnIconFileChanging(string value);
    partial void OnIconFileChanged();
    partial void OnHelpUrlChanging(string value);
    partial void OnHelpUrlChanged();
    partial void OnSupportsPartialRenderingChanging(bool value);
    partial void OnSupportsPartialRenderingChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public SkinControl()
		{
			this._Package = default(EntityRef<Package>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkinControlID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SkinControlID
		{
			get
			{
				return this._SkinControlID;
			}
			set
			{
				if ((this._SkinControlID != value))
				{
					this.OnSkinControlIDChanging(value);
					this.SendPropertyChanging();
					this._SkinControlID = value;
					this.SendPropertyChanged("SkinControlID");
					this.OnSkinControlIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageID", DbType="Int NOT NULL")]
		public int PackageID
		{
			get
			{
				return this._PackageID;
			}
			set
			{
				if ((this._PackageID != value))
				{
					if (this._Package.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPackageIDChanging(value);
					this.SendPropertyChanging();
					this._PackageID = value;
					this.SendPropertyChanged("PackageID");
					this.OnPackageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlKey", DbType="NVarChar(50)")]
		public string ControlKey
		{
			get
			{
				return this._ControlKey;
			}
			set
			{
				if ((this._ControlKey != value))
				{
					this.OnControlKeyChanging(value);
					this.SendPropertyChanging();
					this._ControlKey = value;
					this.SendPropertyChanged("ControlKey");
					this.OnControlKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlSrc", DbType="NVarChar(256)")]
		public string ControlSrc
		{
			get
			{
				return this._ControlSrc;
			}
			set
			{
				if ((this._ControlSrc != value))
				{
					this.OnControlSrcChanging(value);
					this.SendPropertyChanging();
					this._ControlSrc = value;
					this.SendPropertyChanged("ControlSrc");
					this.OnControlSrcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IconFile", DbType="NVarChar(100)")]
		public string IconFile
		{
			get
			{
				return this._IconFile;
			}
			set
			{
				if ((this._IconFile != value))
				{
					this.OnIconFileChanging(value);
					this.SendPropertyChanging();
					this._IconFile = value;
					this.SendPropertyChanged("IconFile");
					this.OnIconFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HelpUrl", DbType="NVarChar(200)")]
		public string HelpUrl
		{
			get
			{
				return this._HelpUrl;
			}
			set
			{
				if ((this._HelpUrl != value))
				{
					this.OnHelpUrlChanging(value);
					this.SendPropertyChanging();
					this._HelpUrl = value;
					this.SendPropertyChanged("HelpUrl");
					this.OnHelpUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupportsPartialRendering", DbType="Bit NOT NULL")]
		public bool SupportsPartialRendering
		{
			get
			{
				return this._SupportsPartialRendering;
			}
			set
			{
				if ((this._SupportsPartialRendering != value))
				{
					this.OnSupportsPartialRenderingChanging(value);
					this.SendPropertyChanging();
					this._SupportsPartialRendering = value;
					this.SendPropertyChanged("SupportsPartialRendering");
					this.OnSupportsPartialRenderingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Package_SkinControl", Storage="_Package", ThisKey="PackageID", OtherKey="PackageID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Package Package
		{
			get
			{
				return this._Package.Entity;
			}
			set
			{
				Package previousValue = this._Package.Entity;
				if (((previousValue != value) 
							|| (this._Package.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Package.Entity = null;
						previousValue.SkinControls.Remove(this);
					}
					this._Package.Entity = value;
					if ((value != null))
					{
						value.SkinControls.Add(this);
						this._PackageID = value.PackageID;
					}
					else
					{
						this._PackageID = default(int);
					}
					this.SendPropertyChanged("Package");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SkinPackages")]
	public partial class SkinPackage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SkinPackageID;
		
		private int _PackageID;
		
		private System.Nullable<int> _PortalID;
		
		private string _SkinName;
		
		private string _SkinType;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntitySet<Skin> _Skins;
		
		private EntityRef<Package> _Package;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSkinPackageIDChanging(int value);
    partial void OnSkinPackageIDChanged();
    partial void OnPackageIDChanging(int value);
    partial void OnPackageIDChanged();
    partial void OnPortalIDChanging(System.Nullable<int> value);
    partial void OnPortalIDChanged();
    partial void OnSkinNameChanging(string value);
    partial void OnSkinNameChanged();
    partial void OnSkinTypeChanging(string value);
    partial void OnSkinTypeChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public SkinPackage()
		{
			this._Skins = new EntitySet<Skin>(new Action<Skin>(this.attach_Skins), new Action<Skin>(this.detach_Skins));
			this._Package = default(EntityRef<Package>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkinPackageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SkinPackageID
		{
			get
			{
				return this._SkinPackageID;
			}
			set
			{
				if ((this._SkinPackageID != value))
				{
					this.OnSkinPackageIDChanging(value);
					this.SendPropertyChanging();
					this._SkinPackageID = value;
					this.SendPropertyChanged("SkinPackageID");
					this.OnSkinPackageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageID", DbType="Int NOT NULL")]
		public int PackageID
		{
			get
			{
				return this._PackageID;
			}
			set
			{
				if ((this._PackageID != value))
				{
					if (this._Package.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPackageIDChanging(value);
					this.SendPropertyChanging();
					this._PackageID = value;
					this.SendPropertyChanged("PackageID");
					this.OnPackageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int")]
		public System.Nullable<int> PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkinName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SkinName
		{
			get
			{
				return this._SkinName;
			}
			set
			{
				if ((this._SkinName != value))
				{
					this.OnSkinNameChanging(value);
					this.SendPropertyChanging();
					this._SkinName = value;
					this.SendPropertyChanged("SkinName");
					this.OnSkinNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkinType", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string SkinType
		{
			get
			{
				return this._SkinType;
			}
			set
			{
				if ((this._SkinType != value))
				{
					this.OnSkinTypeChanging(value);
					this.SendPropertyChanging();
					this._SkinType = value;
					this.SendPropertyChanged("SkinType");
					this.OnSkinTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SkinPackage_Skin", Storage="_Skins", ThisKey="SkinPackageID", OtherKey="SkinPackageID")]
		public EntitySet<Skin> Skins
		{
			get
			{
				return this._Skins;
			}
			set
			{
				this._Skins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Package_SkinPackage", Storage="_Package", ThisKey="PackageID", OtherKey="PackageID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Package Package
		{
			get
			{
				return this._Package.Entity;
			}
			set
			{
				Package previousValue = this._Package.Entity;
				if (((previousValue != value) 
							|| (this._Package.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Package.Entity = null;
						previousValue.SkinPackages.Remove(this);
					}
					this._Package.Entity = value;
					if ((value != null))
					{
						value.SkinPackages.Add(this);
						this._PackageID = value.PackageID;
					}
					else
					{
						this._PackageID = default(int);
					}
					this.SendPropertyChanged("Package");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Skins(Skin entity)
		{
			this.SendPropertyChanging();
			entity.SkinPackage = this;
		}
		
		private void detach_Skins(Skin entity)
		{
			this.SendPropertyChanging();
			entity.SkinPackage = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Skins")]
	public partial class Skin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SkinID;
		
		private int _SkinPackageID;
		
		private string _SkinSrc;
		
		private EntityRef<SkinPackage> _SkinPackage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSkinIDChanging(int value);
    partial void OnSkinIDChanged();
    partial void OnSkinPackageIDChanging(int value);
    partial void OnSkinPackageIDChanged();
    partial void OnSkinSrcChanging(string value);
    partial void OnSkinSrcChanged();
    #endregion
		
		public Skin()
		{
			this._SkinPackage = default(EntityRef<SkinPackage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkinID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SkinID
		{
			get
			{
				return this._SkinID;
			}
			set
			{
				if ((this._SkinID != value))
				{
					this.OnSkinIDChanging(value);
					this.SendPropertyChanging();
					this._SkinID = value;
					this.SendPropertyChanged("SkinID");
					this.OnSkinIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkinPackageID", DbType="Int NOT NULL")]
		public int SkinPackageID
		{
			get
			{
				return this._SkinPackageID;
			}
			set
			{
				if ((this._SkinPackageID != value))
				{
					if (this._SkinPackage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSkinPackageIDChanging(value);
					this.SendPropertyChanging();
					this._SkinPackageID = value;
					this.SendPropertyChanged("SkinPackageID");
					this.OnSkinPackageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkinSrc", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string SkinSrc
		{
			get
			{
				return this._SkinSrc;
			}
			set
			{
				if ((this._SkinSrc != value))
				{
					this.OnSkinSrcChanging(value);
					this.SendPropertyChanging();
					this._SkinSrc = value;
					this.SendPropertyChanged("SkinSrc");
					this.OnSkinSrcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SkinPackage_Skin", Storage="_SkinPackage", ThisKey="SkinPackageID", OtherKey="SkinPackageID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SkinPackage SkinPackage
		{
			get
			{
				return this._SkinPackage.Entity;
			}
			set
			{
				SkinPackage previousValue = this._SkinPackage.Entity;
				if (((previousValue != value) 
							|| (this._SkinPackage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SkinPackage.Entity = null;
						previousValue.Skins.Remove(this);
					}
					this._SkinPackage.Entity = value;
					if ((value != null))
					{
						value.Skins.Add(this);
						this._SkinPackageID = value.SkinPackageID;
					}
					else
					{
						this._SkinPackageID = default(int);
					}
					this.SendPropertyChanged("SkinPackage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SystemMessages")]
	public partial class SystemMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MessageID;
		
		private System.Nullable<int> _PortalID;
		
		private string _MessageName;
		
		private string _MessageValue;
		
		private EntityRef<Portal> _Portal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMessageIDChanging(int value);
    partial void OnMessageIDChanged();
    partial void OnPortalIDChanging(System.Nullable<int> value);
    partial void OnPortalIDChanged();
    partial void OnMessageNameChanging(string value);
    partial void OnMessageNameChanged();
    partial void OnMessageValueChanging(string value);
    partial void OnMessageValueChanged();
    #endregion
		
		public SystemMessage()
		{
			this._Portal = default(EntityRef<Portal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MessageID
		{
			get
			{
				return this._MessageID;
			}
			set
			{
				if ((this._MessageID != value))
				{
					this.OnMessageIDChanging(value);
					this.SendPropertyChanging();
					this._MessageID = value;
					this.SendPropertyChanged("MessageID");
					this.OnMessageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int")]
		public System.Nullable<int> PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					if (this._Portal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MessageName
		{
			get
			{
				return this._MessageName;
			}
			set
			{
				if ((this._MessageName != value))
				{
					this.OnMessageNameChanging(value);
					this.SendPropertyChanging();
					this._MessageName = value;
					this.SendPropertyChanged("MessageName");
					this.OnMessageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageValue", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string MessageValue
		{
			get
			{
				return this._MessageValue;
			}
			set
			{
				if ((this._MessageValue != value))
				{
					this.OnMessageValueChanging(value);
					this.SendPropertyChanging();
					this._MessageValue = value;
					this.SendPropertyChanged("MessageValue");
					this.OnMessageValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Portal_SystemMessage", Storage="_Portal", ThisKey="PortalID", OtherKey="PortalID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Portal Portal
		{
			get
			{
				return this._Portal.Entity;
			}
			set
			{
				Portal previousValue = this._Portal.Entity;
				if (((previousValue != value) 
							|| (this._Portal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Portal.Entity = null;
						previousValue.SystemMessages.Remove(this);
					}
					this._Portal.Entity = value;
					if ((value != null))
					{
						value.SystemMessages.Add(this);
						this._PortalID = value.PortalID;
					}
					else
					{
						this._PortalID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Portal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TabModules")]
	public partial class TabModule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TabModuleID;
		
		private int _TabID;
		
		private int _ModuleID;
		
		private string _PaneName;
		
		private int _ModuleOrder;
		
		private int _CacheTime;
		
		private string _Alignment;
		
		private string _Color;
		
		private string _Border;
		
		private string _IconFile;
		
		private int _Visibility;
		
		private string _ContainerSrc;
		
		private bool _DisplayTitle;
		
		private bool _DisplayPrint;
		
		private bool _DisplaySyndicate;
		
		private bool _IsWebSlice;
		
		private string _WebSliceTitle;
		
		private System.Nullable<System.DateTime> _WebSliceExpiryDate;
		
		private System.Nullable<int> _WebSliceTTL;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private bool _IsDeleted;
		
		private string _CacheMethod;
		
		private string _ModuleTitle;
		
		private string _Header;
		
		private string _Footer;
		
		private string _CultureCode;
		
		private System.Guid _UniqueId;
		
		private System.Guid _VersionGuid;
		
		private System.Nullable<System.Guid> _DefaultLanguageGuid;
		
		private System.Guid _LocalizedVersionGuid;
		
		private EntitySet<TabModuleSetting> _TabModuleSettings;
		
		private EntityRef<Module> _Module;
		
		private EntityRef<Tab> _Tab;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTabModuleIDChanging(int value);
    partial void OnTabModuleIDChanged();
    partial void OnTabIDChanging(int value);
    partial void OnTabIDChanged();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnPaneNameChanging(string value);
    partial void OnPaneNameChanged();
    partial void OnModuleOrderChanging(int value);
    partial void OnModuleOrderChanged();
    partial void OnCacheTimeChanging(int value);
    partial void OnCacheTimeChanged();
    partial void OnAlignmentChanging(string value);
    partial void OnAlignmentChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    partial void OnBorderChanging(string value);
    partial void OnBorderChanged();
    partial void OnIconFileChanging(string value);
    partial void OnIconFileChanged();
    partial void OnVisibilityChanging(int value);
    partial void OnVisibilityChanged();
    partial void OnContainerSrcChanging(string value);
    partial void OnContainerSrcChanged();
    partial void OnDisplayTitleChanging(bool value);
    partial void OnDisplayTitleChanged();
    partial void OnDisplayPrintChanging(bool value);
    partial void OnDisplayPrintChanged();
    partial void OnDisplaySyndicateChanging(bool value);
    partial void OnDisplaySyndicateChanged();
    partial void OnIsWebSliceChanging(bool value);
    partial void OnIsWebSliceChanged();
    partial void OnWebSliceTitleChanging(string value);
    partial void OnWebSliceTitleChanged();
    partial void OnWebSliceExpiryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnWebSliceExpiryDateChanged();
    partial void OnWebSliceTTLChanging(System.Nullable<int> value);
    partial void OnWebSliceTTLChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCacheMethodChanging(string value);
    partial void OnCacheMethodChanged();
    partial void OnModuleTitleChanging(string value);
    partial void OnModuleTitleChanged();
    partial void OnHeaderChanging(string value);
    partial void OnHeaderChanged();
    partial void OnFooterChanging(string value);
    partial void OnFooterChanged();
    partial void OnCultureCodeChanging(string value);
    partial void OnCultureCodeChanged();
    partial void OnUniqueIdChanging(System.Guid value);
    partial void OnUniqueIdChanged();
    partial void OnVersionGuidChanging(System.Guid value);
    partial void OnVersionGuidChanged();
    partial void OnDefaultLanguageGuidChanging(System.Nullable<System.Guid> value);
    partial void OnDefaultLanguageGuidChanged();
    partial void OnLocalizedVersionGuidChanging(System.Guid value);
    partial void OnLocalizedVersionGuidChanged();
    #endregion
		
		public TabModule()
		{
			this._TabModuleSettings = new EntitySet<TabModuleSetting>(new Action<TabModuleSetting>(this.attach_TabModuleSettings), new Action<TabModuleSetting>(this.detach_TabModuleSettings));
			this._Module = default(EntityRef<Module>);
			this._Tab = default(EntityRef<Tab>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TabModuleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TabModuleID
		{
			get
			{
				return this._TabModuleID;
			}
			set
			{
				if ((this._TabModuleID != value))
				{
					this.OnTabModuleIDChanging(value);
					this.SendPropertyChanging();
					this._TabModuleID = value;
					this.SendPropertyChanged("TabModuleID");
					this.OnTabModuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TabID", DbType="Int NOT NULL")]
		public int TabID
		{
			get
			{
				return this._TabID;
			}
			set
			{
				if ((this._TabID != value))
				{
					if (this._Tab.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTabIDChanging(value);
					this.SendPropertyChanging();
					this._TabID = value;
					this.SendPropertyChanged("TabID");
					this.OnTabIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleID", DbType="Int NOT NULL")]
		public int ModuleID
		{
			get
			{
				return this._ModuleID;
			}
			set
			{
				if ((this._ModuleID != value))
				{
					if (this._Module.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaneName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PaneName
		{
			get
			{
				return this._PaneName;
			}
			set
			{
				if ((this._PaneName != value))
				{
					this.OnPaneNameChanging(value);
					this.SendPropertyChanging();
					this._PaneName = value;
					this.SendPropertyChanged("PaneName");
					this.OnPaneNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleOrder", DbType="Int NOT NULL")]
		public int ModuleOrder
		{
			get
			{
				return this._ModuleOrder;
			}
			set
			{
				if ((this._ModuleOrder != value))
				{
					this.OnModuleOrderChanging(value);
					this.SendPropertyChanging();
					this._ModuleOrder = value;
					this.SendPropertyChanged("ModuleOrder");
					this.OnModuleOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CacheTime", DbType="Int NOT NULL")]
		public int CacheTime
		{
			get
			{
				return this._CacheTime;
			}
			set
			{
				if ((this._CacheTime != value))
				{
					this.OnCacheTimeChanging(value);
					this.SendPropertyChanging();
					this._CacheTime = value;
					this.SendPropertyChanged("CacheTime");
					this.OnCacheTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alignment", DbType="NVarChar(10)")]
		public string Alignment
		{
			get
			{
				return this._Alignment;
			}
			set
			{
				if ((this._Alignment != value))
				{
					this.OnAlignmentChanging(value);
					this.SendPropertyChanging();
					this._Alignment = value;
					this.SendPropertyChanged("Alignment");
					this.OnAlignmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="NVarChar(20)")]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Border", DbType="NVarChar(1)")]
		public string Border
		{
			get
			{
				return this._Border;
			}
			set
			{
				if ((this._Border != value))
				{
					this.OnBorderChanging(value);
					this.SendPropertyChanging();
					this._Border = value;
					this.SendPropertyChanged("Border");
					this.OnBorderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IconFile", DbType="NVarChar(100)")]
		public string IconFile
		{
			get
			{
				return this._IconFile;
			}
			set
			{
				if ((this._IconFile != value))
				{
					this.OnIconFileChanging(value);
					this.SendPropertyChanging();
					this._IconFile = value;
					this.SendPropertyChanged("IconFile");
					this.OnIconFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visibility", DbType="Int NOT NULL")]
		public int Visibility
		{
			get
			{
				return this._Visibility;
			}
			set
			{
				if ((this._Visibility != value))
				{
					this.OnVisibilityChanging(value);
					this.SendPropertyChanging();
					this._Visibility = value;
					this.SendPropertyChanged("Visibility");
					this.OnVisibilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContainerSrc", DbType="NVarChar(200)")]
		public string ContainerSrc
		{
			get
			{
				return this._ContainerSrc;
			}
			set
			{
				if ((this._ContainerSrc != value))
				{
					this.OnContainerSrcChanging(value);
					this.SendPropertyChanging();
					this._ContainerSrc = value;
					this.SendPropertyChanged("ContainerSrc");
					this.OnContainerSrcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayTitle", DbType="Bit NOT NULL")]
		public bool DisplayTitle
		{
			get
			{
				return this._DisplayTitle;
			}
			set
			{
				if ((this._DisplayTitle != value))
				{
					this.OnDisplayTitleChanging(value);
					this.SendPropertyChanging();
					this._DisplayTitle = value;
					this.SendPropertyChanged("DisplayTitle");
					this.OnDisplayTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayPrint", DbType="Bit NOT NULL")]
		public bool DisplayPrint
		{
			get
			{
				return this._DisplayPrint;
			}
			set
			{
				if ((this._DisplayPrint != value))
				{
					this.OnDisplayPrintChanging(value);
					this.SendPropertyChanging();
					this._DisplayPrint = value;
					this.SendPropertyChanged("DisplayPrint");
					this.OnDisplayPrintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplaySyndicate", DbType="Bit NOT NULL")]
		public bool DisplaySyndicate
		{
			get
			{
				return this._DisplaySyndicate;
			}
			set
			{
				if ((this._DisplaySyndicate != value))
				{
					this.OnDisplaySyndicateChanging(value);
					this.SendPropertyChanging();
					this._DisplaySyndicate = value;
					this.SendPropertyChanged("DisplaySyndicate");
					this.OnDisplaySyndicateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsWebSlice", DbType="Bit NOT NULL")]
		public bool IsWebSlice
		{
			get
			{
				return this._IsWebSlice;
			}
			set
			{
				if ((this._IsWebSlice != value))
				{
					this.OnIsWebSliceChanging(value);
					this.SendPropertyChanging();
					this._IsWebSlice = value;
					this.SendPropertyChanged("IsWebSlice");
					this.OnIsWebSliceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebSliceTitle", DbType="NVarChar(256)")]
		public string WebSliceTitle
		{
			get
			{
				return this._WebSliceTitle;
			}
			set
			{
				if ((this._WebSliceTitle != value))
				{
					this.OnWebSliceTitleChanging(value);
					this.SendPropertyChanging();
					this._WebSliceTitle = value;
					this.SendPropertyChanged("WebSliceTitle");
					this.OnWebSliceTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebSliceExpiryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> WebSliceExpiryDate
		{
			get
			{
				return this._WebSliceExpiryDate;
			}
			set
			{
				if ((this._WebSliceExpiryDate != value))
				{
					this.OnWebSliceExpiryDateChanging(value);
					this.SendPropertyChanging();
					this._WebSliceExpiryDate = value;
					this.SendPropertyChanged("WebSliceExpiryDate");
					this.OnWebSliceExpiryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebSliceTTL", DbType="Int")]
		public System.Nullable<int> WebSliceTTL
		{
			get
			{
				return this._WebSliceTTL;
			}
			set
			{
				if ((this._WebSliceTTL != value))
				{
					this.OnWebSliceTTLChanging(value);
					this.SendPropertyChanging();
					this._WebSliceTTL = value;
					this.SendPropertyChanged("WebSliceTTL");
					this.OnWebSliceTTLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CacheMethod", DbType="VarChar(50)")]
		public string CacheMethod
		{
			get
			{
				return this._CacheMethod;
			}
			set
			{
				if ((this._CacheMethod != value))
				{
					this.OnCacheMethodChanging(value);
					this.SendPropertyChanging();
					this._CacheMethod = value;
					this.SendPropertyChanged("CacheMethod");
					this.OnCacheMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleTitle", DbType="NVarChar(256)")]
		public string ModuleTitle
		{
			get
			{
				return this._ModuleTitle;
			}
			set
			{
				if ((this._ModuleTitle != value))
				{
					this.OnModuleTitleChanging(value);
					this.SendPropertyChanging();
					this._ModuleTitle = value;
					this.SendPropertyChanged("ModuleTitle");
					this.OnModuleTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Header", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Header
		{
			get
			{
				return this._Header;
			}
			set
			{
				if ((this._Header != value))
				{
					this.OnHeaderChanging(value);
					this.SendPropertyChanging();
					this._Header = value;
					this.SendPropertyChanged("Header");
					this.OnHeaderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Footer", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Footer
		{
			get
			{
				return this._Footer;
			}
			set
			{
				if ((this._Footer != value))
				{
					this.OnFooterChanging(value);
					this.SendPropertyChanging();
					this._Footer = value;
					this.SendPropertyChanged("Footer");
					this.OnFooterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CultureCode", DbType="NVarChar(10)")]
		public string CultureCode
		{
			get
			{
				return this._CultureCode;
			}
			set
			{
				if ((this._CultureCode != value))
				{
					this.OnCultureCodeChanging(value);
					this.SendPropertyChanging();
					this._CultureCode = value;
					this.SendPropertyChanged("CultureCode");
					this.OnCultureCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UniqueId
		{
			get
			{
				return this._UniqueId;
			}
			set
			{
				if ((this._UniqueId != value))
				{
					this.OnUniqueIdChanging(value);
					this.SendPropertyChanging();
					this._UniqueId = value;
					this.SendPropertyChanged("UniqueId");
					this.OnUniqueIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionGuid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid VersionGuid
		{
			get
			{
				return this._VersionGuid;
			}
			set
			{
				if ((this._VersionGuid != value))
				{
					this.OnVersionGuidChanging(value);
					this.SendPropertyChanging();
					this._VersionGuid = value;
					this.SendPropertyChanged("VersionGuid");
					this.OnVersionGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultLanguageGuid", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DefaultLanguageGuid
		{
			get
			{
				return this._DefaultLanguageGuid;
			}
			set
			{
				if ((this._DefaultLanguageGuid != value))
				{
					this.OnDefaultLanguageGuidChanging(value);
					this.SendPropertyChanging();
					this._DefaultLanguageGuid = value;
					this.SendPropertyChanged("DefaultLanguageGuid");
					this.OnDefaultLanguageGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocalizedVersionGuid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid LocalizedVersionGuid
		{
			get
			{
				return this._LocalizedVersionGuid;
			}
			set
			{
				if ((this._LocalizedVersionGuid != value))
				{
					this.OnLocalizedVersionGuidChanging(value);
					this.SendPropertyChanging();
					this._LocalizedVersionGuid = value;
					this.SendPropertyChanged("LocalizedVersionGuid");
					this.OnLocalizedVersionGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TabModule_TabModuleSetting", Storage="_TabModuleSettings", ThisKey="TabModuleID", OtherKey="TabModuleID")]
		public EntitySet<TabModuleSetting> TabModuleSettings
		{
			get
			{
				return this._TabModuleSettings;
			}
			set
			{
				this._TabModuleSettings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Module_TabModule", Storage="_Module", ThisKey="ModuleID", OtherKey="ModuleID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Module Module
		{
			get
			{
				return this._Module.Entity;
			}
			set
			{
				Module previousValue = this._Module.Entity;
				if (((previousValue != value) 
							|| (this._Module.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Module.Entity = null;
						previousValue.TabModules.Remove(this);
					}
					this._Module.Entity = value;
					if ((value != null))
					{
						value.TabModules.Add(this);
						this._ModuleID = value.ModuleID;
					}
					else
					{
						this._ModuleID = default(int);
					}
					this.SendPropertyChanged("Module");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tab_TabModule", Storage="_Tab", ThisKey="TabID", OtherKey="TabID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Tab Tab
		{
			get
			{
				return this._Tab.Entity;
			}
			set
			{
				Tab previousValue = this._Tab.Entity;
				if (((previousValue != value) 
							|| (this._Tab.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tab.Entity = null;
						previousValue.TabModules.Remove(this);
					}
					this._Tab.Entity = value;
					if ((value != null))
					{
						value.TabModules.Add(this);
						this._TabID = value.TabID;
					}
					else
					{
						this._TabID = default(int);
					}
					this.SendPropertyChanged("Tab");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TabModuleSettings(TabModuleSetting entity)
		{
			this.SendPropertyChanging();
			entity.TabModule = this;
		}
		
		private void detach_TabModuleSettings(TabModuleSetting entity)
		{
			this.SendPropertyChanging();
			entity.TabModule = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TabModuleSettings")]
	public partial class TabModuleSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TabModuleID;
		
		private string _SettingName;
		
		private string _SettingValue;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntityRef<TabModule> _TabModule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTabModuleIDChanging(int value);
    partial void OnTabModuleIDChanged();
    partial void OnSettingNameChanging(string value);
    partial void OnSettingNameChanged();
    partial void OnSettingValueChanging(string value);
    partial void OnSettingValueChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public TabModuleSetting()
		{
			this._TabModule = default(EntityRef<TabModule>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TabModuleID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TabModuleID
		{
			get
			{
				return this._TabModuleID;
			}
			set
			{
				if ((this._TabModuleID != value))
				{
					if (this._TabModule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTabModuleIDChanging(value);
					this.SendPropertyChanging();
					this._TabModuleID = value;
					this.SendPropertyChanged("TabModuleID");
					this.OnTabModuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SettingName
		{
			get
			{
				return this._SettingName;
			}
			set
			{
				if ((this._SettingName != value))
				{
					this.OnSettingNameChanging(value);
					this.SendPropertyChanging();
					this._SettingName = value;
					this.SendPropertyChanged("SettingName");
					this.OnSettingNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingValue", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string SettingValue
		{
			get
			{
				return this._SettingValue;
			}
			set
			{
				if ((this._SettingValue != value))
				{
					this.OnSettingValueChanging(value);
					this.SendPropertyChanging();
					this._SettingValue = value;
					this.SendPropertyChanged("SettingValue");
					this.OnSettingValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TabModule_TabModuleSetting", Storage="_TabModule", ThisKey="TabModuleID", OtherKey="TabModuleID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TabModule TabModule
		{
			get
			{
				return this._TabModule.Entity;
			}
			set
			{
				TabModule previousValue = this._TabModule.Entity;
				if (((previousValue != value) 
							|| (this._TabModule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TabModule.Entity = null;
						previousValue.TabModuleSettings.Remove(this);
					}
					this._TabModule.Entity = value;
					if ((value != null))
					{
						value.TabModuleSettings.Add(this);
						this._TabModuleID = value.TabModuleID;
					}
					else
					{
						this._TabModuleID = default(int);
					}
					this.SendPropertyChanged("TabModule");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TabPermission")]
	public partial class TabPermission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TabPermissionID;
		
		private int _TabID;
		
		private int _PermissionID;
		
		private bool _AllowAccess;
		
		private System.Nullable<int> _RoleID;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntityRef<Permission> _Permission;
		
		private EntityRef<Tab> _Tab;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTabPermissionIDChanging(int value);
    partial void OnTabPermissionIDChanged();
    partial void OnTabIDChanging(int value);
    partial void OnTabIDChanged();
    partial void OnPermissionIDChanging(int value);
    partial void OnPermissionIDChanged();
    partial void OnAllowAccessChanging(bool value);
    partial void OnAllowAccessChanged();
    partial void OnRoleIDChanging(System.Nullable<int> value);
    partial void OnRoleIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public TabPermission()
		{
			this._Permission = default(EntityRef<Permission>);
			this._Tab = default(EntityRef<Tab>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TabPermissionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TabPermissionID
		{
			get
			{
				return this._TabPermissionID;
			}
			set
			{
				if ((this._TabPermissionID != value))
				{
					this.OnTabPermissionIDChanging(value);
					this.SendPropertyChanging();
					this._TabPermissionID = value;
					this.SendPropertyChanged("TabPermissionID");
					this.OnTabPermissionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TabID", DbType="Int NOT NULL")]
		public int TabID
		{
			get
			{
				return this._TabID;
			}
			set
			{
				if ((this._TabID != value))
				{
					if (this._Tab.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTabIDChanging(value);
					this.SendPropertyChanging();
					this._TabID = value;
					this.SendPropertyChanged("TabID");
					this.OnTabIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionID", DbType="Int NOT NULL")]
		public int PermissionID
		{
			get
			{
				return this._PermissionID;
			}
			set
			{
				if ((this._PermissionID != value))
				{
					if (this._Permission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPermissionIDChanging(value);
					this.SendPropertyChanging();
					this._PermissionID = value;
					this.SendPropertyChanged("PermissionID");
					this.OnPermissionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowAccess", DbType="Bit NOT NULL")]
		public bool AllowAccess
		{
			get
			{
				return this._AllowAccess;
			}
			set
			{
				if ((this._AllowAccess != value))
				{
					this.OnAllowAccessChanging(value);
					this.SendPropertyChanging();
					this._AllowAccess = value;
					this.SendPropertyChanged("AllowAccess");
					this.OnAllowAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int")]
		public System.Nullable<int> RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permission_TabPermission", Storage="_Permission", ThisKey="PermissionID", OtherKey="PermissionID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Permission Permission
		{
			get
			{
				return this._Permission.Entity;
			}
			set
			{
				Permission previousValue = this._Permission.Entity;
				if (((previousValue != value) 
							|| (this._Permission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Permission.Entity = null;
						previousValue.TabPermissions.Remove(this);
					}
					this._Permission.Entity = value;
					if ((value != null))
					{
						value.TabPermissions.Add(this);
						this._PermissionID = value.PermissionID;
					}
					else
					{
						this._PermissionID = default(int);
					}
					this.SendPropertyChanged("Permission");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tab_TabPermission", Storage="_Tab", ThisKey="TabID", OtherKey="TabID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Tab Tab
		{
			get
			{
				return this._Tab.Entity;
			}
			set
			{
				Tab previousValue = this._Tab.Entity;
				if (((previousValue != value) 
							|| (this._Tab.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tab.Entity = null;
						previousValue.TabPermissions.Remove(this);
					}
					this._Tab.Entity = value;
					if ((value != null))
					{
						value.TabPermissions.Add(this);
						this._TabID = value.TabID;
					}
					else
					{
						this._TabID = default(int);
					}
					this.SendPropertyChanged("Tab");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_TabPermission", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.TabPermissions.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.TabPermissions.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tabs")]
	public partial class Tab : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TabID;
		
		private int _TabOrder;
		
		private System.Nullable<int> _PortalID;
		
		private string _TabName;
		
		private bool _IsVisible;
		
		private System.Nullable<int> _ParentId;
		
		private string _IconFile;
		
		private bool _DisableLink;
		
		private string _Title;
		
		private string _Description;
		
		private string _KeyWords;
		
		private bool _IsDeleted;
		
		private string _Url;
		
		private string _SkinSrc;
		
		private string _ContainerSrc;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<int> _RefreshInterval;
		
		private string _PageHeadText;
		
		private bool _IsSecure;
		
		private bool _PermanentRedirect;
		
		private double _SiteMapPriority;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private string _IconFileLarge;
		
		private string _CultureCode;
		
		private System.Nullable<int> _ContentItemID;
		
		private System.Guid _UniqueId;
		
		private System.Guid _VersionGuid;
		
		private System.Nullable<System.Guid> _DefaultLanguageGuid;
		
		private System.Guid _LocalizedVersionGuid;
		
		private int _Level;
		
		private string _TabPath;
		
		private EntitySet<TabModule> _TabModules;
		
		private EntitySet<TabPermission> _TabPermissions;
		
		private EntitySet<Tab> _Tabs;
		
		private EntityRef<ContentItem> _ContentItem;
		
		private EntityRef<Portal> _Portal;
		
		private EntityRef<Tab> _Tab1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTabIDChanging(int value);
    partial void OnTabIDChanged();
    partial void OnTabOrderChanging(int value);
    partial void OnTabOrderChanged();
    partial void OnPortalIDChanging(System.Nullable<int> value);
    partial void OnPortalIDChanged();
    partial void OnTabNameChanging(string value);
    partial void OnTabNameChanged();
    partial void OnIsVisibleChanging(bool value);
    partial void OnIsVisibleChanged();
    partial void OnParentIdChanging(System.Nullable<int> value);
    partial void OnParentIdChanged();
    partial void OnIconFileChanging(string value);
    partial void OnIconFileChanged();
    partial void OnDisableLinkChanging(bool value);
    partial void OnDisableLinkChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnKeyWordsChanging(string value);
    partial void OnKeyWordsChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnSkinSrcChanging(string value);
    partial void OnSkinSrcChanged();
    partial void OnContainerSrcChanging(string value);
    partial void OnContainerSrcChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnRefreshIntervalChanging(System.Nullable<int> value);
    partial void OnRefreshIntervalChanged();
    partial void OnPageHeadTextChanging(string value);
    partial void OnPageHeadTextChanged();
    partial void OnIsSecureChanging(bool value);
    partial void OnIsSecureChanged();
    partial void OnPermanentRedirectChanging(bool value);
    partial void OnPermanentRedirectChanged();
    partial void OnSiteMapPriorityChanging(double value);
    partial void OnSiteMapPriorityChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    partial void OnIconFileLargeChanging(string value);
    partial void OnIconFileLargeChanged();
    partial void OnCultureCodeChanging(string value);
    partial void OnCultureCodeChanged();
    partial void OnContentItemIDChanging(System.Nullable<int> value);
    partial void OnContentItemIDChanged();
    partial void OnUniqueIdChanging(System.Guid value);
    partial void OnUniqueIdChanged();
    partial void OnVersionGuidChanging(System.Guid value);
    partial void OnVersionGuidChanged();
    partial void OnDefaultLanguageGuidChanging(System.Nullable<System.Guid> value);
    partial void OnDefaultLanguageGuidChanged();
    partial void OnLocalizedVersionGuidChanging(System.Guid value);
    partial void OnLocalizedVersionGuidChanged();
    partial void OnLevelChanging(int value);
    partial void OnLevelChanged();
    partial void OnTabPathChanging(string value);
    partial void OnTabPathChanged();
    #endregion
		
		public Tab()
		{
			this._TabModules = new EntitySet<TabModule>(new Action<TabModule>(this.attach_TabModules), new Action<TabModule>(this.detach_TabModules));
			this._TabPermissions = new EntitySet<TabPermission>(new Action<TabPermission>(this.attach_TabPermissions), new Action<TabPermission>(this.detach_TabPermissions));
			this._Tabs = new EntitySet<Tab>(new Action<Tab>(this.attach_Tabs), new Action<Tab>(this.detach_Tabs));
			this._ContentItem = default(EntityRef<ContentItem>);
			this._Portal = default(EntityRef<Portal>);
			this._Tab1 = default(EntityRef<Tab>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TabID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TabID
		{
			get
			{
				return this._TabID;
			}
			set
			{
				if ((this._TabID != value))
				{
					this.OnTabIDChanging(value);
					this.SendPropertyChanging();
					this._TabID = value;
					this.SendPropertyChanged("TabID");
					this.OnTabIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TabOrder", DbType="Int NOT NULL")]
		public int TabOrder
		{
			get
			{
				return this._TabOrder;
			}
			set
			{
				if ((this._TabOrder != value))
				{
					this.OnTabOrderChanging(value);
					this.SendPropertyChanging();
					this._TabOrder = value;
					this.SendPropertyChanged("TabOrder");
					this.OnTabOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int")]
		public System.Nullable<int> PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					if (this._Portal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TabName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TabName
		{
			get
			{
				return this._TabName;
			}
			set
			{
				if ((this._TabName != value))
				{
					this.OnTabNameChanging(value);
					this.SendPropertyChanging();
					this._TabName = value;
					this.SendPropertyChanged("TabName");
					this.OnTabNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVisible", DbType="Bit NOT NULL")]
		public bool IsVisible
		{
			get
			{
				return this._IsVisible;
			}
			set
			{
				if ((this._IsVisible != value))
				{
					this.OnIsVisibleChanging(value);
					this.SendPropertyChanging();
					this._IsVisible = value;
					this.SendPropertyChanged("IsVisible");
					this.OnIsVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="Int")]
		public System.Nullable<int> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					if (this._Tab1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IconFile", DbType="NVarChar(100)")]
		public string IconFile
		{
			get
			{
				return this._IconFile;
			}
			set
			{
				if ((this._IconFile != value))
				{
					this.OnIconFileChanging(value);
					this.SendPropertyChanging();
					this._IconFile = value;
					this.SendPropertyChanged("IconFile");
					this.OnIconFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisableLink", DbType="Bit NOT NULL")]
		public bool DisableLink
		{
			get
			{
				return this._DisableLink;
			}
			set
			{
				if ((this._DisableLink != value))
				{
					this.OnDisableLinkChanging(value);
					this.SendPropertyChanging();
					this._DisableLink = value;
					this.SendPropertyChanged("DisableLink");
					this.OnDisableLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(200)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyWords", DbType="NVarChar(500)")]
		public string KeyWords
		{
			get
			{
				return this._KeyWords;
			}
			set
			{
				if ((this._KeyWords != value))
				{
					this.OnKeyWordsChanging(value);
					this.SendPropertyChanging();
					this._KeyWords = value;
					this.SendPropertyChanged("KeyWords");
					this.OnKeyWordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(255)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkinSrc", DbType="NVarChar(200)")]
		public string SkinSrc
		{
			get
			{
				return this._SkinSrc;
			}
			set
			{
				if ((this._SkinSrc != value))
				{
					this.OnSkinSrcChanging(value);
					this.SendPropertyChanging();
					this._SkinSrc = value;
					this.SendPropertyChanged("SkinSrc");
					this.OnSkinSrcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContainerSrc", DbType="NVarChar(200)")]
		public string ContainerSrc
		{
			get
			{
				return this._ContainerSrc;
			}
			set
			{
				if ((this._ContainerSrc != value))
				{
					this.OnContainerSrcChanging(value);
					this.SendPropertyChanging();
					this._ContainerSrc = value;
					this.SendPropertyChanged("ContainerSrc");
					this.OnContainerSrcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefreshInterval", DbType="Int")]
		public System.Nullable<int> RefreshInterval
		{
			get
			{
				return this._RefreshInterval;
			}
			set
			{
				if ((this._RefreshInterval != value))
				{
					this.OnRefreshIntervalChanging(value);
					this.SendPropertyChanging();
					this._RefreshInterval = value;
					this.SendPropertyChanged("RefreshInterval");
					this.OnRefreshIntervalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageHeadText", DbType="NVarChar(MAX)")]
		public string PageHeadText
		{
			get
			{
				return this._PageHeadText;
			}
			set
			{
				if ((this._PageHeadText != value))
				{
					this.OnPageHeadTextChanging(value);
					this.SendPropertyChanging();
					this._PageHeadText = value;
					this.SendPropertyChanged("PageHeadText");
					this.OnPageHeadTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSecure", DbType="Bit NOT NULL")]
		public bool IsSecure
		{
			get
			{
				return this._IsSecure;
			}
			set
			{
				if ((this._IsSecure != value))
				{
					this.OnIsSecureChanging(value);
					this.SendPropertyChanging();
					this._IsSecure = value;
					this.SendPropertyChanged("IsSecure");
					this.OnIsSecureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermanentRedirect", DbType="Bit NOT NULL")]
		public bool PermanentRedirect
		{
			get
			{
				return this._PermanentRedirect;
			}
			set
			{
				if ((this._PermanentRedirect != value))
				{
					this.OnPermanentRedirectChanging(value);
					this.SendPropertyChanging();
					this._PermanentRedirect = value;
					this.SendPropertyChanged("PermanentRedirect");
					this.OnPermanentRedirectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteMapPriority", DbType="Float NOT NULL")]
		public double SiteMapPriority
		{
			get
			{
				return this._SiteMapPriority;
			}
			set
			{
				if ((this._SiteMapPriority != value))
				{
					this.OnSiteMapPriorityChanging(value);
					this.SendPropertyChanging();
					this._SiteMapPriority = value;
					this.SendPropertyChanged("SiteMapPriority");
					this.OnSiteMapPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IconFileLarge", DbType="NVarChar(100)")]
		public string IconFileLarge
		{
			get
			{
				return this._IconFileLarge;
			}
			set
			{
				if ((this._IconFileLarge != value))
				{
					this.OnIconFileLargeChanging(value);
					this.SendPropertyChanging();
					this._IconFileLarge = value;
					this.SendPropertyChanged("IconFileLarge");
					this.OnIconFileLargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CultureCode", DbType="NVarChar(10)")]
		public string CultureCode
		{
			get
			{
				return this._CultureCode;
			}
			set
			{
				if ((this._CultureCode != value))
				{
					this.OnCultureCodeChanging(value);
					this.SendPropertyChanging();
					this._CultureCode = value;
					this.SendPropertyChanged("CultureCode");
					this.OnCultureCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentItemID", DbType="Int")]
		public System.Nullable<int> ContentItemID
		{
			get
			{
				return this._ContentItemID;
			}
			set
			{
				if ((this._ContentItemID != value))
				{
					if (this._ContentItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContentItemIDChanging(value);
					this.SendPropertyChanging();
					this._ContentItemID = value;
					this.SendPropertyChanged("ContentItemID");
					this.OnContentItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UniqueId
		{
			get
			{
				return this._UniqueId;
			}
			set
			{
				if ((this._UniqueId != value))
				{
					this.OnUniqueIdChanging(value);
					this.SendPropertyChanging();
					this._UniqueId = value;
					this.SendPropertyChanged("UniqueId");
					this.OnUniqueIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionGuid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid VersionGuid
		{
			get
			{
				return this._VersionGuid;
			}
			set
			{
				if ((this._VersionGuid != value))
				{
					this.OnVersionGuidChanging(value);
					this.SendPropertyChanging();
					this._VersionGuid = value;
					this.SendPropertyChanged("VersionGuid");
					this.OnVersionGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultLanguageGuid", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DefaultLanguageGuid
		{
			get
			{
				return this._DefaultLanguageGuid;
			}
			set
			{
				if ((this._DefaultLanguageGuid != value))
				{
					this.OnDefaultLanguageGuidChanging(value);
					this.SendPropertyChanging();
					this._DefaultLanguageGuid = value;
					this.SendPropertyChanged("DefaultLanguageGuid");
					this.OnDefaultLanguageGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocalizedVersionGuid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid LocalizedVersionGuid
		{
			get
			{
				return this._LocalizedVersionGuid;
			}
			set
			{
				if ((this._LocalizedVersionGuid != value))
				{
					this.OnLocalizedVersionGuidChanging(value);
					this.SendPropertyChanging();
					this._LocalizedVersionGuid = value;
					this.SendPropertyChanged("LocalizedVersionGuid");
					this.OnLocalizedVersionGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="Int NOT NULL")]
		public int Level
		{
			get
			{
				return this._Level;
			}
			set
			{
				if ((this._Level != value))
				{
					this.OnLevelChanging(value);
					this.SendPropertyChanging();
					this._Level = value;
					this.SendPropertyChanged("Level");
					this.OnLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TabPath", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string TabPath
		{
			get
			{
				return this._TabPath;
			}
			set
			{
				if ((this._TabPath != value))
				{
					this.OnTabPathChanging(value);
					this.SendPropertyChanging();
					this._TabPath = value;
					this.SendPropertyChanged("TabPath");
					this.OnTabPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tab_TabModule", Storage="_TabModules", ThisKey="TabID", OtherKey="TabID")]
		public EntitySet<TabModule> TabModules
		{
			get
			{
				return this._TabModules;
			}
			set
			{
				this._TabModules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tab_TabPermission", Storage="_TabPermissions", ThisKey="TabID", OtherKey="TabID")]
		public EntitySet<TabPermission> TabPermissions
		{
			get
			{
				return this._TabPermissions;
			}
			set
			{
				this._TabPermissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tab_Tab", Storage="_Tabs", ThisKey="TabID", OtherKey="ParentId")]
		public EntitySet<Tab> Tabs
		{
			get
			{
				return this._Tabs;
			}
			set
			{
				this._Tabs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContentItem_Tab", Storage="_ContentItem", ThisKey="ContentItemID", OtherKey="ContentItemID", IsForeignKey=true)]
		public ContentItem ContentItem
		{
			get
			{
				return this._ContentItem.Entity;
			}
			set
			{
				ContentItem previousValue = this._ContentItem.Entity;
				if (((previousValue != value) 
							|| (this._ContentItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContentItem.Entity = null;
						previousValue.Tabs.Remove(this);
					}
					this._ContentItem.Entity = value;
					if ((value != null))
					{
						value.Tabs.Add(this);
						this._ContentItemID = value.ContentItemID;
					}
					else
					{
						this._ContentItemID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ContentItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Portal_Tab", Storage="_Portal", ThisKey="PortalID", OtherKey="PortalID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Portal Portal
		{
			get
			{
				return this._Portal.Entity;
			}
			set
			{
				Portal previousValue = this._Portal.Entity;
				if (((previousValue != value) 
							|| (this._Portal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Portal.Entity = null;
						previousValue.Tabs.Remove(this);
					}
					this._Portal.Entity = value;
					if ((value != null))
					{
						value.Tabs.Add(this);
						this._PortalID = value.PortalID;
					}
					else
					{
						this._PortalID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Portal");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tab_Tab", Storage="_Tab1", ThisKey="ParentId", OtherKey="TabID", IsForeignKey=true)]
		public Tab Tab1
		{
			get
			{
				return this._Tab1.Entity;
			}
			set
			{
				Tab previousValue = this._Tab1.Entity;
				if (((previousValue != value) 
							|| (this._Tab1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tab1.Entity = null;
						previousValue.Tabs.Remove(this);
					}
					this._Tab1.Entity = value;
					if ((value != null))
					{
						value.Tabs.Add(this);
						this._ParentId = value.TabID;
					}
					else
					{
						this._ParentId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tab1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TabModules(TabModule entity)
		{
			this.SendPropertyChanging();
			entity.Tab = this;
		}
		
		private void detach_TabModules(TabModule entity)
		{
			this.SendPropertyChanging();
			entity.Tab = null;
		}
		
		private void attach_TabPermissions(TabPermission entity)
		{
			this.SendPropertyChanging();
			entity.Tab = this;
		}
		
		private void detach_TabPermissions(TabPermission entity)
		{
			this.SendPropertyChanging();
			entity.Tab = null;
		}
		
		private void attach_Tabs(Tab entity)
		{
			this.SendPropertyChanging();
			entity.Tab1 = this;
		}
		
		private void detach_Tabs(Tab entity)
		{
			this.SendPropertyChanging();
			entity.Tab1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TabSettings")]
	public partial class TabSetting
	{
		
		private int _TabID;
		
		private string _SettingName;
		
		private string _SettingValue;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		public TabSetting()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TabID", DbType="Int NOT NULL")]
		public int TabID
		{
			get
			{
				return this._TabID;
			}
			set
			{
				if ((this._TabID != value))
				{
					this._TabID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SettingName
		{
			get
			{
				return this._SettingName;
			}
			set
			{
				if ((this._SettingName != value))
				{
					this._SettingName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingValue", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string SettingValue
		{
			get
			{
				return this._SettingValue;
			}
			set
			{
				if ((this._SettingValue != value))
				{
					this._SettingValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this._CreatedByUserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this._CreatedOnDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this._LastModifiedByUserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this._LastModifiedOnDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Taxonomy_ScopeTypes")]
	public partial class Taxonomy_ScopeType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ScopeTypeID;
		
		private string _ScopeType;
		
		private EntitySet<Taxonomy_Vocabulary> _Taxonomy_Vocabularies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnScopeTypeIDChanging(int value);
    partial void OnScopeTypeIDChanged();
    partial void OnScopeTypeChanging(string value);
    partial void OnScopeTypeChanged();
    #endregion
		
		public Taxonomy_ScopeType()
		{
			this._Taxonomy_Vocabularies = new EntitySet<Taxonomy_Vocabulary>(new Action<Taxonomy_Vocabulary>(this.attach_Taxonomy_Vocabularies), new Action<Taxonomy_Vocabulary>(this.detach_Taxonomy_Vocabularies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScopeTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ScopeTypeID
		{
			get
			{
				return this._ScopeTypeID;
			}
			set
			{
				if ((this._ScopeTypeID != value))
				{
					this.OnScopeTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ScopeTypeID = value;
					this.SendPropertyChanged("ScopeTypeID");
					this.OnScopeTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScopeType", DbType="NVarChar(250)")]
		public string ScopeType
		{
			get
			{
				return this._ScopeType;
			}
			set
			{
				if ((this._ScopeType != value))
				{
					this.OnScopeTypeChanging(value);
					this.SendPropertyChanging();
					this._ScopeType = value;
					this.SendPropertyChanged("ScopeType");
					this.OnScopeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Taxonomy_ScopeType_Taxonomy_Vocabulary", Storage="_Taxonomy_Vocabularies", ThisKey="ScopeTypeID", OtherKey="ScopeTypeID")]
		public EntitySet<Taxonomy_Vocabulary> Taxonomy_Vocabularies
		{
			get
			{
				return this._Taxonomy_Vocabularies;
			}
			set
			{
				this._Taxonomy_Vocabularies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Taxonomy_Vocabularies(Taxonomy_Vocabulary entity)
		{
			this.SendPropertyChanging();
			entity.Taxonomy_ScopeType = this;
		}
		
		private void detach_Taxonomy_Vocabularies(Taxonomy_Vocabulary entity)
		{
			this.SendPropertyChanging();
			entity.Taxonomy_ScopeType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Taxonomy_Terms")]
	public partial class Taxonomy_Term : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TermID;
		
		private int _VocabularyID;
		
		private System.Nullable<int> _ParentTermID;
		
		private string _Name;
		
		private string _Description;
		
		private int _Weight;
		
		private int _TermLeft;
		
		private int _TermRight;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntitySet<ContentItems_Tag> _ContentItems_Tags;
		
		private EntitySet<Taxonomy_Term> _Taxonomy_Terms;
		
		private EntityRef<Taxonomy_Term> _Taxonomy_Term1;
		
		private EntityRef<Taxonomy_Vocabulary> _Taxonomy_Vocabulary;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTermIDChanging(int value);
    partial void OnTermIDChanged();
    partial void OnVocabularyIDChanging(int value);
    partial void OnVocabularyIDChanged();
    partial void OnParentTermIDChanging(System.Nullable<int> value);
    partial void OnParentTermIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnWeightChanging(int value);
    partial void OnWeightChanged();
    partial void OnTermLeftChanging(int value);
    partial void OnTermLeftChanged();
    partial void OnTermRightChanging(int value);
    partial void OnTermRightChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public Taxonomy_Term()
		{
			this._ContentItems_Tags = new EntitySet<ContentItems_Tag>(new Action<ContentItems_Tag>(this.attach_ContentItems_Tags), new Action<ContentItems_Tag>(this.detach_ContentItems_Tags));
			this._Taxonomy_Terms = new EntitySet<Taxonomy_Term>(new Action<Taxonomy_Term>(this.attach_Taxonomy_Terms), new Action<Taxonomy_Term>(this.detach_Taxonomy_Terms));
			this._Taxonomy_Term1 = default(EntityRef<Taxonomy_Term>);
			this._Taxonomy_Vocabulary = default(EntityRef<Taxonomy_Vocabulary>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TermID
		{
			get
			{
				return this._TermID;
			}
			set
			{
				if ((this._TermID != value))
				{
					this.OnTermIDChanging(value);
					this.SendPropertyChanging();
					this._TermID = value;
					this.SendPropertyChanged("TermID");
					this.OnTermIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VocabularyID", DbType="Int NOT NULL")]
		public int VocabularyID
		{
			get
			{
				return this._VocabularyID;
			}
			set
			{
				if ((this._VocabularyID != value))
				{
					if (this._Taxonomy_Vocabulary.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVocabularyIDChanging(value);
					this.SendPropertyChanging();
					this._VocabularyID = value;
					this.SendPropertyChanged("VocabularyID");
					this.OnVocabularyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentTermID", DbType="Int")]
		public System.Nullable<int> ParentTermID
		{
			get
			{
				return this._ParentTermID;
			}
			set
			{
				if ((this._ParentTermID != value))
				{
					if (this._Taxonomy_Term1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentTermIDChanging(value);
					this.SendPropertyChanging();
					this._ParentTermID = value;
					this.SendPropertyChanged("ParentTermID");
					this.OnParentTermIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(2500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Int NOT NULL")]
		public int Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermLeft", DbType="Int NOT NULL")]
		public int TermLeft
		{
			get
			{
				return this._TermLeft;
			}
			set
			{
				if ((this._TermLeft != value))
				{
					this.OnTermLeftChanging(value);
					this.SendPropertyChanging();
					this._TermLeft = value;
					this.SendPropertyChanged("TermLeft");
					this.OnTermLeftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermRight", DbType="Int NOT NULL")]
		public int TermRight
		{
			get
			{
				return this._TermRight;
			}
			set
			{
				if ((this._TermRight != value))
				{
					this.OnTermRightChanging(value);
					this.SendPropertyChanging();
					this._TermRight = value;
					this.SendPropertyChanged("TermRight");
					this.OnTermRightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Taxonomy_Term_ContentItems_Tag", Storage="_ContentItems_Tags", ThisKey="TermID", OtherKey="TermID")]
		public EntitySet<ContentItems_Tag> ContentItems_Tags
		{
			get
			{
				return this._ContentItems_Tags;
			}
			set
			{
				this._ContentItems_Tags.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Taxonomy_Term_Taxonomy_Term", Storage="_Taxonomy_Terms", ThisKey="TermID", OtherKey="ParentTermID")]
		public EntitySet<Taxonomy_Term> Taxonomy_Terms
		{
			get
			{
				return this._Taxonomy_Terms;
			}
			set
			{
				this._Taxonomy_Terms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Taxonomy_Term_Taxonomy_Term", Storage="_Taxonomy_Term1", ThisKey="ParentTermID", OtherKey="TermID", IsForeignKey=true)]
		public Taxonomy_Term Taxonomy_Term1
		{
			get
			{
				return this._Taxonomy_Term1.Entity;
			}
			set
			{
				Taxonomy_Term previousValue = this._Taxonomy_Term1.Entity;
				if (((previousValue != value) 
							|| (this._Taxonomy_Term1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Taxonomy_Term1.Entity = null;
						previousValue.Taxonomy_Terms.Remove(this);
					}
					this._Taxonomy_Term1.Entity = value;
					if ((value != null))
					{
						value.Taxonomy_Terms.Add(this);
						this._ParentTermID = value.TermID;
					}
					else
					{
						this._ParentTermID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Taxonomy_Term1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Taxonomy_Vocabulary_Taxonomy_Term", Storage="_Taxonomy_Vocabulary", ThisKey="VocabularyID", OtherKey="VocabularyID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Taxonomy_Vocabulary Taxonomy_Vocabulary
		{
			get
			{
				return this._Taxonomy_Vocabulary.Entity;
			}
			set
			{
				Taxonomy_Vocabulary previousValue = this._Taxonomy_Vocabulary.Entity;
				if (((previousValue != value) 
							|| (this._Taxonomy_Vocabulary.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Taxonomy_Vocabulary.Entity = null;
						previousValue.Taxonomy_Terms.Remove(this);
					}
					this._Taxonomy_Vocabulary.Entity = value;
					if ((value != null))
					{
						value.Taxonomy_Terms.Add(this);
						this._VocabularyID = value.VocabularyID;
					}
					else
					{
						this._VocabularyID = default(int);
					}
					this.SendPropertyChanged("Taxonomy_Vocabulary");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ContentItems_Tags(ContentItems_Tag entity)
		{
			this.SendPropertyChanging();
			entity.Taxonomy_Term = this;
		}
		
		private void detach_ContentItems_Tags(ContentItems_Tag entity)
		{
			this.SendPropertyChanging();
			entity.Taxonomy_Term = null;
		}
		
		private void attach_Taxonomy_Terms(Taxonomy_Term entity)
		{
			this.SendPropertyChanging();
			entity.Taxonomy_Term1 = this;
		}
		
		private void detach_Taxonomy_Terms(Taxonomy_Term entity)
		{
			this.SendPropertyChanging();
			entity.Taxonomy_Term1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Taxonomy_Vocabularies")]
	public partial class Taxonomy_Vocabulary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VocabularyID;
		
		private int _VocabularyTypeID;
		
		private string _Name;
		
		private string _Description;
		
		private int _Weight;
		
		private System.Nullable<int> _ScopeID;
		
		private int _ScopeTypeID;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private bool _IsSystem;
		
		private EntitySet<Taxonomy_Term> _Taxonomy_Terms;
		
		private EntityRef<Taxonomy_ScopeType> _Taxonomy_ScopeType;
		
		private EntityRef<Taxonomy_VocabularyType> _Taxonomy_VocabularyType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVocabularyIDChanging(int value);
    partial void OnVocabularyIDChanged();
    partial void OnVocabularyTypeIDChanging(int value);
    partial void OnVocabularyTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnWeightChanging(int value);
    partial void OnWeightChanged();
    partial void OnScopeIDChanging(System.Nullable<int> value);
    partial void OnScopeIDChanged();
    partial void OnScopeTypeIDChanging(int value);
    partial void OnScopeTypeIDChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    partial void OnIsSystemChanging(bool value);
    partial void OnIsSystemChanged();
    #endregion
		
		public Taxonomy_Vocabulary()
		{
			this._Taxonomy_Terms = new EntitySet<Taxonomy_Term>(new Action<Taxonomy_Term>(this.attach_Taxonomy_Terms), new Action<Taxonomy_Term>(this.detach_Taxonomy_Terms));
			this._Taxonomy_ScopeType = default(EntityRef<Taxonomy_ScopeType>);
			this._Taxonomy_VocabularyType = default(EntityRef<Taxonomy_VocabularyType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VocabularyID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VocabularyID
		{
			get
			{
				return this._VocabularyID;
			}
			set
			{
				if ((this._VocabularyID != value))
				{
					this.OnVocabularyIDChanging(value);
					this.SendPropertyChanging();
					this._VocabularyID = value;
					this.SendPropertyChanged("VocabularyID");
					this.OnVocabularyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VocabularyTypeID", DbType="Int NOT NULL")]
		public int VocabularyTypeID
		{
			get
			{
				return this._VocabularyTypeID;
			}
			set
			{
				if ((this._VocabularyTypeID != value))
				{
					if (this._Taxonomy_VocabularyType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVocabularyTypeIDChanging(value);
					this.SendPropertyChanging();
					this._VocabularyTypeID = value;
					this.SendPropertyChanged("VocabularyTypeID");
					this.OnVocabularyTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(2500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Int NOT NULL")]
		public int Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScopeID", DbType="Int")]
		public System.Nullable<int> ScopeID
		{
			get
			{
				return this._ScopeID;
			}
			set
			{
				if ((this._ScopeID != value))
				{
					this.OnScopeIDChanging(value);
					this.SendPropertyChanging();
					this._ScopeID = value;
					this.SendPropertyChanged("ScopeID");
					this.OnScopeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScopeTypeID", DbType="Int NOT NULL")]
		public int ScopeTypeID
		{
			get
			{
				return this._ScopeTypeID;
			}
			set
			{
				if ((this._ScopeTypeID != value))
				{
					if (this._Taxonomy_ScopeType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScopeTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ScopeTypeID = value;
					this.SendPropertyChanged("ScopeTypeID");
					this.OnScopeTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSystem", DbType="Bit NOT NULL")]
		public bool IsSystem
		{
			get
			{
				return this._IsSystem;
			}
			set
			{
				if ((this._IsSystem != value))
				{
					this.OnIsSystemChanging(value);
					this.SendPropertyChanging();
					this._IsSystem = value;
					this.SendPropertyChanged("IsSystem");
					this.OnIsSystemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Taxonomy_Vocabulary_Taxonomy_Term", Storage="_Taxonomy_Terms", ThisKey="VocabularyID", OtherKey="VocabularyID")]
		public EntitySet<Taxonomy_Term> Taxonomy_Terms
		{
			get
			{
				return this._Taxonomy_Terms;
			}
			set
			{
				this._Taxonomy_Terms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Taxonomy_ScopeType_Taxonomy_Vocabulary", Storage="_Taxonomy_ScopeType", ThisKey="ScopeTypeID", OtherKey="ScopeTypeID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Taxonomy_ScopeType Taxonomy_ScopeType
		{
			get
			{
				return this._Taxonomy_ScopeType.Entity;
			}
			set
			{
				Taxonomy_ScopeType previousValue = this._Taxonomy_ScopeType.Entity;
				if (((previousValue != value) 
							|| (this._Taxonomy_ScopeType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Taxonomy_ScopeType.Entity = null;
						previousValue.Taxonomy_Vocabularies.Remove(this);
					}
					this._Taxonomy_ScopeType.Entity = value;
					if ((value != null))
					{
						value.Taxonomy_Vocabularies.Add(this);
						this._ScopeTypeID = value.ScopeTypeID;
					}
					else
					{
						this._ScopeTypeID = default(int);
					}
					this.SendPropertyChanged("Taxonomy_ScopeType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Taxonomy_VocabularyType_Taxonomy_Vocabulary", Storage="_Taxonomy_VocabularyType", ThisKey="VocabularyTypeID", OtherKey="VocabularyTypeID", IsForeignKey=true)]
		public Taxonomy_VocabularyType Taxonomy_VocabularyType
		{
			get
			{
				return this._Taxonomy_VocabularyType.Entity;
			}
			set
			{
				Taxonomy_VocabularyType previousValue = this._Taxonomy_VocabularyType.Entity;
				if (((previousValue != value) 
							|| (this._Taxonomy_VocabularyType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Taxonomy_VocabularyType.Entity = null;
						previousValue.Taxonomy_Vocabularies.Remove(this);
					}
					this._Taxonomy_VocabularyType.Entity = value;
					if ((value != null))
					{
						value.Taxonomy_Vocabularies.Add(this);
						this._VocabularyTypeID = value.VocabularyTypeID;
					}
					else
					{
						this._VocabularyTypeID = default(int);
					}
					this.SendPropertyChanged("Taxonomy_VocabularyType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Taxonomy_Terms(Taxonomy_Term entity)
		{
			this.SendPropertyChanging();
			entity.Taxonomy_Vocabulary = this;
		}
		
		private void detach_Taxonomy_Terms(Taxonomy_Term entity)
		{
			this.SendPropertyChanging();
			entity.Taxonomy_Vocabulary = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Taxonomy_VocabularyTypes")]
	public partial class Taxonomy_VocabularyType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VocabularyTypeID;
		
		private string _VocabularyType;
		
		private EntitySet<Taxonomy_Vocabulary> _Taxonomy_Vocabularies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVocabularyTypeIDChanging(int value);
    partial void OnVocabularyTypeIDChanged();
    partial void OnVocabularyTypeChanging(string value);
    partial void OnVocabularyTypeChanged();
    #endregion
		
		public Taxonomy_VocabularyType()
		{
			this._Taxonomy_Vocabularies = new EntitySet<Taxonomy_Vocabulary>(new Action<Taxonomy_Vocabulary>(this.attach_Taxonomy_Vocabularies), new Action<Taxonomy_Vocabulary>(this.detach_Taxonomy_Vocabularies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VocabularyTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VocabularyTypeID
		{
			get
			{
				return this._VocabularyTypeID;
			}
			set
			{
				if ((this._VocabularyTypeID != value))
				{
					this.OnVocabularyTypeIDChanging(value);
					this.SendPropertyChanging();
					this._VocabularyTypeID = value;
					this.SendPropertyChanged("VocabularyTypeID");
					this.OnVocabularyTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VocabularyType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string VocabularyType
		{
			get
			{
				return this._VocabularyType;
			}
			set
			{
				if ((this._VocabularyType != value))
				{
					this.OnVocabularyTypeChanging(value);
					this.SendPropertyChanging();
					this._VocabularyType = value;
					this.SendPropertyChanged("VocabularyType");
					this.OnVocabularyTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Taxonomy_VocabularyType_Taxonomy_Vocabulary", Storage="_Taxonomy_Vocabularies", ThisKey="VocabularyTypeID", OtherKey="VocabularyTypeID")]
		public EntitySet<Taxonomy_Vocabulary> Taxonomy_Vocabularies
		{
			get
			{
				return this._Taxonomy_Vocabularies;
			}
			set
			{
				this._Taxonomy_Vocabularies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Taxonomy_Vocabularies(Taxonomy_Vocabulary entity)
		{
			this.SendPropertyChanging();
			entity.Taxonomy_VocabularyType = this;
		}
		
		private void detach_Taxonomy_Vocabularies(Taxonomy_Vocabulary entity)
		{
			this.SendPropertyChanging();
			entity.Taxonomy_VocabularyType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UrlLog")]
	public partial class UrlLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UrlLogID;
		
		private int _UrlTrackingID;
		
		private System.DateTime _ClickDate;
		
		private System.Nullable<int> _UserID;
		
		private EntityRef<UrlTracking> _UrlTracking;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUrlLogIDChanging(int value);
    partial void OnUrlLogIDChanged();
    partial void OnUrlTrackingIDChanging(int value);
    partial void OnUrlTrackingIDChanged();
    partial void OnClickDateChanging(System.DateTime value);
    partial void OnClickDateChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    #endregion
		
		public UrlLog()
		{
			this._UrlTracking = default(EntityRef<UrlTracking>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlLogID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UrlLogID
		{
			get
			{
				return this._UrlLogID;
			}
			set
			{
				if ((this._UrlLogID != value))
				{
					this.OnUrlLogIDChanging(value);
					this.SendPropertyChanging();
					this._UrlLogID = value;
					this.SendPropertyChanged("UrlLogID");
					this.OnUrlLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlTrackingID", DbType="Int NOT NULL")]
		public int UrlTrackingID
		{
			get
			{
				return this._UrlTrackingID;
			}
			set
			{
				if ((this._UrlTrackingID != value))
				{
					if (this._UrlTracking.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUrlTrackingIDChanging(value);
					this.SendPropertyChanging();
					this._UrlTrackingID = value;
					this.SendPropertyChanged("UrlTrackingID");
					this.OnUrlTrackingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClickDate", DbType="DateTime NOT NULL")]
		public System.DateTime ClickDate
		{
			get
			{
				return this._ClickDate;
			}
			set
			{
				if ((this._ClickDate != value))
				{
					this.OnClickDateChanging(value);
					this.SendPropertyChanging();
					this._ClickDate = value;
					this.SendPropertyChanged("ClickDate");
					this.OnClickDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UrlTracking_UrlLog", Storage="_UrlTracking", ThisKey="UrlTrackingID", OtherKey="UrlTrackingID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public UrlTracking UrlTracking
		{
			get
			{
				return this._UrlTracking.Entity;
			}
			set
			{
				UrlTracking previousValue = this._UrlTracking.Entity;
				if (((previousValue != value) 
							|| (this._UrlTracking.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UrlTracking.Entity = null;
						previousValue.UrlLogs.Remove(this);
					}
					this._UrlTracking.Entity = value;
					if ((value != null))
					{
						value.UrlLogs.Add(this);
						this._UrlTrackingID = value.UrlTrackingID;
					}
					else
					{
						this._UrlTrackingID = default(int);
					}
					this.SendPropertyChanged("UrlTracking");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Urls")]
	public partial class Url : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UrlID;
		
		private System.Nullable<int> _PortalID;
		
		private string _Url1;
		
		private EntityRef<Portal> _Portal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUrlIDChanging(int value);
    partial void OnUrlIDChanged();
    partial void OnPortalIDChanging(System.Nullable<int> value);
    partial void OnPortalIDChanged();
    partial void OnUrl1Changing(string value);
    partial void OnUrl1Changed();
    #endregion
		
		public Url()
		{
			this._Portal = default(EntityRef<Portal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UrlID
		{
			get
			{
				return this._UrlID;
			}
			set
			{
				if ((this._UrlID != value))
				{
					this.OnUrlIDChanging(value);
					this.SendPropertyChanging();
					this._UrlID = value;
					this.SendPropertyChanged("UrlID");
					this.OnUrlIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int")]
		public System.Nullable<int> PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					if (this._Portal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Url", Storage="_Url1", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Url1
		{
			get
			{
				return this._Url1;
			}
			set
			{
				if ((this._Url1 != value))
				{
					this.OnUrl1Changing(value);
					this.SendPropertyChanging();
					this._Url1 = value;
					this.SendPropertyChanged("Url1");
					this.OnUrl1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Portal_Url", Storage="_Portal", ThisKey="PortalID", OtherKey="PortalID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Portal Portal
		{
			get
			{
				return this._Portal.Entity;
			}
			set
			{
				Portal previousValue = this._Portal.Entity;
				if (((previousValue != value) 
							|| (this._Portal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Portal.Entity = null;
						previousValue.Urls.Remove(this);
					}
					this._Portal.Entity = value;
					if ((value != null))
					{
						value.Urls.Add(this);
						this._PortalID = value.PortalID;
					}
					else
					{
						this._PortalID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Portal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UrlTracking")]
	public partial class UrlTracking : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UrlTrackingID;
		
		private System.Nullable<int> _PortalID;
		
		private string _Url;
		
		private char _UrlType;
		
		private int _Clicks;
		
		private System.Nullable<System.DateTime> _LastClick;
		
		private System.DateTime _CreatedDate;
		
		private bool _LogActivity;
		
		private bool _TrackClicks;
		
		private System.Nullable<int> _ModuleId;
		
		private bool _NewWindow;
		
		private EntitySet<UrlLog> _UrlLogs;
		
		private EntityRef<Portal> _Portal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUrlTrackingIDChanging(int value);
    partial void OnUrlTrackingIDChanged();
    partial void OnPortalIDChanging(System.Nullable<int> value);
    partial void OnPortalIDChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnUrlTypeChanging(char value);
    partial void OnUrlTypeChanged();
    partial void OnClicksChanging(int value);
    partial void OnClicksChanged();
    partial void OnLastClickChanging(System.Nullable<System.DateTime> value);
    partial void OnLastClickChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnLogActivityChanging(bool value);
    partial void OnLogActivityChanged();
    partial void OnTrackClicksChanging(bool value);
    partial void OnTrackClicksChanged();
    partial void OnModuleIdChanging(System.Nullable<int> value);
    partial void OnModuleIdChanged();
    partial void OnNewWindowChanging(bool value);
    partial void OnNewWindowChanged();
    #endregion
		
		public UrlTracking()
		{
			this._UrlLogs = new EntitySet<UrlLog>(new Action<UrlLog>(this.attach_UrlLogs), new Action<UrlLog>(this.detach_UrlLogs));
			this._Portal = default(EntityRef<Portal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlTrackingID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UrlTrackingID
		{
			get
			{
				return this._UrlTrackingID;
			}
			set
			{
				if ((this._UrlTrackingID != value))
				{
					this.OnUrlTrackingIDChanging(value);
					this.SendPropertyChanging();
					this._UrlTrackingID = value;
					this.SendPropertyChanged("UrlTrackingID");
					this.OnUrlTrackingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int")]
		public System.Nullable<int> PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					if (this._Portal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlType", DbType="Char(1) NOT NULL")]
		public char UrlType
		{
			get
			{
				return this._UrlType;
			}
			set
			{
				if ((this._UrlType != value))
				{
					this.OnUrlTypeChanging(value);
					this.SendPropertyChanging();
					this._UrlType = value;
					this.SendPropertyChanged("UrlType");
					this.OnUrlTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Clicks", DbType="Int NOT NULL")]
		public int Clicks
		{
			get
			{
				return this._Clicks;
			}
			set
			{
				if ((this._Clicks != value))
				{
					this.OnClicksChanging(value);
					this.SendPropertyChanging();
					this._Clicks = value;
					this.SendPropertyChanged("Clicks");
					this.OnClicksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastClick", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastClick
		{
			get
			{
				return this._LastClick;
			}
			set
			{
				if ((this._LastClick != value))
				{
					this.OnLastClickChanging(value);
					this.SendPropertyChanging();
					this._LastClick = value;
					this.SendPropertyChanged("LastClick");
					this.OnLastClickChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogActivity", DbType="Bit NOT NULL")]
		public bool LogActivity
		{
			get
			{
				return this._LogActivity;
			}
			set
			{
				if ((this._LogActivity != value))
				{
					this.OnLogActivityChanging(value);
					this.SendPropertyChanging();
					this._LogActivity = value;
					this.SendPropertyChanged("LogActivity");
					this.OnLogActivityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackClicks", DbType="Bit NOT NULL")]
		public bool TrackClicks
		{
			get
			{
				return this._TrackClicks;
			}
			set
			{
				if ((this._TrackClicks != value))
				{
					this.OnTrackClicksChanging(value);
					this.SendPropertyChanging();
					this._TrackClicks = value;
					this.SendPropertyChanged("TrackClicks");
					this.OnTrackClicksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleId", DbType="Int")]
		public System.Nullable<int> ModuleId
		{
			get
			{
				return this._ModuleId;
			}
			set
			{
				if ((this._ModuleId != value))
				{
					this.OnModuleIdChanging(value);
					this.SendPropertyChanging();
					this._ModuleId = value;
					this.SendPropertyChanged("ModuleId");
					this.OnModuleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewWindow", DbType="Bit NOT NULL")]
		public bool NewWindow
		{
			get
			{
				return this._NewWindow;
			}
			set
			{
				if ((this._NewWindow != value))
				{
					this.OnNewWindowChanging(value);
					this.SendPropertyChanging();
					this._NewWindow = value;
					this.SendPropertyChanged("NewWindow");
					this.OnNewWindowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UrlTracking_UrlLog", Storage="_UrlLogs", ThisKey="UrlTrackingID", OtherKey="UrlTrackingID")]
		public EntitySet<UrlLog> UrlLogs
		{
			get
			{
				return this._UrlLogs;
			}
			set
			{
				this._UrlLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Portal_UrlTracking", Storage="_Portal", ThisKey="PortalID", OtherKey="PortalID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Portal Portal
		{
			get
			{
				return this._Portal.Entity;
			}
			set
			{
				Portal previousValue = this._Portal.Entity;
				if (((previousValue != value) 
							|| (this._Portal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Portal.Entity = null;
						previousValue.UrlTrackings.Remove(this);
					}
					this._Portal.Entity = value;
					if ((value != null))
					{
						value.UrlTrackings.Add(this);
						this._PortalID = value.PortalID;
					}
					else
					{
						this._PortalID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Portal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UrlLogs(UrlLog entity)
		{
			this.SendPropertyChanging();
			entity.UrlTracking = this;
		}
		
		private void detach_UrlLogs(UrlLog entity)
		{
			this.SendPropertyChanging();
			entity.UrlTracking = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserAuthentication")]
	public partial class UserAuthentication : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserAuthenticationID;
		
		private int _UserID;
		
		private string _AuthenticationType;
		
		private string _AuthenticationToken;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserAuthenticationIDChanging(int value);
    partial void OnUserAuthenticationIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnAuthenticationTypeChanging(string value);
    partial void OnAuthenticationTypeChanged();
    partial void OnAuthenticationTokenChanging(string value);
    partial void OnAuthenticationTokenChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public UserAuthentication()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAuthenticationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserAuthenticationID
		{
			get
			{
				return this._UserAuthenticationID;
			}
			set
			{
				if ((this._UserAuthenticationID != value))
				{
					this.OnUserAuthenticationIDChanging(value);
					this.SendPropertyChanging();
					this._UserAuthenticationID = value;
					this.SendPropertyChanged("UserAuthenticationID");
					this.OnUserAuthenticationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthenticationType", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string AuthenticationType
		{
			get
			{
				return this._AuthenticationType;
			}
			set
			{
				if ((this._AuthenticationType != value))
				{
					this.OnAuthenticationTypeChanging(value);
					this.SendPropertyChanging();
					this._AuthenticationType = value;
					this.SendPropertyChanged("AuthenticationType");
					this.OnAuthenticationTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthenticationToken", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string AuthenticationToken
		{
			get
			{
				return this._AuthenticationToken;
			}
			set
			{
				if ((this._AuthenticationToken != value))
				{
					this.OnAuthenticationTokenChanging(value);
					this.SendPropertyChanging();
					this._AuthenticationToken = value;
					this.SendPropertyChanged("AuthenticationToken");
					this.OnAuthenticationTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserAuthentication", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserAuthentications.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserAuthentications.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserPortals")]
	public partial class UserPortal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private int _PortalId;
		
		private int _UserPortalId;
		
		private System.DateTime _CreatedDate;
		
		private bool _Authorised;
		
		private bool _IsDeleted;
		
		private bool _RefreshRoles;
		
		private EntityRef<Portal> _Portal;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnPortalIdChanging(int value);
    partial void OnPortalIdChanged();
    partial void OnUserPortalIdChanging(int value);
    partial void OnUserPortalIdChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnAuthorisedChanging(bool value);
    partial void OnAuthorisedChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnRefreshRolesChanging(bool value);
    partial void OnRefreshRolesChanged();
    #endregion
		
		public UserPortal()
		{
			this._Portal = default(EntityRef<Portal>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PortalId
		{
			get
			{
				return this._PortalId;
			}
			set
			{
				if ((this._PortalId != value))
				{
					if (this._Portal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalIdChanging(value);
					this.SendPropertyChanging();
					this._PortalId = value;
					this.SendPropertyChanged("PortalId");
					this.OnPortalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPortalId", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int UserPortalId
		{
			get
			{
				return this._UserPortalId;
			}
			set
			{
				if ((this._UserPortalId != value))
				{
					this.OnUserPortalIdChanging(value);
					this.SendPropertyChanging();
					this._UserPortalId = value;
					this.SendPropertyChanged("UserPortalId");
					this.OnUserPortalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Authorised", DbType="Bit NOT NULL")]
		public bool Authorised
		{
			get
			{
				return this._Authorised;
			}
			set
			{
				if ((this._Authorised != value))
				{
					this.OnAuthorisedChanging(value);
					this.SendPropertyChanging();
					this._Authorised = value;
					this.SendPropertyChanged("Authorised");
					this.OnAuthorisedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefreshRoles", DbType="Bit NOT NULL")]
		public bool RefreshRoles
		{
			get
			{
				return this._RefreshRoles;
			}
			set
			{
				if ((this._RefreshRoles != value))
				{
					this.OnRefreshRolesChanging(value);
					this.SendPropertyChanging();
					this._RefreshRoles = value;
					this.SendPropertyChanged("RefreshRoles");
					this.OnRefreshRolesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Portal_UserPortal", Storage="_Portal", ThisKey="PortalId", OtherKey="PortalID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Portal Portal
		{
			get
			{
				return this._Portal.Entity;
			}
			set
			{
				Portal previousValue = this._Portal.Entity;
				if (((previousValue != value) 
							|| (this._Portal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Portal.Entity = null;
						previousValue.UserPortals.Remove(this);
					}
					this._Portal.Entity = value;
					if ((value != null))
					{
						value.UserPortals.Add(this);
						this._PortalId = value.PortalID;
					}
					else
					{
						this._PortalId = default(int);
					}
					this.SendPropertyChanged("Portal");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserPortal", Storage="_User", ThisKey="UserId", OtherKey="UserID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserPortals.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserPortals.Add(this);
						this._UserId = value.UserID;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserProfile")]
	public partial class UserProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProfileID;
		
		private int _UserID;
		
		private int _PropertyDefinitionID;
		
		private string _PropertyValue;
		
		private string _PropertyText;
		
		private int _Visibility;
		
		private System.DateTime _LastUpdatedDate;
		
		private string _ExtendedVisibility;
		
		private EntityRef<ProfilePropertyDefinition> _ProfilePropertyDefinition;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProfileIDChanging(int value);
    partial void OnProfileIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnPropertyDefinitionIDChanging(int value);
    partial void OnPropertyDefinitionIDChanged();
    partial void OnPropertyValueChanging(string value);
    partial void OnPropertyValueChanged();
    partial void OnPropertyTextChanging(string value);
    partial void OnPropertyTextChanged();
    partial void OnVisibilityChanging(int value);
    partial void OnVisibilityChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    partial void OnExtendedVisibilityChanging(string value);
    partial void OnExtendedVisibilityChanged();
    #endregion
		
		public UserProfile()
		{
			this._ProfilePropertyDefinition = default(EntityRef<ProfilePropertyDefinition>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProfileID
		{
			get
			{
				return this._ProfileID;
			}
			set
			{
				if ((this._ProfileID != value))
				{
					this.OnProfileIDChanging(value);
					this.SendPropertyChanging();
					this._ProfileID = value;
					this.SendPropertyChanged("ProfileID");
					this.OnProfileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyDefinitionID", DbType="Int NOT NULL")]
		public int PropertyDefinitionID
		{
			get
			{
				return this._PropertyDefinitionID;
			}
			set
			{
				if ((this._PropertyDefinitionID != value))
				{
					if (this._ProfilePropertyDefinition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPropertyDefinitionIDChanging(value);
					this.SendPropertyChanging();
					this._PropertyDefinitionID = value;
					this.SendPropertyChanged("PropertyDefinitionID");
					this.OnPropertyDefinitionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValue", DbType="NVarChar(3750)")]
		public string PropertyValue
		{
			get
			{
				return this._PropertyValue;
			}
			set
			{
				if ((this._PropertyValue != value))
				{
					this.OnPropertyValueChanging(value);
					this.SendPropertyChanging();
					this._PropertyValue = value;
					this.SendPropertyChanged("PropertyValue");
					this.OnPropertyValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyText", DbType="NVarChar(MAX)")]
		public string PropertyText
		{
			get
			{
				return this._PropertyText;
			}
			set
			{
				if ((this._PropertyText != value))
				{
					this.OnPropertyTextChanging(value);
					this.SendPropertyChanging();
					this._PropertyText = value;
					this.SendPropertyChanged("PropertyText");
					this.OnPropertyTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visibility", DbType="Int NOT NULL")]
		public int Visibility
		{
			get
			{
				return this._Visibility;
			}
			set
			{
				if ((this._Visibility != value))
				{
					this.OnVisibilityChanging(value);
					this.SendPropertyChanging();
					this._Visibility = value;
					this.SendPropertyChanged("Visibility");
					this.OnVisibilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtendedVisibility", DbType="VarChar(400)")]
		public string ExtendedVisibility
		{
			get
			{
				return this._ExtendedVisibility;
			}
			set
			{
				if ((this._ExtendedVisibility != value))
				{
					this.OnExtendedVisibilityChanging(value);
					this.SendPropertyChanging();
					this._ExtendedVisibility = value;
					this.SendPropertyChanged("ExtendedVisibility");
					this.OnExtendedVisibilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProfilePropertyDefinition_UserProfile", Storage="_ProfilePropertyDefinition", ThisKey="PropertyDefinitionID", OtherKey="PropertyDefinitionID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ProfilePropertyDefinition ProfilePropertyDefinition
		{
			get
			{
				return this._ProfilePropertyDefinition.Entity;
			}
			set
			{
				ProfilePropertyDefinition previousValue = this._ProfilePropertyDefinition.Entity;
				if (((previousValue != value) 
							|| (this._ProfilePropertyDefinition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProfilePropertyDefinition.Entity = null;
						previousValue.UserProfiles.Remove(this);
					}
					this._ProfilePropertyDefinition.Entity = value;
					if ((value != null))
					{
						value.UserProfiles.Add(this);
						this._PropertyDefinitionID = value.PropertyDefinitionID;
					}
					else
					{
						this._PropertyDefinitionID = default(int);
					}
					this.SendPropertyChanged("ProfilePropertyDefinition");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserProfile", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserProfiles.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserProfiles.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserRelationshipPreferences")]
	public partial class UserRelationshipPreference : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PreferenceID;
		
		private int _UserID;
		
		private int _RelationshipID;
		
		private int _DefaultResponse;
		
		private int _CreatedByUserID;
		
		private System.DateTime _CreatedOnDate;
		
		private int _LastModifiedByUserID;
		
		private System.DateTime _LastModifiedOnDate;
		
		private EntityRef<Relationship> _Relationship;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPreferenceIDChanging(int value);
    partial void OnPreferenceIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnRelationshipIDChanging(int value);
    partial void OnRelationshipIDChanged();
    partial void OnDefaultResponseChanging(int value);
    partial void OnDefaultResponseChanged();
    partial void OnCreatedByUserIDChanging(int value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.DateTime value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(int value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.DateTime value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public UserRelationshipPreference()
		{
			this._Relationship = default(EntityRef<Relationship>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreferenceID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PreferenceID
		{
			get
			{
				return this._PreferenceID;
			}
			set
			{
				if ((this._PreferenceID != value))
				{
					this.OnPreferenceIDChanging(value);
					this.SendPropertyChanging();
					this._PreferenceID = value;
					this.SendPropertyChanged("PreferenceID");
					this.OnPreferenceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelationshipID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RelationshipID
		{
			get
			{
				return this._RelationshipID;
			}
			set
			{
				if ((this._RelationshipID != value))
				{
					if (this._Relationship.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRelationshipIDChanging(value);
					this.SendPropertyChanging();
					this._RelationshipID = value;
					this.SendPropertyChanged("RelationshipID");
					this.OnRelationshipIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultResponse", DbType="Int NOT NULL")]
		public int DefaultResponse
		{
			get
			{
				return this._DefaultResponse;
			}
			set
			{
				if ((this._DefaultResponse != value))
				{
					this.OnDefaultResponseChanging(value);
					this.SendPropertyChanging();
					this._DefaultResponse = value;
					this.SendPropertyChanged("DefaultResponse");
					this.OnDefaultResponseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int NOT NULL")]
		public int CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int NOT NULL")]
		public int LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Relationship_UserRelationshipPreference", Storage="_Relationship", ThisKey="RelationshipID", OtherKey="RelationshipID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Relationship Relationship
		{
			get
			{
				return this._Relationship.Entity;
			}
			set
			{
				Relationship previousValue = this._Relationship.Entity;
				if (((previousValue != value) 
							|| (this._Relationship.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Relationship.Entity = null;
						previousValue.UserRelationshipPreferences.Remove(this);
					}
					this._Relationship.Entity = value;
					if ((value != null))
					{
						value.UserRelationshipPreferences.Add(this);
						this._RelationshipID = value.RelationshipID;
					}
					else
					{
						this._RelationshipID = default(int);
					}
					this.SendPropertyChanged("Relationship");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserRelationshipPreference", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserRelationshipPreferences.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserRelationshipPreferences.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserRelationships")]
	public partial class UserRelationship : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserRelationshipID;
		
		private int _UserID;
		
		private int _RelatedUserID;
		
		private int _RelationshipID;
		
		private int _Status;
		
		private int _CreatedByUserID;
		
		private System.DateTime _CreatedOnDate;
		
		private int _LastModifiedByUserID;
		
		private System.DateTime _LastModifiedOnDate;
		
		private EntityRef<Relationship> _Relationship;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserRelationshipIDChanging(int value);
    partial void OnUserRelationshipIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnRelatedUserIDChanging(int value);
    partial void OnRelatedUserIDChanged();
    partial void OnRelationshipIDChanging(int value);
    partial void OnRelationshipIDChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreatedByUserIDChanging(int value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.DateTime value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(int value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.DateTime value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public UserRelationship()
		{
			this._Relationship = default(EntityRef<Relationship>);
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserRelationshipID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserRelationshipID
		{
			get
			{
				return this._UserRelationshipID;
			}
			set
			{
				if ((this._UserRelationshipID != value))
				{
					this.OnUserRelationshipIDChanging(value);
					this.SendPropertyChanging();
					this._UserRelationshipID = value;
					this.SendPropertyChanged("UserRelationshipID");
					this.OnUserRelationshipIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelatedUserID", DbType="Int NOT NULL")]
		public int RelatedUserID
		{
			get
			{
				return this._RelatedUserID;
			}
			set
			{
				if ((this._RelatedUserID != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRelatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._RelatedUserID = value;
					this.SendPropertyChanged("RelatedUserID");
					this.OnRelatedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelationshipID", DbType="Int NOT NULL")]
		public int RelationshipID
		{
			get
			{
				return this._RelationshipID;
			}
			set
			{
				if ((this._RelationshipID != value))
				{
					if (this._Relationship.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRelationshipIDChanging(value);
					this.SendPropertyChanging();
					this._RelationshipID = value;
					this.SendPropertyChanged("RelationshipID");
					this.OnRelationshipIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int NOT NULL")]
		public int CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int NOT NULL")]
		public int LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Relationship_UserRelationship", Storage="_Relationship", ThisKey="RelationshipID", OtherKey="RelationshipID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Relationship Relationship
		{
			get
			{
				return this._Relationship.Entity;
			}
			set
			{
				Relationship previousValue = this._Relationship.Entity;
				if (((previousValue != value) 
							|| (this._Relationship.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Relationship.Entity = null;
						previousValue.UserRelationships.Remove(this);
					}
					this._Relationship.Entity = value;
					if ((value != null))
					{
						value.UserRelationships.Add(this);
						this._RelationshipID = value.RelationshipID;
					}
					else
					{
						this._RelationshipID = default(int);
					}
					this.SendPropertyChanged("Relationship");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserRelationship", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserRelationships.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserRelationships.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserRelationship1", Storage="_User1", ThisKey="RelatedUserID", OtherKey="UserID", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.UserRelationships1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.UserRelationships1.Add(this);
						this._RelatedUserID = value.UserID;
					}
					else
					{
						this._RelatedUserID = default(int);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserRoles")]
	public partial class UserRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserRoleID;
		
		private int _UserID;
		
		private int _RoleID;
		
		private System.Nullable<System.DateTime> _ExpiryDate;
		
		private System.Nullable<bool> _IsTrialUsed;
		
		private System.Nullable<System.DateTime> _EffectiveDate;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private int _Status;
		
		private bool _IsOwner;
		
		private EntityRef<Role> _Role;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserRoleIDChanging(int value);
    partial void OnUserRoleIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnExpiryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpiryDateChanged();
    partial void OnIsTrialUsedChanging(System.Nullable<bool> value);
    partial void OnIsTrialUsedChanged();
    partial void OnEffectiveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEffectiveDateChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnIsOwnerChanging(bool value);
    partial void OnIsOwnerChanged();
    #endregion
		
		public UserRole()
		{
			this._Role = default(EntityRef<Role>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserRoleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserRoleID
		{
			get
			{
				return this._UserRoleID;
			}
			set
			{
				if ((this._UserRoleID != value))
				{
					this.OnUserRoleIDChanging(value);
					this.SendPropertyChanging();
					this._UserRoleID = value;
					this.SendPropertyChanged("UserRoleID");
					this.OnUserRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL")]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpiryDate
		{
			get
			{
				return this._ExpiryDate;
			}
			set
			{
				if ((this._ExpiryDate != value))
				{
					this.OnExpiryDateChanging(value);
					this.SendPropertyChanging();
					this._ExpiryDate = value;
					this.SendPropertyChanged("ExpiryDate");
					this.OnExpiryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTrialUsed", DbType="Bit")]
		public System.Nullable<bool> IsTrialUsed
		{
			get
			{
				return this._IsTrialUsed;
			}
			set
			{
				if ((this._IsTrialUsed != value))
				{
					this.OnIsTrialUsedChanging(value);
					this.SendPropertyChanging();
					this._IsTrialUsed = value;
					this.SendPropertyChanged("IsTrialUsed");
					this.OnIsTrialUsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectiveDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EffectiveDate
		{
			get
			{
				return this._EffectiveDate;
			}
			set
			{
				if ((this._EffectiveDate != value))
				{
					this.OnEffectiveDateChanging(value);
					this.SendPropertyChanging();
					this._EffectiveDate = value;
					this.SendPropertyChanged("EffectiveDate");
					this.OnEffectiveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOwner", DbType="Bit NOT NULL")]
		public bool IsOwner
		{
			get
			{
				return this._IsOwner;
			}
			set
			{
				if ((this._IsOwner != value))
				{
					this.OnIsOwnerChanging(value);
					this.SendPropertyChanging();
					this._IsOwner = value;
					this.SendPropertyChanged("IsOwner");
					this.OnIsOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_UserRole", Storage="_Role", ThisKey="RoleID", OtherKey="RoleID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.UserRoles.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.UserRoles.Add(this);
						this._RoleID = value.RoleID;
					}
					else
					{
						this._RoleID = default(int);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserRole", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserRoles.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserRoles.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private string _Username;
		
		private string _FirstName;
		
		private string _LastName;
		
		private bool _IsSuperUser;
		
		private System.Nullable<int> _AffiliateId;
		
		private string _Email;
		
		private string _DisplayName;
		
		private bool _UpdatePassword;
		
		private string _LastIPAddress;
		
		private bool _IsDeleted;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntitySet<zWorkProcess> _zWorkProcesses;
		
		private EntitySet<DesktopModulePermission> _DesktopModulePermissions;
		
		private EntitySet<FolderPermission> _FolderPermissions;
		
		private EntitySet<ModulePermission> _ModulePermissions;
		
		private EntitySet<Profile> _Profiles;
		
		private EntitySet<Relationship> _Relationships;
		
		private EntitySet<TabPermission> _TabPermissions;
		
		private EntitySet<UserAuthentication> _UserAuthentications;
		
		private EntitySet<UserPortal> _UserPortals;
		
		private EntitySet<UserProfile> _UserProfiles;
		
		private EntitySet<UserRelationshipPreference> _UserRelationshipPreferences;
		
		private EntitySet<UserRelationship> _UserRelationships;
		
		private EntitySet<UserRelationship> _UserRelationships1;
		
		private EntitySet<UserRole> _UserRoles;
		
		private EntitySet<UsersOnline> _UsersOnlines;
		
		private EntitySet<zFamily> _zFamilies;
		
		private EntitySet<zInOutBonus> _zInOutBonus;
		
		private EntitySet<zNew> _zNews;
		
		private EntitySet<zResearch> _zResearches;
		
		private EntitySet<zSalaryLog> _zSalaryLogs;
		
		private EntitySet<zStudyProcess> _zStudyProcesses;
		
		private EntitySet<zWorkLog> _zWorkLogs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnIsSuperUserChanging(bool value);
    partial void OnIsSuperUserChanged();
    partial void OnAffiliateIdChanging(System.Nullable<int> value);
    partial void OnAffiliateIdChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnUpdatePasswordChanging(bool value);
    partial void OnUpdatePasswordChanged();
    partial void OnLastIPAddressChanging(string value);
    partial void OnLastIPAddressChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public User()
		{
			this._zWorkProcesses = new EntitySet<zWorkProcess>(new Action<zWorkProcess>(this.attach_zWorkProcesses), new Action<zWorkProcess>(this.detach_zWorkProcesses));
			this._DesktopModulePermissions = new EntitySet<DesktopModulePermission>(new Action<DesktopModulePermission>(this.attach_DesktopModulePermissions), new Action<DesktopModulePermission>(this.detach_DesktopModulePermissions));
			this._FolderPermissions = new EntitySet<FolderPermission>(new Action<FolderPermission>(this.attach_FolderPermissions), new Action<FolderPermission>(this.detach_FolderPermissions));
			this._ModulePermissions = new EntitySet<ModulePermission>(new Action<ModulePermission>(this.attach_ModulePermissions), new Action<ModulePermission>(this.detach_ModulePermissions));
			this._Profiles = new EntitySet<Profile>(new Action<Profile>(this.attach_Profiles), new Action<Profile>(this.detach_Profiles));
			this._Relationships = new EntitySet<Relationship>(new Action<Relationship>(this.attach_Relationships), new Action<Relationship>(this.detach_Relationships));
			this._TabPermissions = new EntitySet<TabPermission>(new Action<TabPermission>(this.attach_TabPermissions), new Action<TabPermission>(this.detach_TabPermissions));
			this._UserAuthentications = new EntitySet<UserAuthentication>(new Action<UserAuthentication>(this.attach_UserAuthentications), new Action<UserAuthentication>(this.detach_UserAuthentications));
			this._UserPortals = new EntitySet<UserPortal>(new Action<UserPortal>(this.attach_UserPortals), new Action<UserPortal>(this.detach_UserPortals));
			this._UserProfiles = new EntitySet<UserProfile>(new Action<UserProfile>(this.attach_UserProfiles), new Action<UserProfile>(this.detach_UserProfiles));
			this._UserRelationshipPreferences = new EntitySet<UserRelationshipPreference>(new Action<UserRelationshipPreference>(this.attach_UserRelationshipPreferences), new Action<UserRelationshipPreference>(this.detach_UserRelationshipPreferences));
			this._UserRelationships = new EntitySet<UserRelationship>(new Action<UserRelationship>(this.attach_UserRelationships), new Action<UserRelationship>(this.detach_UserRelationships));
			this._UserRelationships1 = new EntitySet<UserRelationship>(new Action<UserRelationship>(this.attach_UserRelationships1), new Action<UserRelationship>(this.detach_UserRelationships1));
			this._UserRoles = new EntitySet<UserRole>(new Action<UserRole>(this.attach_UserRoles), new Action<UserRole>(this.detach_UserRoles));
			this._UsersOnlines = new EntitySet<UsersOnline>(new Action<UsersOnline>(this.attach_UsersOnlines), new Action<UsersOnline>(this.detach_UsersOnlines));
			this._zFamilies = new EntitySet<zFamily>(new Action<zFamily>(this.attach_zFamilies), new Action<zFamily>(this.detach_zFamilies));
			this._zInOutBonus = new EntitySet<zInOutBonus>(new Action<zInOutBonus>(this.attach_zInOutBonus), new Action<zInOutBonus>(this.detach_zInOutBonus));
			this._zNews = new EntitySet<zNew>(new Action<zNew>(this.attach_zNews), new Action<zNew>(this.detach_zNews));
			this._zResearches = new EntitySet<zResearch>(new Action<zResearch>(this.attach_zResearches), new Action<zResearch>(this.detach_zResearches));
			this._zSalaryLogs = new EntitySet<zSalaryLog>(new Action<zSalaryLog>(this.attach_zSalaryLogs), new Action<zSalaryLog>(this.detach_zSalaryLogs));
			this._zStudyProcesses = new EntitySet<zStudyProcess>(new Action<zStudyProcess>(this.attach_zStudyProcesses), new Action<zStudyProcess>(this.detach_zStudyProcesses));
			this._zWorkLogs = new EntitySet<zWorkLog>(new Action<zWorkLog>(this.attach_zWorkLogs), new Action<zWorkLog>(this.detach_zWorkLogs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSuperUser", DbType="Bit NOT NULL")]
		public bool IsSuperUser
		{
			get
			{
				return this._IsSuperUser;
			}
			set
			{
				if ((this._IsSuperUser != value))
				{
					this.OnIsSuperUserChanging(value);
					this.SendPropertyChanging();
					this._IsSuperUser = value;
					this.SendPropertyChanged("IsSuperUser");
					this.OnIsSuperUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AffiliateId", DbType="Int")]
		public System.Nullable<int> AffiliateId
		{
			get
			{
				return this._AffiliateId;
			}
			set
			{
				if ((this._AffiliateId != value))
				{
					this.OnAffiliateIdChanging(value);
					this.SendPropertyChanging();
					this._AffiliateId = value;
					this.SendPropertyChanged("AffiliateId");
					this.OnAffiliateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatePassword", DbType="Bit NOT NULL")]
		public bool UpdatePassword
		{
			get
			{
				return this._UpdatePassword;
			}
			set
			{
				if ((this._UpdatePassword != value))
				{
					this.OnUpdatePasswordChanging(value);
					this.SendPropertyChanging();
					this._UpdatePassword = value;
					this.SendPropertyChanged("UpdatePassword");
					this.OnUpdatePasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastIPAddress", DbType="NVarChar(50)")]
		public string LastIPAddress
		{
			get
			{
				return this._LastIPAddress;
			}
			set
			{
				if ((this._LastIPAddress != value))
				{
					this.OnLastIPAddressChanging(value);
					this.SendPropertyChanging();
					this._LastIPAddress = value;
					this.SendPropertyChanged("LastIPAddress");
					this.OnLastIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_zWorkProcess", Storage="_zWorkProcesses", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<zWorkProcess> zWorkProcesses
		{
			get
			{
				return this._zWorkProcesses;
			}
			set
			{
				this._zWorkProcesses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_DesktopModulePermission", Storage="_DesktopModulePermissions", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<DesktopModulePermission> DesktopModulePermissions
		{
			get
			{
				return this._DesktopModulePermissions;
			}
			set
			{
				this._DesktopModulePermissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_FolderPermission", Storage="_FolderPermissions", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<FolderPermission> FolderPermissions
		{
			get
			{
				return this._FolderPermissions;
			}
			set
			{
				this._FolderPermissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ModulePermission", Storage="_ModulePermissions", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<ModulePermission> ModulePermissions
		{
			get
			{
				return this._ModulePermissions;
			}
			set
			{
				this._ModulePermissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Profile", Storage="_Profiles", ThisKey="UserID", OtherKey="UserId")]
		public EntitySet<Profile> Profiles
		{
			get
			{
				return this._Profiles;
			}
			set
			{
				this._Profiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Relationship", Storage="_Relationships", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<Relationship> Relationships
		{
			get
			{
				return this._Relationships;
			}
			set
			{
				this._Relationships.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_TabPermission", Storage="_TabPermissions", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<TabPermission> TabPermissions
		{
			get
			{
				return this._TabPermissions;
			}
			set
			{
				this._TabPermissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserAuthentication", Storage="_UserAuthentications", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<UserAuthentication> UserAuthentications
		{
			get
			{
				return this._UserAuthentications;
			}
			set
			{
				this._UserAuthentications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserPortal", Storage="_UserPortals", ThisKey="UserID", OtherKey="UserId")]
		public EntitySet<UserPortal> UserPortals
		{
			get
			{
				return this._UserPortals;
			}
			set
			{
				this._UserPortals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserProfile", Storage="_UserProfiles", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<UserProfile> UserProfiles
		{
			get
			{
				return this._UserProfiles;
			}
			set
			{
				this._UserProfiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserRelationshipPreference", Storage="_UserRelationshipPreferences", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<UserRelationshipPreference> UserRelationshipPreferences
		{
			get
			{
				return this._UserRelationshipPreferences;
			}
			set
			{
				this._UserRelationshipPreferences.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserRelationship", Storage="_UserRelationships", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<UserRelationship> UserRelationships
		{
			get
			{
				return this._UserRelationships;
			}
			set
			{
				this._UserRelationships.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserRelationship1", Storage="_UserRelationships1", ThisKey="UserID", OtherKey="RelatedUserID")]
		public EntitySet<UserRelationship> UserRelationships1
		{
			get
			{
				return this._UserRelationships1;
			}
			set
			{
				this._UserRelationships1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserRole", Storage="_UserRoles", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<UserRole> UserRoles
		{
			get
			{
				return this._UserRoles;
			}
			set
			{
				this._UserRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UsersOnline", Storage="_UsersOnlines", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<UsersOnline> UsersOnlines
		{
			get
			{
				return this._UsersOnlines;
			}
			set
			{
				this._UsersOnlines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_zFamily", Storage="_zFamilies", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<zFamily> zFamilies
		{
			get
			{
				return this._zFamilies;
			}
			set
			{
				this._zFamilies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_zInOutBonus", Storage="_zInOutBonus", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<zInOutBonus> zInOutBonus
		{
			get
			{
				return this._zInOutBonus;
			}
			set
			{
				this._zInOutBonus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_zNew", Storage="_zNews", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<zNew> zNews
		{
			get
			{
				return this._zNews;
			}
			set
			{
				this._zNews.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_zResearch", Storage="_zResearches", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<zResearch> zResearches
		{
			get
			{
				return this._zResearches;
			}
			set
			{
				this._zResearches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_zSalaryLog", Storage="_zSalaryLogs", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<zSalaryLog> zSalaryLogs
		{
			get
			{
				return this._zSalaryLogs;
			}
			set
			{
				this._zSalaryLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_zStudyProcess", Storage="_zStudyProcesses", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<zStudyProcess> zStudyProcesses
		{
			get
			{
				return this._zStudyProcesses;
			}
			set
			{
				this._zStudyProcesses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_zWorkLog", Storage="_zWorkLogs", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<zWorkLog> zWorkLogs
		{
			get
			{
				return this._zWorkLogs;
			}
			set
			{
				this._zWorkLogs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_zWorkProcesses(zWorkProcess entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_zWorkProcesses(zWorkProcess entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_DesktopModulePermissions(DesktopModulePermission entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_DesktopModulePermissions(DesktopModulePermission entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_FolderPermissions(FolderPermission entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_FolderPermissions(FolderPermission entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_ModulePermissions(ModulePermission entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ModulePermissions(ModulePermission entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Profiles(Profile entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Profiles(Profile entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Relationships(Relationship entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Relationships(Relationship entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_TabPermissions(TabPermission entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_TabPermissions(TabPermission entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserAuthentications(UserAuthentication entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserAuthentications(UserAuthentication entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserPortals(UserPortal entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserPortals(UserPortal entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserProfiles(UserProfile entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserProfiles(UserProfile entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserRelationshipPreferences(UserRelationshipPreference entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserRelationshipPreferences(UserRelationshipPreference entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserRelationships(UserRelationship entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserRelationships(UserRelationship entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserRelationships1(UserRelationship entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_UserRelationships1(UserRelationship entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_UserRoles(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserRoles(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UsersOnlines(UsersOnline entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UsersOnlines(UsersOnline entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_zFamilies(zFamily entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_zFamilies(zFamily entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_zInOutBonus(zInOutBonus entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_zInOutBonus(zInOutBonus entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_zNews(zNew entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_zNews(zNew entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_zResearches(zResearch entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_zResearches(zResearch entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_zSalaryLogs(zSalaryLog entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_zSalaryLogs(zSalaryLog entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_zStudyProcesses(zStudyProcess entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_zStudyProcesses(zStudyProcess entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_zWorkLogs(zWorkLog entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_zWorkLogs(zWorkLog entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UsersOnline")]
	public partial class UsersOnline : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private int _PortalID;
		
		private int _TabID;
		
		private System.DateTime _CreationDate;
		
		private System.DateTime _LastActiveDate;
		
		private EntityRef<Portal> _Portal;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnPortalIDChanging(int value);
    partial void OnPortalIDChanged();
    partial void OnTabIDChanging(int value);
    partial void OnTabIDChanged();
    partial void OnCreationDateChanging(System.DateTime value);
    partial void OnCreationDateChanged();
    partial void OnLastActiveDateChanging(System.DateTime value);
    partial void OnLastActiveDateChanged();
    #endregion
		
		public UsersOnline()
		{
			this._Portal = default(EntityRef<Portal>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					if (this._Portal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TabID", DbType="Int NOT NULL")]
		public int TabID
		{
			get
			{
				return this._TabID;
			}
			set
			{
				if ((this._TabID != value))
				{
					this.OnTabIDChanging(value);
					this.SendPropertyChanging();
					this._TabID = value;
					this.SendPropertyChanged("TabID");
					this.OnTabIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActiveDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastActiveDate
		{
			get
			{
				return this._LastActiveDate;
			}
			set
			{
				if ((this._LastActiveDate != value))
				{
					this.OnLastActiveDateChanging(value);
					this.SendPropertyChanging();
					this._LastActiveDate = value;
					this.SendPropertyChanged("LastActiveDate");
					this.OnLastActiveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Portal_UsersOnline", Storage="_Portal", ThisKey="PortalID", OtherKey="PortalID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Portal Portal
		{
			get
			{
				return this._Portal.Entity;
			}
			set
			{
				Portal previousValue = this._Portal.Entity;
				if (((previousValue != value) 
							|| (this._Portal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Portal.Entity = null;
						previousValue.UsersOnlines.Remove(this);
					}
					this._Portal.Entity = value;
					if ((value != null))
					{
						value.UsersOnlines.Add(this);
						this._PortalID = value.PortalID;
					}
					else
					{
						this._PortalID = default(int);
					}
					this.SendPropertyChanged("Portal");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UsersOnline", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UsersOnlines.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UsersOnlines.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VendorClassification")]
	public partial class VendorClassification : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VendorClassificationId;
		
		private int _VendorId;
		
		private int _ClassificationId;
		
		private EntityRef<Classification> _Classification;
		
		private EntityRef<Vendor> _Vendor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVendorClassificationIdChanging(int value);
    partial void OnVendorClassificationIdChanged();
    partial void OnVendorIdChanging(int value);
    partial void OnVendorIdChanged();
    partial void OnClassificationIdChanging(int value);
    partial void OnClassificationIdChanged();
    #endregion
		
		public VendorClassification()
		{
			this._Classification = default(EntityRef<Classification>);
			this._Vendor = default(EntityRef<Vendor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorClassificationId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VendorClassificationId
		{
			get
			{
				return this._VendorClassificationId;
			}
			set
			{
				if ((this._VendorClassificationId != value))
				{
					this.OnVendorClassificationIdChanging(value);
					this.SendPropertyChanging();
					this._VendorClassificationId = value;
					this.SendPropertyChanged("VendorClassificationId");
					this.OnVendorClassificationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorId", DbType="Int NOT NULL")]
		public int VendorId
		{
			get
			{
				return this._VendorId;
			}
			set
			{
				if ((this._VendorId != value))
				{
					if (this._Vendor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVendorIdChanging(value);
					this.SendPropertyChanging();
					this._VendorId = value;
					this.SendPropertyChanged("VendorId");
					this.OnVendorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassificationId", DbType="Int NOT NULL")]
		public int ClassificationId
		{
			get
			{
				return this._ClassificationId;
			}
			set
			{
				if ((this._ClassificationId != value))
				{
					if (this._Classification.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassificationIdChanging(value);
					this.SendPropertyChanging();
					this._ClassificationId = value;
					this.SendPropertyChanged("ClassificationId");
					this.OnClassificationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Classification_VendorClassification", Storage="_Classification", ThisKey="ClassificationId", OtherKey="ClassificationId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Classification Classification
		{
			get
			{
				return this._Classification.Entity;
			}
			set
			{
				Classification previousValue = this._Classification.Entity;
				if (((previousValue != value) 
							|| (this._Classification.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Classification.Entity = null;
						previousValue.VendorClassifications.Remove(this);
					}
					this._Classification.Entity = value;
					if ((value != null))
					{
						value.VendorClassifications.Add(this);
						this._ClassificationId = value.ClassificationId;
					}
					else
					{
						this._ClassificationId = default(int);
					}
					this.SendPropertyChanged("Classification");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendor_VendorClassification", Storage="_Vendor", ThisKey="VendorId", OtherKey="VendorId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Vendor Vendor
		{
			get
			{
				return this._Vendor.Entity;
			}
			set
			{
				Vendor previousValue = this._Vendor.Entity;
				if (((previousValue != value) 
							|| (this._Vendor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vendor.Entity = null;
						previousValue.VendorClassifications.Remove(this);
					}
					this._Vendor.Entity = value;
					if ((value != null))
					{
						value.VendorClassifications.Add(this);
						this._VendorId = value.VendorId;
					}
					else
					{
						this._VendorId = default(int);
					}
					this.SendPropertyChanged("Vendor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vendors")]
	public partial class Vendor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VendorId;
		
		private string _VendorName;
		
		private string _Street;
		
		private string _City;
		
		private string _Region;
		
		private string _Country;
		
		private string _PostalCode;
		
		private string _Telephone;
		
		private System.Nullable<int> _PortalId;
		
		private string _Fax;
		
		private string _Email;
		
		private string _Website;
		
		private int _ClickThroughs;
		
		private int _Views;
		
		private string _CreatedByUser;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _LogoFile;
		
		private string _KeyWords;
		
		private string _Unit;
		
		private bool _Authorized;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Cell;
		
		private EntitySet<Affiliate> _Affiliates;
		
		private EntitySet<Banner> _Banners;
		
		private EntitySet<VendorClassification> _VendorClassifications;
		
		private EntityRef<Portal> _Portal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVendorIdChanging(int value);
    partial void OnVendorIdChanged();
    partial void OnVendorNameChanging(string value);
    partial void OnVendorNameChanged();
    partial void OnStreetChanging(string value);
    partial void OnStreetChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnRegionChanging(string value);
    partial void OnRegionChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnPostalCodeChanging(string value);
    partial void OnPostalCodeChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnPortalIdChanging(System.Nullable<int> value);
    partial void OnPortalIdChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnWebsiteChanging(string value);
    partial void OnWebsiteChanged();
    partial void OnClickThroughsChanging(int value);
    partial void OnClickThroughsChanged();
    partial void OnViewsChanging(int value);
    partial void OnViewsChanged();
    partial void OnCreatedByUserChanging(string value);
    partial void OnCreatedByUserChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnLogoFileChanging(string value);
    partial void OnLogoFileChanged();
    partial void OnKeyWordsChanging(string value);
    partial void OnKeyWordsChanged();
    partial void OnUnitChanging(string value);
    partial void OnUnitChanged();
    partial void OnAuthorizedChanging(bool value);
    partial void OnAuthorizedChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnCellChanging(string value);
    partial void OnCellChanged();
    #endregion
		
		public Vendor()
		{
			this._Affiliates = new EntitySet<Affiliate>(new Action<Affiliate>(this.attach_Affiliates), new Action<Affiliate>(this.detach_Affiliates));
			this._Banners = new EntitySet<Banner>(new Action<Banner>(this.attach_Banners), new Action<Banner>(this.detach_Banners));
			this._VendorClassifications = new EntitySet<VendorClassification>(new Action<VendorClassification>(this.attach_VendorClassifications), new Action<VendorClassification>(this.detach_VendorClassifications));
			this._Portal = default(EntityRef<Portal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VendorId
		{
			get
			{
				return this._VendorId;
			}
			set
			{
				if ((this._VendorId != value))
				{
					this.OnVendorIdChanging(value);
					this.SendPropertyChanging();
					this._VendorId = value;
					this.SendPropertyChanged("VendorId");
					this.OnVendorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string VendorName
		{
			get
			{
				return this._VendorName;
			}
			set
			{
				if ((this._VendorName != value))
				{
					this.OnVendorNameChanging(value);
					this.SendPropertyChanging();
					this._VendorName = value;
					this.SendPropertyChanged("VendorName");
					this.OnVendorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Street", DbType="NVarChar(50)")]
		public string Street
		{
			get
			{
				return this._Street;
			}
			set
			{
				if ((this._Street != value))
				{
					this.OnStreetChanging(value);
					this.SendPropertyChanging();
					this._Street = value;
					this.SendPropertyChanged("Street");
					this.OnStreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(50)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="NVarChar(50)")]
		public string Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this.OnRegionChanging(value);
					this.SendPropertyChanging();
					this._Region = value;
					this.SendPropertyChanged("Region");
					this.OnRegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(50)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(50)")]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this.OnPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._PostalCode = value;
					this.SendPropertyChanged("PostalCode");
					this.OnPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="NVarChar(50)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalId", DbType="Int")]
		public System.Nullable<int> PortalId
		{
			get
			{
				return this._PortalId;
			}
			set
			{
				if ((this._PortalId != value))
				{
					if (this._Portal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalIdChanging(value);
					this.SendPropertyChanging();
					this._PortalId = value;
					this.SendPropertyChanged("PortalId");
					this.OnPortalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(50)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Website", DbType="NVarChar(100)")]
		public string Website
		{
			get
			{
				return this._Website;
			}
			set
			{
				if ((this._Website != value))
				{
					this.OnWebsiteChanging(value);
					this.SendPropertyChanging();
					this._Website = value;
					this.SendPropertyChanged("Website");
					this.OnWebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClickThroughs", DbType="Int NOT NULL")]
		public int ClickThroughs
		{
			get
			{
				return this._ClickThroughs;
			}
			set
			{
				if ((this._ClickThroughs != value))
				{
					this.OnClickThroughsChanging(value);
					this.SendPropertyChanging();
					this._ClickThroughs = value;
					this.SendPropertyChanged("ClickThroughs");
					this.OnClickThroughsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Views", DbType="Int NOT NULL")]
		public int Views
		{
			get
			{
				return this._Views;
			}
			set
			{
				if ((this._Views != value))
				{
					this.OnViewsChanging(value);
					this.SendPropertyChanging();
					this._Views = value;
					this.SendPropertyChanged("Views");
					this.OnViewsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		public string CreatedByUser
		{
			get
			{
				return this._CreatedByUser;
			}
			set
			{
				if ((this._CreatedByUser != value))
				{
					this.OnCreatedByUserChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUser = value;
					this.SendPropertyChanged("CreatedByUser");
					this.OnCreatedByUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogoFile", DbType="NVarChar(100)")]
		public string LogoFile
		{
			get
			{
				return this._LogoFile;
			}
			set
			{
				if ((this._LogoFile != value))
				{
					this.OnLogoFileChanging(value);
					this.SendPropertyChanging();
					this._LogoFile = value;
					this.SendPropertyChanged("LogoFile");
					this.OnLogoFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyWords", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string KeyWords
		{
			get
			{
				return this._KeyWords;
			}
			set
			{
				if ((this._KeyWords != value))
				{
					this.OnKeyWordsChanging(value);
					this.SendPropertyChanging();
					this._KeyWords = value;
					this.SendPropertyChanged("KeyWords");
					this.OnKeyWordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="NVarChar(50)")]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Authorized", DbType="Bit NOT NULL")]
		public bool Authorized
		{
			get
			{
				return this._Authorized;
			}
			set
			{
				if ((this._Authorized != value))
				{
					this.OnAuthorizedChanging(value);
					this.SendPropertyChanging();
					this._Authorized = value;
					this.SendPropertyChanged("Authorized");
					this.OnAuthorizedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cell", DbType="VarChar(50)")]
		public string Cell
		{
			get
			{
				return this._Cell;
			}
			set
			{
				if ((this._Cell != value))
				{
					this.OnCellChanging(value);
					this.SendPropertyChanging();
					this._Cell = value;
					this.SendPropertyChanged("Cell");
					this.OnCellChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendor_Affiliate", Storage="_Affiliates", ThisKey="VendorId", OtherKey="VendorId")]
		public EntitySet<Affiliate> Affiliates
		{
			get
			{
				return this._Affiliates;
			}
			set
			{
				this._Affiliates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendor_Banner", Storage="_Banners", ThisKey="VendorId", OtherKey="VendorId")]
		public EntitySet<Banner> Banners
		{
			get
			{
				return this._Banners;
			}
			set
			{
				this._Banners.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendor_VendorClassification", Storage="_VendorClassifications", ThisKey="VendorId", OtherKey="VendorId")]
		public EntitySet<VendorClassification> VendorClassifications
		{
			get
			{
				return this._VendorClassifications;
			}
			set
			{
				this._VendorClassifications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Portal_Vendor", Storage="_Portal", ThisKey="PortalId", OtherKey="PortalID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Portal Portal
		{
			get
			{
				return this._Portal.Entity;
			}
			set
			{
				Portal previousValue = this._Portal.Entity;
				if (((previousValue != value) 
							|| (this._Portal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Portal.Entity = null;
						previousValue.Vendors.Remove(this);
					}
					this._Portal.Entity = value;
					if ((value != null))
					{
						value.Vendors.Add(this);
						this._PortalId = value.PortalID;
					}
					else
					{
						this._PortalId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Portal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Affiliates(Affiliate entity)
		{
			this.SendPropertyChanging();
			entity.Vendor = this;
		}
		
		private void detach_Affiliates(Affiliate entity)
		{
			this.SendPropertyChanging();
			entity.Vendor = null;
		}
		
		private void attach_Banners(Banner entity)
		{
			this.SendPropertyChanging();
			entity.Vendor = this;
		}
		
		private void detach_Banners(Banner entity)
		{
			this.SendPropertyChanging();
			entity.Vendor = null;
		}
		
		private void attach_VendorClassifications(VendorClassification entity)
		{
			this.SendPropertyChanging();
			entity.Vendor = this;
		}
		
		private void detach_VendorClassifications(VendorClassification entity)
		{
			this.SendPropertyChanging();
			entity.Vendor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Version")]
	public partial class Version : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VersionId;
		
		private int _Major;
		
		private int _Minor;
		
		private int _Build;
		
		private string _Name;
		
		private System.DateTime _CreatedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVersionIdChanging(int value);
    partial void OnVersionIdChanged();
    partial void OnMajorChanging(int value);
    partial void OnMajorChanged();
    partial void OnMinorChanging(int value);
    partial void OnMinorChanged();
    partial void OnBuildChanging(int value);
    partial void OnBuildChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    #endregion
		
		public Version()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VersionId
		{
			get
			{
				return this._VersionId;
			}
			set
			{
				if ((this._VersionId != value))
				{
					this.OnVersionIdChanging(value);
					this.SendPropertyChanging();
					this._VersionId = value;
					this.SendPropertyChanged("VersionId");
					this.OnVersionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Major", DbType="Int NOT NULL")]
		public int Major
		{
			get
			{
				return this._Major;
			}
			set
			{
				if ((this._Major != value))
				{
					this.OnMajorChanging(value);
					this.SendPropertyChanging();
					this._Major = value;
					this.SendPropertyChanged("Major");
					this.OnMajorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Minor", DbType="Int NOT NULL")]
		public int Minor
		{
			get
			{
				return this._Minor;
			}
			set
			{
				if ((this._Minor != value))
				{
					this.OnMinorChanging(value);
					this.SendPropertyChanging();
					this._Minor = value;
					this.SendPropertyChanged("Minor");
					this.OnMinorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Build", DbType="Int NOT NULL")]
		public int Build
		{
			get
			{
				return this._Build;
			}
			set
			{
				if ((this._Build != value))
				{
					this.OnBuildChanging(value);
					this.SendPropertyChanging();
					this._Build = value;
					this.SendPropertyChanged("Build");
					this.OnBuildChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WebServers")]
	public partial class WebServer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ServerID;
		
		private string _ServerName;
		
		private System.DateTime _CreatedDate;
		
		private System.DateTime _LastActivityDate;
		
		private string _URL;
		
		private string _IISAppName;
		
		private bool _Enabled;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnServerIDChanging(int value);
    partial void OnServerIDChanged();
    partial void OnServerNameChanging(string value);
    partial void OnServerNameChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnLastActivityDateChanging(System.DateTime value);
    partial void OnLastActivityDateChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnIISAppNameChanging(string value);
    partial void OnIISAppNameChanged();
    partial void OnEnabledChanging(bool value);
    partial void OnEnabledChanged();
    #endregion
		
		public WebServer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ServerID
		{
			get
			{
				return this._ServerID;
			}
			set
			{
				if ((this._ServerID != value))
				{
					this.OnServerIDChanging(value);
					this.SendPropertyChanging();
					this._ServerID = value;
					this.SendPropertyChanged("ServerID");
					this.OnServerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServerName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ServerName
		{
			get
			{
				return this._ServerName;
			}
			set
			{
				if ((this._ServerName != value))
				{
					this.OnServerNameChanging(value);
					this.SendPropertyChanging();
					this._ServerName = value;
					this.SendPropertyChanged("ServerName");
					this.OnServerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastActivityDate
		{
			get
			{
				return this._LastActivityDate;
			}
			set
			{
				if ((this._LastActivityDate != value))
				{
					this.OnLastActivityDateChanging(value);
					this.SendPropertyChanging();
					this._LastActivityDate = value;
					this.SendPropertyChanged("LastActivityDate");
					this.OnLastActivityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="NVarChar(255)")]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IISAppName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string IISAppName
		{
			get
			{
				return this._IISAppName;
			}
			set
			{
				if ((this._IISAppName != value))
				{
					this.OnIISAppNameChanging(value);
					this.SendPropertyChanging();
					this._IISAppName = value;
					this.SendPropertyChanged("IISAppName");
					this.OnIISAppNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", DbType="Bit NOT NULL")]
		public bool Enabled
		{
			get
			{
				return this._Enabled;
			}
			set
			{
				if ((this._Enabled != value))
				{
					this.OnEnabledChanging(value);
					this.SendPropertyChanging();
					this._Enabled = value;
					this.SendPropertyChanged("Enabled");
					this.OnEnabledChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Workflow")]
	public partial class Workflow : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _WorkflowID;
		
		private System.Nullable<int> _PortalID;
		
		private string _WorkflowName;
		
		private string _Description;
		
		private bool _IsDeleted;
		
		private EntitySet<WorkflowState> _WorkflowStates;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWorkflowIDChanging(int value);
    partial void OnWorkflowIDChanged();
    partial void OnPortalIDChanging(System.Nullable<int> value);
    partial void OnPortalIDChanged();
    partial void OnWorkflowNameChanging(string value);
    partial void OnWorkflowNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    #endregion
		
		public Workflow()
		{
			this._WorkflowStates = new EntitySet<WorkflowState>(new Action<WorkflowState>(this.attach_WorkflowStates), new Action<WorkflowState>(this.detach_WorkflowStates));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkflowID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int WorkflowID
		{
			get
			{
				return this._WorkflowID;
			}
			set
			{
				if ((this._WorkflowID != value))
				{
					this.OnWorkflowIDChanging(value);
					this.SendPropertyChanging();
					this._WorkflowID = value;
					this.SendPropertyChanged("WorkflowID");
					this.OnWorkflowIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int")]
		public System.Nullable<int> PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkflowName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string WorkflowName
		{
			get
			{
				return this._WorkflowName;
			}
			set
			{
				if ((this._WorkflowName != value))
				{
					this.OnWorkflowNameChanging(value);
					this.SendPropertyChanging();
					this._WorkflowName = value;
					this.SendPropertyChanged("WorkflowName");
					this.OnWorkflowNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(2000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Workflow_WorkflowState", Storage="_WorkflowStates", ThisKey="WorkflowID", OtherKey="WorkflowID")]
		public EntitySet<WorkflowState> WorkflowStates
		{
			get
			{
				return this._WorkflowStates;
			}
			set
			{
				this._WorkflowStates.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkflowStates(WorkflowState entity)
		{
			this.SendPropertyChanging();
			entity.Workflow = this;
		}
		
		private void detach_WorkflowStates(WorkflowState entity)
		{
			this.SendPropertyChanging();
			entity.Workflow = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkflowStates")]
	public partial class WorkflowState : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StateID;
		
		private int _WorkflowID;
		
		private string _StateName;
		
		private int _Order;
		
		private bool _IsActive;
		
		private bool _Notify;
		
		private EntitySet<HtmlText> _HtmlTexts;
		
		private EntitySet<HtmlTextLog> _HtmlTextLogs;
		
		private EntityRef<Workflow> _Workflow;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStateIDChanging(int value);
    partial void OnStateIDChanged();
    partial void OnWorkflowIDChanging(int value);
    partial void OnWorkflowIDChanged();
    partial void OnStateNameChanging(string value);
    partial void OnStateNameChanged();
    partial void OnOrderChanging(int value);
    partial void OnOrderChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnNotifyChanging(bool value);
    partial void OnNotifyChanged();
    #endregion
		
		public WorkflowState()
		{
			this._HtmlTexts = new EntitySet<HtmlText>(new Action<HtmlText>(this.attach_HtmlTexts), new Action<HtmlText>(this.detach_HtmlTexts));
			this._HtmlTextLogs = new EntitySet<HtmlTextLog>(new Action<HtmlTextLog>(this.attach_HtmlTextLogs), new Action<HtmlTextLog>(this.detach_HtmlTextLogs));
			this._Workflow = default(EntityRef<Workflow>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					this.OnStateIDChanging(value);
					this.SendPropertyChanging();
					this._StateID = value;
					this.SendPropertyChanged("StateID");
					this.OnStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkflowID", DbType="Int NOT NULL")]
		public int WorkflowID
		{
			get
			{
				return this._WorkflowID;
			}
			set
			{
				if ((this._WorkflowID != value))
				{
					if (this._Workflow.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkflowIDChanging(value);
					this.SendPropertyChanging();
					this._WorkflowID = value;
					this.SendPropertyChanged("WorkflowID");
					this.OnWorkflowIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string StateName
		{
			get
			{
				return this._StateName;
			}
			set
			{
				if ((this._StateName != value))
				{
					this.OnStateNameChanging(value);
					this.SendPropertyChanging();
					this._StateName = value;
					this.SendPropertyChanged("StateName");
					this.OnStateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int NOT NULL")]
		public int Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this.OnOrderChanging(value);
					this.SendPropertyChanging();
					this._Order = value;
					this.SendPropertyChanged("Order");
					this.OnOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notify", DbType="Bit NOT NULL")]
		public bool Notify
		{
			get
			{
				return this._Notify;
			}
			set
			{
				if ((this._Notify != value))
				{
					this.OnNotifyChanging(value);
					this.SendPropertyChanging();
					this._Notify = value;
					this.SendPropertyChanged("Notify");
					this.OnNotifyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkflowState_HtmlText", Storage="_HtmlTexts", ThisKey="StateID", OtherKey="StateID")]
		public EntitySet<HtmlText> HtmlTexts
		{
			get
			{
				return this._HtmlTexts;
			}
			set
			{
				this._HtmlTexts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkflowState_HtmlTextLog", Storage="_HtmlTextLogs", ThisKey="StateID", OtherKey="StateID")]
		public EntitySet<HtmlTextLog> HtmlTextLogs
		{
			get
			{
				return this._HtmlTextLogs;
			}
			set
			{
				this._HtmlTextLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Workflow_WorkflowState", Storage="_Workflow", ThisKey="WorkflowID", OtherKey="WorkflowID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Workflow Workflow
		{
			get
			{
				return this._Workflow.Entity;
			}
			set
			{
				Workflow previousValue = this._Workflow.Entity;
				if (((previousValue != value) 
							|| (this._Workflow.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Workflow.Entity = null;
						previousValue.WorkflowStates.Remove(this);
					}
					this._Workflow.Entity = value;
					if ((value != null))
					{
						value.WorkflowStates.Add(this);
						this._WorkflowID = value.WorkflowID;
					}
					else
					{
						this._WorkflowID = default(int);
					}
					this.SendPropertyChanged("Workflow");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HtmlTexts(HtmlText entity)
		{
			this.SendPropertyChanging();
			entity.WorkflowState = this;
		}
		
		private void detach_HtmlTexts(HtmlText entity)
		{
			this.SendPropertyChanging();
			entity.WorkflowState = null;
		}
		
		private void attach_HtmlTextLogs(HtmlTextLog entity)
		{
			this.SendPropertyChanging();
			entity.WorkflowState = this;
		}
		
		private void detach_HtmlTextLogs(HtmlTextLog entity)
		{
			this.SendPropertyChanging();
			entity.WorkflowState = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.zBaseSalary")]
	public partial class zBaseSalary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BaseID;
		
		private string _ScaleID;
		
		private System.Nullable<int> _SalaryLevel;
		
		private System.Nullable<double> _SalaryBase;
		
		private EntityRef<zScaleSalary> _zScaleSalary;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBaseIDChanging(string value);
    partial void OnBaseIDChanged();
    partial void OnScaleIDChanging(string value);
    partial void OnScaleIDChanged();
    partial void OnSalaryLevelChanging(System.Nullable<int> value);
    partial void OnSalaryLevelChanged();
    partial void OnSalaryBaseChanging(System.Nullable<double> value);
    partial void OnSalaryBaseChanged();
    #endregion
		
		public zBaseSalary()
		{
			this._zScaleSalary = default(EntityRef<zScaleSalary>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseID", DbType="VarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string BaseID
		{
			get
			{
				return this._BaseID;
			}
			set
			{
				if ((this._BaseID != value))
				{
					this.OnBaseIDChanging(value);
					this.SendPropertyChanging();
					this._BaseID = value;
					this.SendPropertyChanged("BaseID");
					this.OnBaseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScaleID", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string ScaleID
		{
			get
			{
				return this._ScaleID;
			}
			set
			{
				if ((this._ScaleID != value))
				{
					if (this._zScaleSalary.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScaleIDChanging(value);
					this.SendPropertyChanging();
					this._ScaleID = value;
					this.SendPropertyChanged("ScaleID");
					this.OnScaleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalaryLevel", DbType="Int")]
		public System.Nullable<int> SalaryLevel
		{
			get
			{
				return this._SalaryLevel;
			}
			set
			{
				if ((this._SalaryLevel != value))
				{
					this.OnSalaryLevelChanging(value);
					this.SendPropertyChanging();
					this._SalaryLevel = value;
					this.SendPropertyChanged("SalaryLevel");
					this.OnSalaryLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalaryBase", DbType="Float")]
		public System.Nullable<double> SalaryBase
		{
			get
			{
				return this._SalaryBase;
			}
			set
			{
				if ((this._SalaryBase != value))
				{
					this.OnSalaryBaseChanging(value);
					this.SendPropertyChanging();
					this._SalaryBase = value;
					this.SendPropertyChanged("SalaryBase");
					this.OnSalaryBaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="zScaleSalary_zBaseSalary", Storage="_zScaleSalary", ThisKey="ScaleID", OtherKey="ScaleID", IsForeignKey=true)]
		public zScaleSalary zScaleSalary
		{
			get
			{
				return this._zScaleSalary.Entity;
			}
			set
			{
				zScaleSalary previousValue = this._zScaleSalary.Entity;
				if (((previousValue != value) 
							|| (this._zScaleSalary.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._zScaleSalary.Entity = null;
						previousValue.zBaseSalaries.Remove(this);
					}
					this._zScaleSalary.Entity = value;
					if ((value != null))
					{
						value.zBaseSalaries.Add(this);
						this._ScaleID = value.ScaleID;
					}
					else
					{
						this._ScaleID = default(string);
					}
					this.SendPropertyChanged("zScaleSalary");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.zCatalogues")]
	public partial class zCatalogue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CatID;
		
		private string _CatName;
		
		private EntitySet<zNew> _zNews;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCatIDChanging(int value);
    partial void OnCatIDChanged();
    partial void OnCatNameChanging(string value);
    partial void OnCatNameChanged();
    #endregion
		
		public zCatalogue()
		{
			this._zNews = new EntitySet<zNew>(new Action<zNew>(this.attach_zNews), new Action<zNew>(this.detach_zNews));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CatID
		{
			get
			{
				return this._CatID;
			}
			set
			{
				if ((this._CatID != value))
				{
					this.OnCatIDChanging(value);
					this.SendPropertyChanging();
					this._CatID = value;
					this.SendPropertyChanged("CatID");
					this.OnCatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatName", DbType="NVarChar(128)")]
		public string CatName
		{
			get
			{
				return this._CatName;
			}
			set
			{
				if ((this._CatName != value))
				{
					this.OnCatNameChanging(value);
					this.SendPropertyChanging();
					this._CatName = value;
					this.SendPropertyChanged("CatName");
					this.OnCatNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="zCatalogue_zNew", Storage="_zNews", ThisKey="CatID", OtherKey="CatID")]
		public EntitySet<zNew> zNews
		{
			get
			{
				return this._zNews;
			}
			set
			{
				this._zNews.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_zNews(zNew entity)
		{
			this.SendPropertyChanging();
			entity.zCatalogue = this;
		}
		
		private void detach_zNews(zNew entity)
		{
			this.SendPropertyChanging();
			entity.zCatalogue = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.zCity")]
	public partial class zCity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CityID;
		
		private string _CityName;
		
		private string _CityAbbr;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCityIDChanging(int value);
    partial void OnCityIDChanged();
    partial void OnCityNameChanging(string value);
    partial void OnCityNameChanged();
    partial void OnCityAbbrChanging(string value);
    partial void OnCityAbbrChanged();
    #endregion
		
		public zCity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CityID
		{
			get
			{
				return this._CityID;
			}
			set
			{
				if ((this._CityID != value))
				{
					this.OnCityIDChanging(value);
					this.SendPropertyChanging();
					this._CityID = value;
					this.SendPropertyChanged("CityID");
					this.OnCityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityName", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string CityName
		{
			get
			{
				return this._CityName;
			}
			set
			{
				if ((this._CityName != value))
				{
					this.OnCityNameChanging(value);
					this.SendPropertyChanging();
					this._CityName = value;
					this.SendPropertyChanged("CityName");
					this.OnCityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityAbbr", DbType="VarChar(64)")]
		public string CityAbbr
		{
			get
			{
				return this._CityAbbr;
			}
			set
			{
				if ((this._CityAbbr != value))
				{
					this.OnCityAbbrChanging(value);
					this.SendPropertyChanging();
					this._CityAbbr = value;
					this.SendPropertyChanged("CityAbbr");
					this.OnCityAbbrChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.zConfig")]
	public partial class zConfig
	{
		
		private string _ConfigName;
		
		private string _Value;
		
		public zConfig()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfigName", DbType="NVarChar(128)")]
		public string ConfigName
		{
			get
			{
				return this._ConfigName;
			}
			set
			{
				if ((this._ConfigName != value))
				{
					this._ConfigName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(128)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this._Value = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.zDepartments")]
	public partial class zDepartment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DepartmentID;
		
		private int _InstituteID;
		
		private string _DepartmentName;
		
		private string _DepartmentPhone;
		
		private string _DepartmentFax;
		
		private string _DepartmentDetail;
		
		private EntityRef<zInstitute> _zInstitute;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDepartmentIDChanging(int value);
    partial void OnDepartmentIDChanged();
    partial void OnInstituteIDChanging(int value);
    partial void OnInstituteIDChanged();
    partial void OnDepartmentNameChanging(string value);
    partial void OnDepartmentNameChanged();
    partial void OnDepartmentPhoneChanging(string value);
    partial void OnDepartmentPhoneChanged();
    partial void OnDepartmentFaxChanging(string value);
    partial void OnDepartmentFaxChanged();
    partial void OnDepartmentDetailChanging(string value);
    partial void OnDepartmentDetailChanged();
    #endregion
		
		public zDepartment()
		{
			this._zInstitute = default(EntityRef<zInstitute>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					this.OnDepartmentIDChanging(value);
					this.SendPropertyChanging();
					this._DepartmentID = value;
					this.SendPropertyChanged("DepartmentID");
					this.OnDepartmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstituteID", DbType="Int NOT NULL")]
		public int InstituteID
		{
			get
			{
				return this._InstituteID;
			}
			set
			{
				if ((this._InstituteID != value))
				{
					if (this._zInstitute.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstituteIDChanging(value);
					this.SendPropertyChanging();
					this._InstituteID = value;
					this.SendPropertyChanged("InstituteID");
					this.OnInstituteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="NVarChar(256)")]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this.OnDepartmentNameChanging(value);
					this.SendPropertyChanging();
					this._DepartmentName = value;
					this.SendPropertyChanged("DepartmentName");
					this.OnDepartmentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentPhone", DbType="VarChar(13)")]
		public string DepartmentPhone
		{
			get
			{
				return this._DepartmentPhone;
			}
			set
			{
				if ((this._DepartmentPhone != value))
				{
					this.OnDepartmentPhoneChanging(value);
					this.SendPropertyChanging();
					this._DepartmentPhone = value;
					this.SendPropertyChanged("DepartmentPhone");
					this.OnDepartmentPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentFax", DbType="VarChar(13)")]
		public string DepartmentFax
		{
			get
			{
				return this._DepartmentFax;
			}
			set
			{
				if ((this._DepartmentFax != value))
				{
					this.OnDepartmentFaxChanging(value);
					this.SendPropertyChanging();
					this._DepartmentFax = value;
					this.SendPropertyChanged("DepartmentFax");
					this.OnDepartmentFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentDetail", DbType="NVarChar(256)")]
		public string DepartmentDetail
		{
			get
			{
				return this._DepartmentDetail;
			}
			set
			{
				if ((this._DepartmentDetail != value))
				{
					this.OnDepartmentDetailChanging(value);
					this.SendPropertyChanging();
					this._DepartmentDetail = value;
					this.SendPropertyChanged("DepartmentDetail");
					this.OnDepartmentDetailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="zInstitute_zDepartment", Storage="_zInstitute", ThisKey="InstituteID", OtherKey="InstituteID", IsForeignKey=true)]
		public zInstitute zInstitute
		{
			get
			{
				return this._zInstitute.Entity;
			}
			set
			{
				zInstitute previousValue = this._zInstitute.Entity;
				if (((previousValue != value) 
							|| (this._zInstitute.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._zInstitute.Entity = null;
						previousValue.zDepartments.Remove(this);
					}
					this._zInstitute.Entity = value;
					if ((value != null))
					{
						value.zDepartments.Add(this);
						this._InstituteID = value.InstituteID;
					}
					else
					{
						this._InstituteID = default(int);
					}
					this.SendPropertyChanged("zInstitute");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.zDiplomas")]
	public partial class zDiploma : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DiplomaID;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDiplomaIDChanging(int value);
    partial void OnDiplomaIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public zDiploma()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiplomaID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DiplomaID
		{
			get
			{
				return this._DiplomaID;
			}
			set
			{
				if ((this._DiplomaID != value))
				{
					this.OnDiplomaIDChanging(value);
					this.SendPropertyChanging();
					this._DiplomaID = value;
					this.SendPropertyChanged("DiplomaID");
					this.OnDiplomaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(128)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.zEthnic")]
	public partial class zEthnic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EthnicID;
		
		private string _EthnicName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEthnicIDChanging(int value);
    partial void OnEthnicIDChanged();
    partial void OnEthnicNameChanging(string value);
    partial void OnEthnicNameChanged();
    #endregion
		
		public zEthnic()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EthnicID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int EthnicID
		{
			get
			{
				return this._EthnicID;
			}
			set
			{
				if ((this._EthnicID != value))
				{
					this.OnEthnicIDChanging(value);
					this.SendPropertyChanging();
					this._EthnicID = value;
					this.SendPropertyChanged("EthnicID");
					this.OnEthnicIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EthnicName", DbType="NVarChar(128)")]
		public string EthnicName
		{
			get
			{
				return this._EthnicName;
			}
			set
			{
				if ((this._EthnicName != value))
				{
					this.OnEthnicNameChanging(value);
					this.SendPropertyChanging();
					this._EthnicName = value;
					this.SendPropertyChanged("EthnicName");
					this.OnEthnicNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.zExtra")]
	public partial class zExtra : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ExtraID;
		
		private System.Nullable<double> _ExtraBase;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExtraIDChanging(string value);
    partial void OnExtraIDChanged();
    partial void OnExtraBaseChanging(System.Nullable<double> value);
    partial void OnExtraBaseChanged();
    #endregion
		
		public zExtra()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtraID", DbType="VarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ExtraID
		{
			get
			{
				return this._ExtraID;
			}
			set
			{
				if ((this._ExtraID != value))
				{
					this.OnExtraIDChanging(value);
					this.SendPropertyChanging();
					this._ExtraID = value;
					this.SendPropertyChanged("ExtraID");
					this.OnExtraIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtraBase", DbType="Float")]
		public System.Nullable<double> ExtraBase
		{
			get
			{
				return this._ExtraBase;
			}
			set
			{
				if ((this._ExtraBase != value))
				{
					this.OnExtraBaseChanging(value);
					this.SendPropertyChanging();
					this._ExtraBase = value;
					this.SendPropertyChanged("ExtraBase");
					this.OnExtraBaseChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.zFamily")]
	public partial class zFamily : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FamilyID;
		
		private int _UserID;
		
		private string _FamilyName;
		
		private System.Nullable<System.DateTime> _FamilyDOB;
		
		private string _FamilyPhone;
		
		private string _FamilyAddr;
		
		private string _RelationType;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFamilyIDChanging(int value);
    partial void OnFamilyIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnFamilyNameChanging(string value);
    partial void OnFamilyNameChanged();
    partial void OnFamilyDOBChanging(System.Nullable<System.DateTime> value);
    partial void OnFamilyDOBChanged();
    partial void OnFamilyPhoneChanging(string value);
    partial void OnFamilyPhoneChanged();
    partial void OnFamilyAddrChanging(string value);
    partial void OnFamilyAddrChanged();
    partial void OnRelationTypeChanging(string value);
    partial void OnRelationTypeChanged();
    #endregion
		
		public zFamily()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FamilyID
		{
			get
			{
				return this._FamilyID;
			}
			set
			{
				if ((this._FamilyID != value))
				{
					this.OnFamilyIDChanging(value);
					this.SendPropertyChanging();
					this._FamilyID = value;
					this.SendPropertyChanged("FamilyID");
					this.OnFamilyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyName", DbType="NVarChar(128)")]
		public string FamilyName
		{
			get
			{
				return this._FamilyName;
			}
			set
			{
				if ((this._FamilyName != value))
				{
					this.OnFamilyNameChanging(value);
					this.SendPropertyChanging();
					this._FamilyName = value;
					this.SendPropertyChanged("FamilyName");
					this.OnFamilyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyDOB", DbType="DateTime")]
		public System.Nullable<System.DateTime> FamilyDOB
		{
			get
			{
				return this._FamilyDOB;
			}
			set
			{
				if ((this._FamilyDOB != value))
				{
					this.OnFamilyDOBChanging(value);
					this.SendPropertyChanging();
					this._FamilyDOB = value;
					this.SendPropertyChanged("FamilyDOB");
					this.OnFamilyDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyPhone", DbType="VarChar(13)")]
		public string FamilyPhone
		{
			get
			{
				return this._FamilyPhone;
			}
			set
			{
				if ((this._FamilyPhone != value))
				{
					this.OnFamilyPhoneChanging(value);
					this.SendPropertyChanging();
					this._FamilyPhone = value;
					this.SendPropertyChanged("FamilyPhone");
					this.OnFamilyPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyAddr", DbType="NVarChar(256)")]
		public string FamilyAddr
		{
			get
			{
				return this._FamilyAddr;
			}
			set
			{
				if ((this._FamilyAddr != value))
				{
					this.OnFamilyAddrChanging(value);
					this.SendPropertyChanging();
					this._FamilyAddr = value;
					this.SendPropertyChanged("FamilyAddr");
					this.OnFamilyAddrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelationType", DbType="NVarChar(128)")]
		public string RelationType
		{
			get
			{
				return this._RelationType;
			}
			set
			{
				if ((this._RelationType != value))
				{
					this.OnRelationTypeChanging(value);
					this.SendPropertyChanging();
					this._RelationType = value;
					this.SendPropertyChanged("RelationType");
					this.OnRelationTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_zFamily", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.zFamilies.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.zFamilies.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.zInOutBonus")]
	public partial class zInOutBonus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IOEID;
		
		private int _UserID;
		
		private System.Nullable<bool> _IODone;
		
		private System.Nullable<bool> _IOType;
		
		private System.Nullable<System.DateTime> _IOTime;
		
		private string _IOMethod;
		
		private string _IOReason;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIOEIDChanging(int value);
    partial void OnIOEIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnIODoneChanging(System.Nullable<bool> value);
    partial void OnIODoneChanged();
    partial void OnIOTypeChanging(System.Nullable<bool> value);
    partial void OnIOTypeChanged();
    partial void OnIOTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnIOTimeChanged();
    partial void OnIOMethodChanging(string value);
    partial void OnIOMethodChanged();
    partial void OnIOReasonChanging(string value);
    partial void OnIOReasonChanged();
    #endregion
		
		public zInOutBonus()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IOEID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IOEID
		{
			get
			{
				return this._IOEID;
			}
			set
			{
				if ((this._IOEID != value))
				{
					this.OnIOEIDChanging(value);
					this.SendPropertyChanging();
					this._IOEID = value;
					this.SendPropertyChanged("IOEID");
					this.OnIOEIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IODone", DbType="Bit")]
		public System.Nullable<bool> IODone
		{
			get
			{
				return this._IODone;
			}
			set
			{
				if ((this._IODone != value))
				{
					this.OnIODoneChanging(value);
					this.SendPropertyChanging();
					this._IODone = value;
					this.SendPropertyChanged("IODone");
					this.OnIODoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IOType", DbType="Bit")]
		public System.Nullable<bool> IOType
		{
			get
			{
				return this._IOType;
			}
			set
			{
				if ((this._IOType != value))
				{
					this.OnIOTypeChanging(value);
					this.SendPropertyChanging();
					this._IOType = value;
					this.SendPropertyChanged("IOType");
					this.OnIOTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IOTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> IOTime
		{
			get
			{
				return this._IOTime;
			}
			set
			{
				if ((this._IOTime != value))
				{
					this.OnIOTimeChanging(value);
					this.SendPropertyChanging();
					this._IOTime = value;
					this.SendPropertyChanged("IOTime");
					this.OnIOTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IOMethod", DbType="NVarChar(256)")]
		public string IOMethod
		{
			get
			{
				return this._IOMethod;
			}
			set
			{
				if ((this._IOMethod != value))
				{
					this.OnIOMethodChanging(value);
					this.SendPropertyChanging();
					this._IOMethod = value;
					this.SendPropertyChanged("IOMethod");
					this.OnIOMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IOReason", DbType="NVarChar(256)")]
		public string IOReason
		{
			get
			{
				return this._IOReason;
			}
			set
			{
				if ((this._IOReason != value))
				{
					this.OnIOReasonChanging(value);
					this.SendPropertyChanging();
					this._IOReason = value;
					this.SendPropertyChanged("IOReason");
					this.OnIOReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_zInOutBonus", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.zInOutBonus.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.zInOutBonus.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.zInstitutes")]
	public partial class zInstitute : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InstituteID;
		
		private string _InstituteName;
		
		private string _InstitutePhone;
		
		private string _InstituteFax;
		
		private string _InstituteDetail;
		
		private EntitySet<zDepartment> _zDepartments;
		
		private EntitySet<zResearch> _zResearches;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInstituteIDChanging(int value);
    partial void OnInstituteIDChanged();
    partial void OnInstituteNameChanging(string value);
    partial void OnInstituteNameChanged();
    partial void OnInstitutePhoneChanging(string value);
    partial void OnInstitutePhoneChanged();
    partial void OnInstituteFaxChanging(string value);
    partial void OnInstituteFaxChanged();
    partial void OnInstituteDetailChanging(string value);
    partial void OnInstituteDetailChanged();
    #endregion
		
		public zInstitute()
		{
			this._zDepartments = new EntitySet<zDepartment>(new Action<zDepartment>(this.attach_zDepartments), new Action<zDepartment>(this.detach_zDepartments));
			this._zResearches = new EntitySet<zResearch>(new Action<zResearch>(this.attach_zResearches), new Action<zResearch>(this.detach_zResearches));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstituteID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int InstituteID
		{
			get
			{
				return this._InstituteID;
			}
			set
			{
				if ((this._InstituteID != value))
				{
					this.OnInstituteIDChanging(value);
					this.SendPropertyChanging();
					this._InstituteID = value;
					this.SendPropertyChanged("InstituteID");
					this.OnInstituteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstituteName", DbType="NVarChar(256)")]
		public string InstituteName
		{
			get
			{
				return this._InstituteName;
			}
			set
			{
				if ((this._InstituteName != value))
				{
					this.OnInstituteNameChanging(value);
					this.SendPropertyChanging();
					this._InstituteName = value;
					this.SendPropertyChanged("InstituteName");
					this.OnInstituteNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutePhone", DbType="VarChar(13)")]
		public string InstitutePhone
		{
			get
			{
				return this._InstitutePhone;
			}
			set
			{
				if ((this._InstitutePhone != value))
				{
					this.OnInstitutePhoneChanging(value);
					this.SendPropertyChanging();
					this._InstitutePhone = value;
					this.SendPropertyChanged("InstitutePhone");
					this.OnInstitutePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstituteFax", DbType="VarChar(13)")]
		public string InstituteFax
		{
			get
			{
				return this._InstituteFax;
			}
			set
			{
				if ((this._InstituteFax != value))
				{
					this.OnInstituteFaxChanging(value);
					this.SendPropertyChanging();
					this._InstituteFax = value;
					this.SendPropertyChanged("InstituteFax");
					this.OnInstituteFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstituteDetail", DbType="NVarChar(256)")]
		public string InstituteDetail
		{
			get
			{
				return this._InstituteDetail;
			}
			set
			{
				if ((this._InstituteDetail != value))
				{
					this.OnInstituteDetailChanging(value);
					this.SendPropertyChanging();
					this._InstituteDetail = value;
					this.SendPropertyChanged("InstituteDetail");
					this.OnInstituteDetailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="zInstitute_zDepartment", Storage="_zDepartments", ThisKey="InstituteID", OtherKey="InstituteID")]
		public EntitySet<zDepartment> zDepartments
		{
			get
			{
				return this._zDepartments;
			}
			set
			{
				this._zDepartments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="zInstitute_zResearch", Storage="_zResearches", ThisKey="InstituteID", OtherKey="InstituteID")]
		public EntitySet<zResearch> zResearches
		{
			get
			{
				return this._zResearches;
			}
			set
			{
				this._zResearches.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_zDepartments(zDepartment entity)
		{
			this.SendPropertyChanging();
			entity.zInstitute = this;
		}
		
		private void detach_zDepartments(zDepartment entity)
		{
			this.SendPropertyChanging();
			entity.zInstitute = null;
		}
		
		private void attach_zResearches(zResearch entity)
		{
			this.SendPropertyChanging();
			entity.zInstitute = this;
		}
		
		private void detach_zResearches(zResearch entity)
		{
			this.SendPropertyChanging();
			entity.zInstitute = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.zNews")]
	public partial class zNew : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NewsID;
		
		private int _UserID;
		
		private int _CatID;
		
		private string _Content;
		
		private string _Title;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private EntityRef<zCatalogue> _zCatalogue;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNewsIDChanging(int value);
    partial void OnNewsIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnCatIDChanging(int value);
    partial void OnCatIDChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public zNew()
		{
			this._zCatalogue = default(EntityRef<zCatalogue>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NewsID
		{
			get
			{
				return this._NewsID;
			}
			set
			{
				if ((this._NewsID != value))
				{
					this.OnNewsIDChanging(value);
					this.SendPropertyChanging();
					this._NewsID = value;
					this.SendPropertyChanged("NewsID");
					this.OnNewsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatID", DbType="Int NOT NULL")]
		public int CatID
		{
			get
			{
				return this._CatID;
			}
			set
			{
				if ((this._CatID != value))
				{
					if (this._zCatalogue.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCatIDChanging(value);
					this.SendPropertyChanging();
					this._CatID = value;
					this.SendPropertyChanged("CatID");
					this.OnCatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="zCatalogue_zNew", Storage="_zCatalogue", ThisKey="CatID", OtherKey="CatID", IsForeignKey=true)]
		public zCatalogue zCatalogue
		{
			get
			{
				return this._zCatalogue.Entity;
			}
			set
			{
				zCatalogue previousValue = this._zCatalogue.Entity;
				if (((previousValue != value) 
							|| (this._zCatalogue.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._zCatalogue.Entity = null;
						previousValue.zNews.Remove(this);
					}
					this._zCatalogue.Entity = value;
					if ((value != null))
					{
						value.zNews.Add(this);
						this._CatID = value.CatID;
					}
					else
					{
						this._CatID = default(int);
					}
					this.SendPropertyChanged("zCatalogue");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_zNew", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.zNews.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.zNews.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.zOffice")]
	public partial class zOffice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OfficeID;
		
		private string _OfficeName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOfficeIDChanging(int value);
    partial void OnOfficeIDChanged();
    partial void OnOfficeNameChanging(string value);
    partial void OnOfficeNameChanged();
    #endregion
		
		public zOffice()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OfficeID
		{
			get
			{
				return this._OfficeID;
			}
			set
			{
				if ((this._OfficeID != value))
				{
					this.OnOfficeIDChanging(value);
					this.SendPropertyChanging();
					this._OfficeID = value;
					this.SendPropertyChanged("OfficeID");
					this.OnOfficeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeName", DbType="NVarChar(256)")]
		public string OfficeName
		{
			get
			{
				return this._OfficeName;
			}
			set
			{
				if ((this._OfficeName != value))
				{
					this.OnOfficeNameChanging(value);
					this.SendPropertyChanging();
					this._OfficeName = value;
					this.SendPropertyChanged("OfficeName");
					this.OnOfficeNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.zResearch")]
	public partial class zResearch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ResearchID;
		
		private string _ResearchName;
		
		private int _UserID;
		
		private int _InstituteID;
		
		private string _ResearchDetail;
		
		private System.Nullable<System.DateTime> _StartTime;
		
		private System.Nullable<System.DateTime> _FinishTime;
		
		private int _StateID;
		
		private EntityRef<zInstitute> _zInstitute;
		
		private EntityRef<User> _User;
		
		private EntityRef<zResearchState> _zResearchState;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnResearchIDChanging(int value);
    partial void OnResearchIDChanged();
    partial void OnResearchNameChanging(string value);
    partial void OnResearchNameChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnInstituteIDChanging(int value);
    partial void OnInstituteIDChanged();
    partial void OnResearchDetailChanging(string value);
    partial void OnResearchDetailChanged();
    partial void OnStartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnStartTimeChanged();
    partial void OnFinishTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnFinishTimeChanged();
    partial void OnStateIDChanging(int value);
    partial void OnStateIDChanged();
    #endregion
		
		public zResearch()
		{
			this._zInstitute = default(EntityRef<zInstitute>);
			this._User = default(EntityRef<User>);
			this._zResearchState = default(EntityRef<zResearchState>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResearchID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ResearchID
		{
			get
			{
				return this._ResearchID;
			}
			set
			{
				if ((this._ResearchID != value))
				{
					this.OnResearchIDChanging(value);
					this.SendPropertyChanging();
					this._ResearchID = value;
					this.SendPropertyChanged("ResearchID");
					this.OnResearchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResearchName", DbType="NVarChar(256)")]
		public string ResearchName
		{
			get
			{
				return this._ResearchName;
			}
			set
			{
				if ((this._ResearchName != value))
				{
					this.OnResearchNameChanging(value);
					this.SendPropertyChanging();
					this._ResearchName = value;
					this.SendPropertyChanged("ResearchName");
					this.OnResearchNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstituteID", DbType="Int NOT NULL")]
		public int InstituteID
		{
			get
			{
				return this._InstituteID;
			}
			set
			{
				if ((this._InstituteID != value))
				{
					if (this._zInstitute.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstituteIDChanging(value);
					this.SendPropertyChanging();
					this._InstituteID = value;
					this.SendPropertyChanged("InstituteID");
					this.OnInstituteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResearchDetail", DbType="NVarChar(1024)")]
		public string ResearchDetail
		{
			get
			{
				return this._ResearchDetail;
			}
			set
			{
				if ((this._ResearchDetail != value))
				{
					this.OnResearchDetailChanging(value);
					this.SendPropertyChanging();
					this._ResearchDetail = value;
					this.SendPropertyChanged("ResearchDetail");
					this.OnResearchDetailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinishTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> FinishTime
		{
			get
			{
				return this._FinishTime;
			}
			set
			{
				if ((this._FinishTime != value))
				{
					this.OnFinishTimeChanging(value);
					this.SendPropertyChanging();
					this._FinishTime = value;
					this.SendPropertyChanged("FinishTime");
					this.OnFinishTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int NOT NULL")]
		public int StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					if (this._zResearchState.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStateIDChanging(value);
					this.SendPropertyChanging();
					this._StateID = value;
					this.SendPropertyChanged("StateID");
					this.OnStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="zInstitute_zResearch", Storage="_zInstitute", ThisKey="InstituteID", OtherKey="InstituteID", IsForeignKey=true)]
		public zInstitute zInstitute
		{
			get
			{
				return this._zInstitute.Entity;
			}
			set
			{
				zInstitute previousValue = this._zInstitute.Entity;
				if (((previousValue != value) 
							|| (this._zInstitute.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._zInstitute.Entity = null;
						previousValue.zResearches.Remove(this);
					}
					this._zInstitute.Entity = value;
					if ((value != null))
					{
						value.zResearches.Add(this);
						this._InstituteID = value.InstituteID;
					}
					else
					{
						this._InstituteID = default(int);
					}
					this.SendPropertyChanged("zInstitute");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_zResearch", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.zResearches.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.zResearches.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="zResearchState_zResearch", Storage="_zResearchState", ThisKey="StateID", OtherKey="StateID", IsForeignKey=true)]
		public zResearchState zResearchState
		{
			get
			{
				return this._zResearchState.Entity;
			}
			set
			{
				zResearchState previousValue = this._zResearchState.Entity;
				if (((previousValue != value) 
							|| (this._zResearchState.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._zResearchState.Entity = null;
						previousValue.zResearches.Remove(this);
					}
					this._zResearchState.Entity = value;
					if ((value != null))
					{
						value.zResearches.Add(this);
						this._StateID = value.StateID;
					}
					else
					{
						this._StateID = default(int);
					}
					this.SendPropertyChanged("zResearchState");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.zResearchState")]
	public partial class zResearchState : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StateID;
		
		private string _StateName;
		
		private EntitySet<zResearch> _zResearches;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStateIDChanging(int value);
    partial void OnStateIDChanged();
    partial void OnStateNameChanging(string value);
    partial void OnStateNameChanged();
    #endregion
		
		public zResearchState()
		{
			this._zResearches = new EntitySet<zResearch>(new Action<zResearch>(this.attach_zResearches), new Action<zResearch>(this.detach_zResearches));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					this.OnStateIDChanging(value);
					this.SendPropertyChanging();
					this._StateID = value;
					this.SendPropertyChanged("StateID");
					this.OnStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateName", DbType="NVarChar(64)")]
		public string StateName
		{
			get
			{
				return this._StateName;
			}
			set
			{
				if ((this._StateName != value))
				{
					this.OnStateNameChanging(value);
					this.SendPropertyChanging();
					this._StateName = value;
					this.SendPropertyChanged("StateName");
					this.OnStateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="zResearchState_zResearch", Storage="_zResearches", ThisKey="StateID", OtherKey="StateID")]
		public EntitySet<zResearch> zResearches
		{
			get
			{
				return this._zResearches;
			}
			set
			{
				this._zResearches.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_zResearches(zResearch entity)
		{
			this.SendPropertyChanging();
			entity.zResearchState = this;
		}
		
		private void detach_zResearches(zResearch entity)
		{
			this.SendPropertyChanging();
			entity.zResearchState = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.zSalaryLog")]
	public partial class zSalaryLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LogID;
		
		private int _UserID;
		
		private System.Nullable<System.DateTime> _ModifiedTime;
		
		private System.Nullable<decimal> _NewSalary;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogIDChanging(int value);
    partial void OnLogIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnModifiedTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedTimeChanged();
    partial void OnNewSalaryChanging(System.Nullable<decimal> value);
    partial void OnNewSalaryChanged();
    #endregion
		
		public zSalaryLog()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LogID
		{
			get
			{
				return this._LogID;
			}
			set
			{
				if ((this._LogID != value))
				{
					this.OnLogIDChanging(value);
					this.SendPropertyChanging();
					this._LogID = value;
					this.SendPropertyChanged("LogID");
					this.OnLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedTime
		{
			get
			{
				return this._ModifiedTime;
			}
			set
			{
				if ((this._ModifiedTime != value))
				{
					this.OnModifiedTimeChanging(value);
					this.SendPropertyChanging();
					this._ModifiedTime = value;
					this.SendPropertyChanged("ModifiedTime");
					this.OnModifiedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewSalary", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> NewSalary
		{
			get
			{
				return this._NewSalary;
			}
			set
			{
				if ((this._NewSalary != value))
				{
					this.OnNewSalaryChanging(value);
					this.SendPropertyChanging();
					this._NewSalary = value;
					this.SendPropertyChanged("NewSalary");
					this.OnNewSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_zSalaryLog", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.zSalaryLogs.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.zSalaryLogs.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.zScaleSalary")]
	public partial class zScaleSalary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ScaleID;
		
		private string _ScaleName;
		
		private EntitySet<zBaseSalary> _zBaseSalaries;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnScaleIDChanging(string value);
    partial void OnScaleIDChanged();
    partial void OnScaleNameChanging(string value);
    partial void OnScaleNameChanged();
    #endregion
		
		public zScaleSalary()
		{
			this._zBaseSalaries = new EntitySet<zBaseSalary>(new Action<zBaseSalary>(this.attach_zBaseSalaries), new Action<zBaseSalary>(this.detach_zBaseSalaries));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScaleID", DbType="VarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ScaleID
		{
			get
			{
				return this._ScaleID;
			}
			set
			{
				if ((this._ScaleID != value))
				{
					this.OnScaleIDChanging(value);
					this.SendPropertyChanging();
					this._ScaleID = value;
					this.SendPropertyChanged("ScaleID");
					this.OnScaleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScaleName", DbType="NVarChar(128)")]
		public string ScaleName
		{
			get
			{
				return this._ScaleName;
			}
			set
			{
				if ((this._ScaleName != value))
				{
					this.OnScaleNameChanging(value);
					this.SendPropertyChanging();
					this._ScaleName = value;
					this.SendPropertyChanged("ScaleName");
					this.OnScaleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="zScaleSalary_zBaseSalary", Storage="_zBaseSalaries", ThisKey="ScaleID", OtherKey="ScaleID")]
		public EntitySet<zBaseSalary> zBaseSalaries
		{
			get
			{
				return this._zBaseSalaries;
			}
			set
			{
				this._zBaseSalaries.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_zBaseSalaries(zBaseSalary entity)
		{
			this.SendPropertyChanging();
			entity.zScaleSalary = this;
		}
		
		private void detach_zBaseSalaries(zBaseSalary entity)
		{
			this.SendPropertyChanging();
			entity.zScaleSalary = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.zStudyProcess")]
	public partial class zStudyProcess : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SPID;
		
		private int _UserID;
		
		private System.Nullable<System.DateTime> _StartTime;
		
		private System.Nullable<System.DateTime> _FinishTime;
		
		private string _StudyAddr;
		
		private string _Detail;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSPIDChanging(int value);
    partial void OnSPIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnStartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnStartTimeChanged();
    partial void OnFinishTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnFinishTimeChanged();
    partial void OnStudyAddrChanging(string value);
    partial void OnStudyAddrChanged();
    partial void OnDetailChanging(string value);
    partial void OnDetailChanged();
    #endregion
		
		public zStudyProcess()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SPID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SPID
		{
			get
			{
				return this._SPID;
			}
			set
			{
				if ((this._SPID != value))
				{
					this.OnSPIDChanging(value);
					this.SendPropertyChanging();
					this._SPID = value;
					this.SendPropertyChanged("SPID");
					this.OnSPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinishTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> FinishTime
		{
			get
			{
				return this._FinishTime;
			}
			set
			{
				if ((this._FinishTime != value))
				{
					this.OnFinishTimeChanging(value);
					this.SendPropertyChanging();
					this._FinishTime = value;
					this.SendPropertyChanged("FinishTime");
					this.OnFinishTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudyAddr", DbType="NVarChar(256)")]
		public string StudyAddr
		{
			get
			{
				return this._StudyAddr;
			}
			set
			{
				if ((this._StudyAddr != value))
				{
					this.OnStudyAddrChanging(value);
					this.SendPropertyChanging();
					this._StudyAddr = value;
					this.SendPropertyChanged("StudyAddr");
					this.OnStudyAddrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Detail", DbType="NVarChar(256)")]
		public string Detail
		{
			get
			{
				return this._Detail;
			}
			set
			{
				if ((this._Detail != value))
				{
					this.OnDetailChanging(value);
					this.SendPropertyChanging();
					this._Detail = value;
					this.SendPropertyChanged("Detail");
					this.OnDetailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_zStudyProcess", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.zStudyProcesses.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.zStudyProcesses.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.zUserDiploma")]
	public partial class zUserDiploma
	{
		
		private int _UserID;
		
		private int _DiplomaID;
		
		private string _GrantedAddr;
		
		private System.Nullable<System.DateTime> _GrantedTime;
		
		public zUserDiploma()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiplomaID", DbType="Int NOT NULL")]
		public int DiplomaID
		{
			get
			{
				return this._DiplomaID;
			}
			set
			{
				if ((this._DiplomaID != value))
				{
					this._DiplomaID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrantedAddr", DbType="NVarChar(256)")]
		public string GrantedAddr
		{
			get
			{
				return this._GrantedAddr;
			}
			set
			{
				if ((this._GrantedAddr != value))
				{
					this._GrantedAddr = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrantedTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> GrantedTime
		{
			get
			{
				return this._GrantedTime;
			}
			set
			{
				if ((this._GrantedTime != value))
				{
					this._GrantedTime = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.zUserSalary")]
	public partial class zUserSalary
	{
		
		private int _UserID;
		
		private string _ExtraID;
		
		private string _BaseID;
		
		public zUserSalary()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtraID", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string ExtraID
		{
			get
			{
				return this._ExtraID;
			}
			set
			{
				if ((this._ExtraID != value))
				{
					this._ExtraID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseID", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string BaseID
		{
			get
			{
				return this._BaseID;
			}
			set
			{
				if ((this._BaseID != value))
				{
					this._BaseID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.zUserWork")]
	public partial class zUserWork
	{
		
		private int _UserID;
		
		private int _DepartmentID;
		
		private int _OfficeID;
		
		private System.Nullable<System.DateTime> _StartTime;
		
		public zUserWork()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="Int NOT NULL")]
		public int DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					this._DepartmentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeID", DbType="Int NOT NULL")]
		public int OfficeID
		{
			get
			{
				return this._OfficeID;
			}
			set
			{
				if ((this._OfficeID != value))
				{
					this._OfficeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this._StartTime = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.zWorkLog")]
	public partial class zWorkLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LogID;
		
		private int _UserID;
		
		private System.Nullable<System.DateTime> _ModifiedTime;
		
		private string _NewWork;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogIDChanging(int value);
    partial void OnLogIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnModifiedTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedTimeChanged();
    partial void OnNewWorkChanging(string value);
    partial void OnNewWorkChanged();
    #endregion
		
		public zWorkLog()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LogID
		{
			get
			{
				return this._LogID;
			}
			set
			{
				if ((this._LogID != value))
				{
					this.OnLogIDChanging(value);
					this.SendPropertyChanging();
					this._LogID = value;
					this.SendPropertyChanged("LogID");
					this.OnLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedTime
		{
			get
			{
				return this._ModifiedTime;
			}
			set
			{
				if ((this._ModifiedTime != value))
				{
					this.OnModifiedTimeChanging(value);
					this.SendPropertyChanging();
					this._ModifiedTime = value;
					this.SendPropertyChanged("ModifiedTime");
					this.OnModifiedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewWork", DbType="NVarChar(256)")]
		public string NewWork
		{
			get
			{
				return this._NewWork;
			}
			set
			{
				if ((this._NewWork != value))
				{
					this.OnNewWorkChanging(value);
					this.SendPropertyChanging();
					this._NewWork = value;
					this.SendPropertyChanged("NewWork");
					this.OnNewWorkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_zWorkLog", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.zWorkLogs.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.zWorkLogs.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
